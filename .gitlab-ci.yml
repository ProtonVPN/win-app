include:
  - project: 'translations/generator'
    ref: master
    file: '/jobs/commit-locales.gitlab-ci.yml'

  - project: 'translations/generator'
    ref: master
    file: '/jobs/sync-crowdin.gitlab-ci.yml'
    
  - project: 'ProtonVPN/qa/test-configuration'
    ref: develop
    file: '/windows-config.yml'
    
  - local: '/.gitlab-ci-templates.yml'

variables:
  PUBLIC_REPO_URL: git@github.com:ProtonVPN/win-app.git
  TEST_ARTIFACT_PATH: src/bin/TestArtifactData/
  TEST_REPORT_PATH: results/
  PROJECT_ID: "13"
  MILESTONE: "Windows"
  FF_USE_FASTZIP: "true"
  TRANSFER_METER_FREQUENCY: "2s"
  ARTIFACT_COMPRESSION_LEVEL: "fastest"
  CACHE_COMPRESSION_LEVEL: "fastest"

stages:
  - release
  - bot # comes from translations/generator job
  - build
  - test
  - build-installer
  - internal-beta
  - publish-to-slack
  - test-setup
  - ui-test
  - test-upload
  - installation-test
  - test-cleanup
  - mirror

build-release:
  extends: .build-script
  only:
    - master
    - /^release.*$/
  variables:
    TYPE: Release
    DEPENDENCIES: publish
    BUILD_PATH: src/bin/win-x64/publish
  
build-debug:
  extends: .build-script
  except:
    - master
    - /^release.*$/
  variables:
    TYPE: Debug
    DEPENDENCIES: publish
    BUILD_PATH: src/bin/win-x64/publish
    
build-bti:
  extends: 
    - .build-script
    - .build-bti-vars
  when: manual
  except:
    - master
    - /^release.*$/
  variables:
    TYPE: Debug
    DEPENDENCIES: publish-BTI
    BUILD_PATH: src/bin/win-x64/BTI/publish

ui-test:
  extends: .test_execution_script
  variables:
    CATEGORY: "UI"
    
connection-test:
  extends: .test_execution_script
  variables:
    CATEGORY: "Connection"
    
win-11-test:
  extends: .test_execution_script
  when: manual
  tags:
    - win11
  variables:
    CATEGORY: "Smoke"

tests:
  stage: test
  tags:
    - windows-dot-net
  script:
    - cmd.exe /c BuildDependencies.bat bin gosrponly
    - dotnet restore ProtonVpn.sln
    - dotnet build ProtonVpn.sln
    - coverlet src\bin --target "dotnet" --targetargs "test ProtonVpn.sln -l ""console;verbosity=normal"" --filter ""TestCategory!=UI&TestCategory!=Connection&TestCategory!=Performance"" --no-restore --no-build" --format cobertura --output .\coverage-reports --exclude "[*.Tests*]*" --exclude "[ProtonVPN.MarkupValidator]*" --exclude "[TestTools*]*" --exclude "[*.Installers]*"
    - powershell -Command "(gc coverage-reports.cobertura.xml) -replace '\\', '/' | Out-File -encoding UTF8 cobertura.xml"
    - ReportGenerator.exe "-reports:cobertura.xml" "-targetdir:.\code-coverage-report-html"
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
  coverage: '/Total.*?([0-9]{1,3}.[0-9]{1,3})%/'

build-installer:
  dependencies:
    - build-debug
    - build-release
  extends: 
    - .build-installer
  variables:
    BUILD_PATH: src/bin/win-x64/publish
    
build-BTI-installer:
  dependencies:
    - build-bti
  when: manual
  extends: 
    - .build-installer
  variables:
    BUILD_PATH: src/bin/win-x64/BTI/publish
    
prepare-internal-beta-release:
  stage: internal-beta
  tags:
    - windows-dot-net
  when: manual
  script:
    - python -m pip install -r ci\python-libs.txt
    - python ci\test-scripts\prepare-internal-beta.py
  only:
    - /^release.*$/
    
mirror:
  stage: mirror
  tags:
    - windows
  only:
    refs:
      - tags
      - master
  script:
    - python ci\build-scripts\main.py prepare-ssh $env:SSH_PRIVATE_KEY
    - ssh-keyscan -t rsa github.com | Set-Content "$env:userprofile\.ssh\known_hosts"
    - git clone "$CI_REPOSITORY_URL" --branch master _APP_CLONE;
    - cd _APP_CLONE
    - git remote add public $PUBLIC_REPO_URL
    - git push public master
    - git push public "$(git describe --abbrev=0)"

i18n-sync-crowdin:
  when: manual
  variables:
    I18N_SYNC_CROWDIN_PROJECT: 'windows-vpn'
  extends: .i18n-sync-crowdin-common

i18n-manual-sync-crowdin:
  when: manual
  only:
    - branches
  variables:
    I18N_SYNC_CROWDIN_PROJECT: 'windows-vpn'
  extends: .i18n-sync-crowdin-common

i18n-commit-translations:
  extends: .i18n-commit-locales-shared
  variables:
    I18N_COMMIT_CROWDIN_PROJECT: 'windows-vpn'
  before_script:
    - git config --global core.autocrlf false

create-release:
  image: debian:stable-slim
  stage: release
  when: manual
  only:
    refs:
      - develop
      - develop-v2
  script:
    - apt-get update && apt-get install -y python3 python3-pip git
    - python3 ci/build-scripts/release.py

send-slack-notification:
  tags:
    - windows
  only:
    refs:
      - develop
  stage: publish-to-slack
  script:
    - python -m pip install -r ci\python-libs.txt
    - python ci\build-scripts\main.py send-slack-notification