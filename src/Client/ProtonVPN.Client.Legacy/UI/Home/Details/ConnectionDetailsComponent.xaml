<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Client.Legacy.UI.Home.Details.ConnectionDetailsComponent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="using:ProtonVPN.Client.Common.UI.Controls"
             xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:details="using:ProtonVPN.Client.Legacy.UI.Home.Details"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
             xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
             x:DefaultBindMode="OneWay"
             mc:Ignorable="d">

    <UserControl.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="./Styles/ConnectionDetailsStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="InfoGhostButtonStyle" BasedOn="{StaticResource SecondaryGhostButtonStyle}" TargetType="custom:GhostButton">
                <Setter Property="Margin" Value="0,-54" />
                <Setter Property="ToolTipService.ToolTip" Value="{x:Bind ViewModel.Localizer.Get('Common_Links_LearnMore')}" />
                <Setter Property="AutomationProperties.FullDescription" Value="{x:Bind ViewModel.Localizer.Get('Common_Links_LearnMore')}" />
            </Style>

        </ResourceDictionary>

    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                  VerticalScrollBarVisibility="Auto">
        <StackPanel Orientation="Vertical"
                    Spacing="12">

            <details:IpAddressComponent TabIndex="1" />

            <StackPanel Orientation="Vertical"
                        TabFocusNavigation="Local"
                        TabIndex="2">

                <toolkit:HeaderedContentControl Header="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_ConnectedFor')}"
                                                Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.SessionLength, Converter={StaticResource NotNullToVisibilityConverter}}">
                    <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                               Text="{x:Bind ViewModel.FormattedSessionLength}" />
                </toolkit:HeaderedContentControl>

                <toolkit:HeaderedContentControl Header="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_Gateway')}"
                                                Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.HasGateway, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                               Text="{x:Bind ViewModel.Gateway}" />
                </toolkit:HeaderedContentControl>

                <toolkit:HeaderedContentControl Header="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_Country')}"
                                                Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.HasCountry, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <toolkit:HeaderedContentControl.Content>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                                       Text="{x:Bind ViewModel.Country}" />
                            <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                       Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                                       Text="{x:Bind ViewModel.SecureCoreLabel}"
                                       Visibility="{x:Bind ViewModel.IsSecureCore, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </StackPanel>
                    </toolkit:HeaderedContentControl.Content>
                </toolkit:HeaderedContentControl>

                <toolkit:HeaderedContentControl Header="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_State')}"
                                                Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.HasState, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                               Text="{x:Bind ViewModel.CurrentConnectionDetails.State}" />
                </toolkit:HeaderedContentControl>

                <toolkit:HeaderedContentControl Header="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_City')}"
                                                Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.HasCity, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                               Text="{x:Bind ViewModel.CurrentConnectionDetails.City}" />
                </toolkit:HeaderedContentControl>

                <toolkit:HeaderedContentControl Header="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_Server')}"
                                                Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.HasServer, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                               Text="{x:Bind ViewModel.CurrentConnectionDetails.ServerName}" />
                </toolkit:HeaderedContentControl>

                <toolkit:HeaderedContentControl Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.HasServer, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <toolkit:HeaderedContentControl.Header>
                        <StackPanel Orientation="Horizontal"
                                    Spacing="4">
                            <TextBlock Text="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_ServerLoad')}" />
                            <custom:GhostButton AutomationProperties.AutomationId="ShowServerLoadOverlayButton"
                                                Command="{x:Bind ViewModel.OpenServerLoadOverlayCommand, Mode=OneTime}"
                                                Style="{StaticResource InfoGhostButtonStyle}">
                                <custom:GhostButton.LeftIcon>
                                    <pathicons:InfoCircle Size="Pixels16" />
                                </custom:GhostButton.LeftIcon>
                            </custom:GhostButton>
                        </StackPanel>
                    </toolkit:HeaderedContentControl.Header>
                    <StackPanel Orientation="Horizontal"
                                Spacing="8">
                        <controls:ServerLoadControl Value="{x:Bind ViewModel.ServerLoad}" />
                        <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                                   Text="{x:Bind ViewModel.FormattedServerLoad}" />
                    </StackPanel>
                </toolkit:HeaderedContentControl>

                <toolkit:HeaderedContentControl Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.HasServerLatency, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <toolkit:HeaderedContentControl.Header>
                        <StackPanel Orientation="Horizontal"
                                    Spacing="4">
                            <TextBlock Text="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_Latency')}" />
                            <custom:GhostButton AutomationProperties.AutomationId="ShowLatencyOverlayButton"
                                                Command="{x:Bind ViewModel.OpenLatencyOverlayCommand, Mode=OneTime}"
                                                Style="{StaticResource InfoGhostButtonStyle}">
                                <custom:GhostButton.LeftIcon>
                                    <pathicons:InfoCircle Size="Pixels16" />
                                </custom:GhostButton.LeftIcon>
                            </custom:GhostButton>
                        </StackPanel>
                    </toolkit:HeaderedContentControl.Header>
                    <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                               Text="{x:Bind ViewModel.ServerLatency}" />
                </toolkit:HeaderedContentControl>

                <toolkit:HeaderedContentControl Style="{StaticResource ConnectionDetailsHeaderedContentControlStyle}"
                                                Visibility="{x:Bind ViewModel.HasVpnProtocol, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <toolkit:HeaderedContentControl.Header>
                        <StackPanel Orientation="Horizontal"
                                    Spacing="4">
                            <TextBlock Text="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_Protocol')}" />
                            <custom:GhostButton AutomationProperties.AutomationId="ShowProtocolOverlayButton"
                                                Command="{x:Bind ViewModel.OpenProtocolOverlayCommand, Mode=OneTime}"
                                                Style="{StaticResource InfoGhostButtonStyle}">
                                <custom:GhostButton.LeftIcon>
                                    <pathicons:InfoCircle Size="Pixels16" />
                                </custom:GhostButton.LeftIcon>
                            </custom:GhostButton>
                        </StackPanel>
                    </toolkit:HeaderedContentControl.Header>
                    <TextBlock Style="{StaticResource ConnectionDetailsTextBlockStyle}"
                               Text="{x:Bind ViewModel.VpnProtocol}" />
                </toolkit:HeaderedContentControl>
            </StackPanel>

            <details:VpnSpeedComponent TabIndex="3" />

        </StackPanel>

    </ScrollViewer>

</UserControl>