<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<Page x:Class="ProtonVPN.Client.Legacy.UI.ShellPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:banner="using:ProtonVPN.Client.Legacy.UI.Announcements.Banner"
      xmlns:bases="using:ProtonVPN.Client.Legacy.UI.Sidebar.Bases"
      xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
      xmlns:helpers="using:ProtonVPN.Client.Legacy.Helpers"
      xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
      xmlns:selectors="using:ProtonVPN.Client.Legacy.UI.Sidebar.Selectors"
      xmlns:sidebar="using:ProtonVPN.Client.Legacy.UI.Sidebar"
      x:DefaultBindMode="OneWay"
      NavigationCacheMode="Required">

    <Page.Resources>
        <helpers:IsHeaderVisibleToPaneContentMarginConverter x:Key="IsHeaderVisibleToPaneContentMarginConverter"
                                                             DefaultPaneContentMargin="16" />

        <Thickness x:Key="NavigationViewHeaderMargin">16,16,16,0</Thickness>
        <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,-1</Thickness>
        <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">2,0,0,0</Thickness>
        <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>

        <x:Double x:Key="NavigationPaneCompactWidth">52.0</x:Double>
        <x:Double x:Key="NavigationPaneExpandedModeThresholdWidth">700.0</x:Double>

        <DataTemplate x:Key="SeparatorItemTemplate"
                      x:DataType="sidebar:SidebarSeparatorViewModel">
            <NavigationViewItemSeparator />
        </DataTemplate>

        <DataTemplate x:Key="HeaderItemTemplate"
                      x:DataType="bases:SidebarHeaderViewModelBase">
            <NavigationViewItemHeader AutomationProperties.AutomationControlType="HeaderItem"
                                      AutomationProperties.AutomationId="{x:Bind AutomationId, Mode=OneTime}"
                                      AutomationProperties.Name="{x:Bind AutomationName}"
                                      Content="{x:Bind Header}"
                                      Visibility="{x:Bind IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </DataTemplate>

        <DataTemplate x:Key="PortForwardingItemTemplate"
                      x:DataType="sidebar:SidebarPortForwardingViewModel">
            <custom:SidebarNavigationViewItem AutomationProperties.AutomationControlType="MenuItem"
                                              AutomationProperties.AutomationId="{x:Bind AutomationId, Mode=OneTime}"
                                              AutomationProperties.Name="{x:Bind AutomationName}"
                                              Content="{x:Bind Status}"
                                              Header="{x:Bind Header}"
                                              Icon="{x:Bind Icon}"
                                              IsEnabled="{x:Bind IsEnabled}"
                                              SelectsOnInvoked="{x:Bind IsRestricted, Converter={StaticResource NotBooleanToBooleanConverter}}"
                                              Tag="{x:Bind}"
                                              ToolTipService.ToolTip="{x:Bind ToolTip}"
                                              Visibility="{x:Bind IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <custom:SidebarNavigationViewItem.OnHoverContent>
                    <StackPanel Orientation="Horizontal">
                        <Image Height="20"
                               Source="{ThemeResource VpnPlusIllustrationSource}"
                               Visibility="{x:Bind IsRestricted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <custom:GhostButton Command="{x:Bind CopyPortNumberCommand, Mode=OneTime}"
                                            Visibility="{x:Bind HasActivePortNumber, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <custom:GhostButton.LeftIcon>
                                <pathicons:Squares />
                            </custom:GhostButton.LeftIcon>
                        </custom:GhostButton>
                    </StackPanel>
                </custom:SidebarNavigationViewItem.OnHoverContent>
            </custom:SidebarNavigationViewItem>
        </DataTemplate>

        <DataTemplate x:Key="FeatureNavigationItemTemplate"
                      x:DataType="bases:SidebarNavigationItemViewModelBase">
            <custom:SidebarNavigationViewItem AutomationProperties.AutomationControlType="MenuItem"
                                              AutomationProperties.AutomationId="{x:Bind AutomationId, Mode=OneTime}"
                                              AutomationProperties.Name="{x:Bind AutomationName}"
                                              Content="{x:Bind Status}"
                                              Header="{x:Bind Header}"
                                              Icon="{x:Bind Icon}"
                                              IsEnabled="{x:Bind IsEnabled}"
                                              SelectsOnInvoked="{x:Bind IsRestricted, Converter={StaticResource NotBooleanToBooleanConverter}}"
                                              Tag="{x:Bind}"
                                              ToolTipService.ToolTip="{x:Bind ToolTip}"
                                              Visibility="{x:Bind IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <custom:SidebarNavigationViewItem.OnHoverContent>
                    <Image Height="20"
                           Source="{ThemeResource VpnPlusIllustrationSource}"
                           Visibility="{x:Bind IsRestricted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </custom:SidebarNavigationViewItem.OnHoverContent>
            </custom:SidebarNavigationViewItem>
        </DataTemplate>

        <DataTemplate x:Key="NavigationItemTemplate"
                      x:DataType="bases:SidebarNavigationItemViewModelBase">
            <custom:SidebarNavigationViewItem AutomationProperties.AutomationControlType="MenuItem"
                                              AutomationProperties.AutomationId="{x:Bind AutomationId, Mode=OneTime}"
                                              AutomationProperties.Name="{x:Bind AutomationName}"
                                              Content="{x:Bind Status}"
                                              Header="{x:Bind Header}"
                                              Icon="{x:Bind Icon}"
                                              IsEnabled="{x:Bind IsEnabled}"
                                              SelectsOnInvoked="True"
                                              Tag="{x:Bind}"
                                              ToolTipService.ToolTip="{x:Bind ToolTip}"
                                              Visibility="{x:Bind IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <custom:SidebarNavigationViewItem.OnHoverContent>
                    <Image Height="20"
                           Source="{ThemeResource VpnPlusIllustrationSource}"
                           Visibility="{x:Bind IsRestricted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </custom:SidebarNavigationViewItem.OnHoverContent>
            </custom:SidebarNavigationViewItem>
        </DataTemplate>

        <DataTemplate x:Key="InteractiveItemTemplate"
                      x:DataType="bases:SidebarInteractiveItemViewModelBase">
            <custom:SidebarNavigationViewItem AutomationProperties.AutomationControlType="MenuItem"
                                              AutomationProperties.AutomationId="{x:Bind AutomationId, Mode=OneTime}"
                                              AutomationProperties.Name="{x:Bind AutomationName}"
                                              Content="{x:Bind Status}"
                                              Header="{x:Bind Header}"
                                              Icon="{x:Bind Icon}"
                                              IsEnabled="{x:Bind IsEnabled}"
                                              SelectsOnInvoked="False"
                                              Tag="{x:Bind}"
                                              ToolTipService.ToolTip="{x:Bind ToolTip}"
                                              Visibility="{x:Bind IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <custom:SidebarNavigationViewItem.OnHoverContent>
                    <Image Height="20"
                           Source="{ThemeResource VpnPlusIllustrationSource}"
                           Visibility="{x:Bind IsRestricted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </custom:SidebarNavigationViewItem.OnHoverContent>
            </custom:SidebarNavigationViewItem>
        </DataTemplate>

        <DataTemplate x:Key="AccountItemTemplate"
                      x:DataType="sidebar:SidebarAccountViewModel">
            <NavigationViewItem Padding="0"
                                IsEnabled="{x:Bind IsEnabled}"
                                Style="{StaticResource TransparentNavigationViewItemStyle}"
                                ToolTipService.ToolTip="{x:Bind ToolTip}"
                                Visibility="{x:Bind IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <custom:GhostButton MinWidth="44"
                                    Margin="4,1"
                                    Padding="10,6"
                                    VerticalContentAlignment="Top"
                                    AutomationProperties.AutomationControlType="MenuItem"
                                    AutomationProperties.AutomationId="{x:Bind AutomationId, Mode=OneTime}"
                                    AutomationProperties.Name="{x:Bind AutomationName}"
                                    Foreground="{ThemeResource TextNormColorBrush}"
                                    LeftIcon="{x:Bind Icon}">
                    <StackPanel Orientation="Vertical"
                                Spacing="8"
                                Visibility="{x:Bind IsSidebarOpened, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock Foreground="{ThemeResource TextNormColorBrush}"
                                   Text="{x:Bind Username}"
                                   TextTrimming="CharacterEllipsis" />
                        <StackPanel Orientation="Horizontal"
                                    Spacing="8">
                            <Image Height="20"
                                   Source="{ThemeResource VpnPlusIllustrationSource}"
                                   Visibility="{x:Bind IsPaid, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <TextBlock VerticalAlignment="Center"
                                       Foreground="{ThemeResource TextWeakColorBrush}"
                                       Text="{x:Bind VpnPlan}"
                                       TextTrimming="CharacterEllipsis" />
                        </StackPanel>
                    </StackPanel>
                    <custom:GhostButton.RightIcon>
                        <pathicons:ThreeDotsVertical />
                    </custom:GhostButton.RightIcon>
                    <Button.Flyout>
                        <MenuFlyout Placement="TopEdgeAlignedLeft">
                            <MenuFlyoutItem AutomationProperties.AutomationControlType="MenuItem"
                                            AutomationProperties.AutomationId="Sidebar_Account_Link"
                                            Command="{x:Bind GoToMyAccountCommand, Mode=OneTime}"
                                            Text="{x:Bind Localizer.Get('Home_Account_Title')}">
                                <MenuFlyoutItem.Icon>
                                    <pathicons:User />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem AutomationProperties.AutomationControlType="MenuItem"
                                            AutomationProperties.AutomationId="Sidebar_Account_SignOut"
                                            Command="{x:Bind SignOutCommand, Mode=OneTime}"
                                            Text="{x:Bind Localizer.Get('Home_Account_SignOut')}">
                                <MenuFlyoutItem.Icon>
                                    <pathicons:ArrowOutFromRectangle />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem AutomationProperties.AutomationControlType="MenuItem"
                                            AutomationProperties.AutomationId="Sidebar_Account_Exit"
                                            Command="{x:Bind ExitApplicationCommand, Mode=OneTime}"
                                            Text="{x:Bind Localizer.Get('Tray_Actions_ExitApplication')}">
                                <MenuFlyoutItem.Icon>
                                    <pathicons:CrossBig />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </Button.Flyout>
                </custom:GhostButton>
            </NavigationViewItem>
        </DataTemplate>

        <selectors:SidebarItemTemplateSelector x:Key="SidebarItemTemplateSelector"
                                               AccountItemTemplate="{StaticResource AccountItemTemplate}"
                                               FeatureNavigationItemTemplate="{StaticResource FeatureNavigationItemTemplate}"
                                               HeaderItemTemplate="{StaticResource HeaderItemTemplate}"
                                               InteractiveItemTemplate="{StaticResource InteractiveItemTemplate}"
                                               NavigationItemTemplate="{StaticResource NavigationItemTemplate}"
                                               PortForwardingItemTemplate="{StaticResource PortForwardingItemTemplate}"
                                               SeparatorItemTemplate="{StaticResource SeparatorItemTemplate}" />

    </Page.Resources>

    <NavigationView x:Name="NavigationViewControl"
                    Margin="-1,0,-1,-1"
                    AlwaysShowHeader="False"
                    AutomationProperties.AutomationId="NavigationView"
                    AutomationProperties.LandmarkType="Navigation"
                    Canvas.ZIndex="0"
                    CompactModeThresholdWidth="0"
                    CompactPaneLength="{StaticResource NavigationPaneCompactWidth}"
                    DisplayModeChanged="OnNavigationViewDisplayModeChanged"
                    ExpandedModeThresholdWidth="{StaticResource NavigationPaneExpandedModeThresholdWidth}"
                    FooterMenuItemsSource="{x:Bind ViewModel.FooterMenuItems, Mode=OneTime}"
                    IsBackButtonVisible="Collapsed"
                    IsBackEnabled="{x:Bind ViewModel.IsBackEnabled}"
                    IsPaneOpen="{x:Bind ViewModel.IsNavigationPaneOpened, Mode=TwoWay}"
                    IsPaneToggleButtonVisible="True"
                    IsPaneVisible="True"
                    IsSettingsVisible="False"
                    ItemInvoked="OnNavigationViewItemInvoked"
                    MenuItemTemplateSelector="{StaticResource SidebarItemTemplateSelector}"
                    MenuItemsSource="{x:Bind ViewModel.MenuItems, Mode=OneTime}"
                    OpenPaneLength="{x:Bind ViewModel.NavigationPaneWidth}"
                    PaneDisplayMode="Auto"
                    SelectedItem="{x:Bind ViewModel.SelectedMenuItem}"
                    SizeChanged="OnNavigationViewControlSizeChanged"
                    TabNavigation="Cycle">

        <NavigationView.PaneFooter>

            <StackPanel Spacing="0">
                <banner:AnnouncementBannerComponent IsPaneOpened="{x:Bind NavigationViewControl.IsPaneOpen}" />
            </StackPanel>

        </NavigationView.PaneFooter>

        <Frame x:Name="NavigationFrame"
               Margin="0,-1,0,0">
            <Frame.Resources>
                <Style TargetType="ScrollViewer" BasedOn="{StaticResource OffsetScrollViewer}" />
            </Frame.Resources>
        </Frame>

    </NavigationView>
</Page>