<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Client.UI.Home.Help.HelpComponent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
             xmlns:aprop="using:ProtonVPN.Client.Common.UI.AttachedProperties"
             xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
             xmlns:models="using:ProtonVPN.Client.UI.ReportIssue.Models"
             x:Name="helpComponent"
             x:DefaultBindMode="OneWay"
             mc:Ignorable="d">

    <custom:GhostButton x:Name="gbHelp"
                        Margin="-4,-8"
                        AutomationProperties.AutomationId="HelpButton"
                        Command="{x:Bind ViewModel.ShowCategoriesCommand, Mode=OneTime}"
                        Content="{x:Bind ViewModel.Localizer.Get('Home_Help_Title'), Mode=OneWay}">
        <custom:GhostButton.RightIcon>
            <pathicons:QuestionCircle />
        </custom:GhostButton.RightIcon>
        <custom:GhostButton.Flyout>
            <Flyout Placement="TopEdgeAlignedRight">
                <StackPanel>
                    <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                               Style="{StaticResource CaptionTextBlockStyle}"
                               Text="{x:Bind ViewModel.Localizer.Get('Dialogs_ReportIssue_Header')}" />
                    <ProgressRing Width="24"
                                  Height="24"
                                  Margin="0,16,0,0"
                                  Foreground="{ThemeResource TextNormColorBrush}"
                                  IsActive="{x:Bind ViewModel.HasCategories, Converter={StaticResource NotBooleanToBooleanConverter}}"
                                  Visibility="{x:Bind ViewModel.HasCategories, Converter={StaticResource NotBooleanToVisibilityConverter}}" />
                    <ItemsRepeater Margin="-16,8,-16,-15"
                                   DataContext="{x:Bind ViewModel}"
                                   ItemsSource="{x:Bind ViewModel.Categories}">
                        <ItemsRepeater.ItemTemplate>
                            <DataTemplate x:DataType="models:IssueCategory">
                                <Grid>
                                    <Border x:Name="proxy"
                                            aprop:AncestorSource.AncestorType="ItemsRepeater" />

                                    <MenuFlyoutItem AutomationProperties.AutomationId="IssueCategoryMenuItem"
                                                    Command="{Binding DataContext.DataContext.OpenReportIssueDialogCommand, ElementName=proxy}"
                                                    CommandParameter="{x:Bind}"
                                                    Icon="{x:Bind Icon}"
                                                    Text="{x:Bind Name}" />
                                </Grid>
                            </DataTemplate>
                        </ItemsRepeater.ItemTemplate>
                    </ItemsRepeater>
                </StackPanel>
            </Flyout>
        </custom:GhostButton.Flyout>
    </custom:GhostButton>
</UserControl>