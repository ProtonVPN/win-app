<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<ContentDialog x:Class="ProtonVPN.Client.UI.Home.ConnectionCard.Overlays.ChangeServerOverlayDialog"
               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
               xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
               Padding="24,12,24,24"
               x:DefaultBindMode="OneWay"
               CloseButtonCommand="{x:Bind ViewModel.CloseOverlayCommand}"
               Style="{StaticResource OverlayContentDialogStyle}"
               mc:Ignorable="d">

    <StackPanel HorizontalAlignment="Center"
                Orientation="Vertical"
                Spacing="8">
        <Grid Margin="0,0,0,8"
              HorizontalAlignment="Center">
            <ProgressRing x:Name="CountdownRing"
                          Width="90"
                          Height="90"
                          IsActive="{x:Bind ViewModel.IsChangeServerTimerVisible}"
                          IsIndeterminate="False"
                          Maximum="{x:Bind ViewModel.DelayInSeconds}"
                          Minimum="0"
                          Style="{StaticResource CountdownProgressRingStyle}"
                          Value="{x:Bind ViewModel.RemainingDelayInSeconds}" 
                          AutomationProperties.AutomationId="ChangeServerCountdownProgressRing"/>

            <TextBlock x:Name="CountdownTextBlock"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Foreground="{ThemeResource TextNormColorBrush}"
                       Style="{StaticResource BodyStrongTextBlockStyle}"
                       Text="{x:Bind ViewModel.FormattedRemainingTime}"
                       Visibility="{x:Bind ViewModel.IsChangeServerTimerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Viewbox x:Name="CheckmarkIcon"
                     Width="32"
                     Height="32"
                     Margin="0"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Stretch="Uniform"
                     Visibility="{x:Bind ViewModel.IsChangeServerTimerVisible, Converter={StaticResource NotBooleanToVisibilityConverter}}">
                <pathicons:Checkmark />
            </Viewbox>
        </Grid>

        <StackPanel Margin="0,16"
                    HorizontalAlignment="Center"
                    Orientation="Vertical"
                    Spacing="8"
                    Visibility="{x:Bind ViewModel.IsChangeServerTimerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock HorizontalAlignment="Center"
                       Foreground="{ThemeResource TextNormColorBrush}"
                       Style="{StaticResource BodyLargeTextBlockStyle}"
                       Text="{x:Bind ViewModel.Localizer.Get('Dialogs_ChangeServer_MaximumServerChangesReached')}"
                       TextAlignment="Center"
                       TextWrapping="Wrap"
                       Visibility="{x:Bind ViewModel.IsAttemptsLimitReached, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <TextBlock HorizontalAlignment="Center"
                       Foreground="{ThemeResource TextWeakColorBrush}"
                       Style="{StaticResource BodyTextBlockStyle}"
                       Text="{x:Bind ViewModel.Localizer.Get('Dialogs_ChangeServer_GetUnlimitedServerChanges')}"
                       TextAlignment="Center"
                       TextWrapping="Wrap" />
        </StackPanel>

        <Grid HorizontalAlignment="Center">
            <Button Command="{x:Bind ViewModel.UpgradePlanCommand, Mode=OneTime}"
                    Content="{x:Bind ViewModel.Localizer.Get('Common_Actions_Upgrade')}"
                    Style="{StaticResource PrimaryButtonStyle}"
                    Visibility="{x:Bind ViewModel.IsChangeServerTimerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Button Command="{x:Bind ViewModel.ChangeServerCommand, Mode=OneTime}"
                    Content="{x:Bind ViewModel.Localizer.Get('Home_ConnectionCard_ChangeServer')}"
                    Visibility="{x:Bind ViewModel.IsChangeServerTimerVisible, Converter={StaticResource NotBooleanToVisibilityConverter}}"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ChangeServerStates">
                <VisualState x:Name="UnderChangeServerDelay">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsChangeServerTimerVisible, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CountdownRing.Background" Value="{ThemeResource BorderWeakColorBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState />
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </StackPanel>

</ContentDialog>