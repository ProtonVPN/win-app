<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Client.UI.Home.ConnectionCard.FreeConnectionCardComponent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="using:ProtonVPN.Client.Common.UI.Controls"
             xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:help="using:ProtonVPN.Client.UI.Home.Help"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
             xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
             x:DefaultBindMode="OneWay"
             AutomationProperties.LocalizedLandmarkType="{x:Bind ViewModel.Localizer.Get('Home_ConnectionCard_Landmark')}"
             mc:Ignorable="d">

    <StackPanel Padding="16,16,16,0"
                Orientation="Vertical"
                Spacing="12">
        <Grid ColumnSpacing="12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"
                       AutomationProperties.AutomationId="ConnectionCardHeaderLabel"
                       Foreground="{ThemeResource TextWeakColorBrush}"
                       Style="{StaticResource CaptionTextBlockStyle}"
                       TabIndex="1"
                       Text="{x:Bind ViewModel.Header}" />

            <help:HelpComponent Grid.Column="1"
                                TabIndex="6" />
        </Grid>

        <Grid MinHeight="72"
              Padding="8"
              Background="{ThemeResource BackgroundWeakColorBrush}"
              BorderBrush="{ThemeResource BorderNormColorBrush}"
              BorderThickness="1"
              CornerRadius="8"
              RowSpacing="8">

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <custom:GhostButton x:Name="ShowConnectionDetailsButton"
                                Grid.Row="0"
                                AutomationProperties.AutomationId="ShowConnectionDetailsButton"
                                AutomationProperties.FullDescription="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_Show')}"
                                Style="{StaticResource ConnectionCardGhostButtonStyle}"
                                TabIndex="2">
                <toolkit:DockPanel>
                    <controls:CountryFlagControl Width="30"
                                                 Margin="4,0,0,0"
                                                 VerticalAlignment="Top"
                                                 toolkit:DockPanel.Dock="Left"
                                                 EntryCountryCode="{x:Bind ViewModel.EntryCountry}"
                                                 ExitCountryCode="{x:Bind ViewModel.ExitCountry}"
                                                 IsGateway="{x:Bind ViewModel.IsB2B}"
                                                 IsSecureCore="{x:Bind ViewModel.IsSecureCore}" />
                    <StackPanel Margin="12,0,0,0"
                                Orientation="Vertical"
                                Spacing="4">

                        <toolkit:DockPanel LastChildFill="False">
                            <pathicons:Wrench Grid.Column="4"
                                              Margin="8,4,0,0"
                                              VerticalAlignment="top"
                                              toolkit:DockPanel.Dock="Right"
                                              AutomationProperties.AutomationId="MaintenanceIcon"
                                              Foreground="{ThemeResource TextWeakColorBrush}"
                                              ToolTipService.ToolTip="{x:Bind ViewModel.Localizer.Get('Home_Recents_ServerUnderMaintenance'), Mode=OneWay}"
                                              Visibility="{x:Bind ViewModel.IsServerUnderMaintenance, Mode=OneWay}" />
                            <TextBlock AutomationProperties.AutomationId="ConnectionCardTitleLabel"
                                       Style="{StaticResource BodyStrongTextBlockStyle}"
                                       Text="{x:Bind ViewModel.Title}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="WrapWholeWords" />
                        </toolkit:DockPanel>

                        <toolkit:WrapPanel HorizontalSpacing="6"
                                           Orientation="Horizontal"
                                           VerticalSpacing="4">
                            <TextBlock AutomationProperties.AutomationId="ConnectionCardSubtitleLabel"
                                       Foreground="{ThemeResource TextWeakColorBrush}"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       Text="{x:Bind ViewModel.Subtitle}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="WrapWholeWords"
                                       Visibility="{x:Bind ViewModel.HasSubtitle}" />

                            <StackPanel Orientation="Horizontal"
                                        Spacing="6"
                                        Visibility="{x:Bind ViewModel.ShowFreeConnectionFlags}">
                                <Image Height="14"
                                       VerticalAlignment="Center"
                                       Source="{ThemeResource FreeConnectionFlagsIllustrationSource}" />
                                <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                           Style="{StaticResource CaptionTextBlockStyle}"
                                           Text="{x:Bind ViewModel.FormattedFreeCountriesCount}"
                                           TextTrimming="CharacterEllipsis" />
                            </StackPanel>
                        </toolkit:WrapPanel>
                    </StackPanel>
                </toolkit:DockPanel>
            </custom:GhostButton>

            <Grid Grid.Row="1"
                  ColumnDefinitions="*,*"
                  ColumnSpacing="8">
                <Button Grid.ColumnSpan="2"
                        HorizontalAlignment="Stretch"
                        AutomationProperties.AutomationId="ConnectionCardConnectButton"
                        Command="{x:Bind ViewModel.ConnectCommand}"
                        Content="{x:Bind ViewModel.Localizer.Get('Common_Actions_Connect')}"
                        IsEnabledChanged="OnButtonIsEnabledChanged"
                        Style="{StaticResource PrimaryButtonStyle}"
                        TabIndex="3"
                        Visibility="{x:Bind ViewModel.IsDisconnected, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button Grid.ColumnSpan="2"
                        HorizontalAlignment="Stretch"
                        AutomationProperties.AutomationId="ConnectionCardCancelButton"
                        Command="{x:Bind ViewModel.CancelConnectionCommand}"
                        Content="{x:Bind ViewModel.Localizer.Get('Common_Actions_Cancel')}"
                        IsEnabledChanged="OnButtonIsEnabledChanged"
                        TabIndex="4"
                        Visibility="{x:Bind ViewModel.IsConnecting, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button Grid.Column="0"
                        HorizontalAlignment="Stretch"
                        AutomationProperties.AutomationId="ConnectionCardChangeServerButton"
                        Command="{x:Bind ViewModel.ChangeServerCommand}"
                        Content="Change server"
                        IsEnabledChanged="OnButtonIsEnabledChanged"
                        TabIndex="5"
                        Visibility="{x:Bind ViewModel.IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        AutomationProperties.AutomationId="ConnectionCardDisconnectButton"
                        Command="{x:Bind ViewModel.DisconnectCommand}"
                        Content="{x:Bind ViewModel.Localizer.Get('Common_Actions_Disconnect')}"
                        IsEnabledChanged="OnButtonIsEnabledChanged"
                        TabIndex="6"
                        Visibility="{x:Bind ViewModel.IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="MaintenanceStates">
                <VisualState x:Name="UnderMaintenance">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsServerUnderMaintenance, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShowConnectionDetailsButton.Opacity" Value="0.6" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal" />
            </VisualStateGroup>
            <VisualStateGroup x:Name="ConnectionStates">
                <VisualState x:Name="Disconnected">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsDisconnected, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShowConnectionDetailsButton.(ToolTipService.ToolTip)" Value="{x:Bind ViewModel.Localizer.Get('Home_FreeConnections_About')}"/>
                        <Setter Target="ShowConnectionDetailsButton.Command" Value="{x:Bind ViewModel.ShowAboutFreeConnectionsCommand, Mode=OneTime}"/>
                        <Setter Target="ShowConnectionDetailsButton.RightIcon">
                            <Setter.Value>
                                <pathicons:InfoCircle />
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Connected">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsConnected, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShowConnectionDetailsButton.(ToolTipService.ToolTip)" Value="{x:Bind ViewModel.Localizer.Get('Home_ConnectionDetails_Show')}"/>
                        <Setter Target="ShowConnectionDetailsButton.Command" Value="{x:Bind ViewModel.ShowConnectionDetailsCommand, Mode=OneTime}"/>
                        <Setter Target="ShowConnectionDetailsButton.RightIcon">
                            <Setter.Value>
                                <pathicons:ChevronRight />
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Connecting" >
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsConnecting, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShowConnectionDetailsButton.IsEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState />
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </StackPanel>
</UserControl>