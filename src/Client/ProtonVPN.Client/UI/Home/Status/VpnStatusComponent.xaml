<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Client.UI.Home.Status.VpnStatusComponent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="using:ProtonVPN.Client.Common.UI.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icons="using:ProtonVPN.Client.Common.UI.Assets.Icons"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:netShieldStats="using:ProtonVPN.Client.UI.Home.Status"
             xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
             mc:Ignorable="d">

    <UserControl.Resources>

        <ResourceDictionary>
            <AcrylicBrush x:Key="VpnStatusDetailsBackgroundBrush"
                          FallbackColor="{ThemeResource BackgroundNormColor}"
                          TintColor="{ThemeResource BackgroundNormColor}"
                          TintOpacity="0.5" />

            <Duration x:Key="BackgroundAnimationDuration">0:0:0.5</Duration>
            <Duration x:Key="FadeInOutAnimationDuration">0:0:0.8</Duration>

            <x:Double x:Key="GradientHeight">150.0</x:Double>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid Height="{StaticResource GradientHeight}"
              VerticalAlignment="Top">
            <Border x:Name="OverlayGradient"
                    Background="{ThemeResource GradientFadingColorBrush}" />
            <Border x:Name="StatusGradient"
                    Background="{ThemeResource GradientUnprotectedColorBrush}" />
        </Grid>

        <StackPanel x:Name="RootContainer"
                    HorizontalAlignment="Stretch"
                    Orientation="Vertical"
                    Spacing="8">
            <StackPanel Margin="0,18,0,16"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">

                <Grid AutomationProperties.AutomationId="ProtectionIconContainer">

                    <pathicons:LockOpenFilled2 x:Name="VpnStatusIconDisconnected"
                                               Foreground="{ThemeResource SignalDangerColorBrush}"
                                               Size="Pixels32"
                                               Visibility="{x:Bind ViewModel.IsDisconnected, Mode=OneWay}" />

                    <ProgressRing x:Name="VpnStatusIconConnecting"
                                  Width="32"
                                  Height="32"
                                  IsActive="{x:Bind ViewModel.IsConnecting, Mode=OneWay}" />

                    <Grid Visibility="{x:Bind ViewModel.IsConnected, Mode=OneWay}">

                        <pathicons:LockFilled x:Name="VpnStatusIconConnected"
                                              Foreground="{ThemeResource VpnGreenColorBrush}"
                                              Size="Pixels32" />

                        <pathicons:LocksFilled x:Name="VpnStatusSecureCoreIconConnected"
                                               Foreground="{ThemeResource VpnGreenColorBrush}"
                                               Size="Pixels32" />

                    </Grid>
                </Grid>

                <TextBlock x:Name="VpnStatusTitle"
                           Margin="12,2,0,0"
                           VerticalAlignment="Center"
                           AutomationProperties.AutomationId="VpnStatusTitleLabel"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Text="{x:Bind ViewModel.Title, Mode=OneWay}"
                           Visibility="{x:Bind ViewModel.IsTitleVisible, Mode=OneWay}" />

            </StackPanel>

            <Grid MaxWidth="{StaticResource MaximumHomePageContentWidth}">
                <StackPanel x:Name="VpnStatusDetails"
                            Opacity="1"
                            Orientation="Vertical"
                            Spacing="12"
                            Visibility="{Binding Opacity, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource OpacityToVisibilityConverter}}">

                    <UIElement.RenderTransform>
                        <TranslateTransform x:Name="VpnStatusDetailsTranslateTransform" />
                    </UIElement.RenderTransform>

                    <TextBlock x:Name="VpnStatusSubtitle"
                               HorizontalAlignment="Center"
                               AutomationProperties.AutomationId="VpnStatusSubtitleLabel"
                               Style="{StaticResource BodyLargeStrongTextBlockStyle}"
                               Text="{x:Bind ViewModel.Subtitle, Mode=OneWay}" />

                    <Border x:Name="DeviceLocation"
                            Padding="8,4"
                            HorizontalAlignment="Center"
                            Background="{StaticResource VpnStatusDetailsBackgroundBrush}"
                            CornerRadius="4"
                            Visibility="{x:Bind ViewModel.IsLocationUnknown, Converter={StaticResource NotBooleanToVisibilityConverter}, Mode=OneWay}">
                        <controls:DeviceLocationControl Country="{x:Bind ViewModel.Country, Mode=OneWay}"
                                                        IpAddress="{x:Bind ViewModel.IpAddress, Mode=OneWay}"
                                                        IsLocationHidden="{x:Bind ViewModel.IsConnected, Mode=OneWay}"
                                                        IsLocationVisible="{x:Bind ViewModel.IsDisconnected, Mode=OneWay}"
                                                        IsScrambling="{x:Bind ViewModel.IsConnecting, Mode=OneWay}" />
                    </Border>
                </StackPanel>

                <Border x:Name="NetShieldStats"
                        Margin="16,0"
                        Padding="12"
                        HorizontalAlignment="Stretch"
                        AutomationProperties.LandmarkType="Custom"
                        AutomationProperties.LocalizedLandmarkType="{x:Bind ViewModel.Localizer.Get('Home_NetShield_Landmark')}"
                        Background="{StaticResource VpnStatusDetailsBackgroundBrush}"
                        CornerRadius="12"
                        Opacity="0"
                        Visibility="{Binding Opacity, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource OpacityToVisibilityConverter}}">

                    <UIElement.RenderTransform>
                        <TranslateTransform x:Name="NetShieldStatsTranslateTransform" />
                    </UIElement.RenderTransform>

                    <netShieldStats:NetShieldStatsComponent />
                </Border>
            </Grid>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup x:Name="ProtectionStates">
                <VisualState x:Name="Connecting">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsConnecting, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <!--  Update background gradient  -->
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                        To="{ThemeResource GradientConnectingStartColor}"
                                        Duration="{StaticResource BackgroundAnimationDuration}" />
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                        To="{ThemeResource GradientConnectingEndColor}"
                                        Duration="{StaticResource BackgroundAnimationDuration}" />
                    </Storyboard>
                    <VisualState.Setters>
                        <Setter Target="VpnStatusTitle.Foreground" Value="{ThemeResource TextNormColorBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Connected">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsConnected, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <!--  Update background gradient  -->
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                        To="{ThemeResource GradientProtectedStartColor}"
                                        Duration="{StaticResource BackgroundAnimationDuration}" />
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                        To="{ThemeResource GradientProtectedEndColor}"
                                        Duration="{StaticResource BackgroundAnimationDuration}" />
                    </Storyboard>
                    <VisualState.Setters>
                        <Setter Target="VpnStatusTitle.Foreground" Value="{ThemeResource VpnGreenColorBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disconnected">
                    <VisualState.StateTriggers>
                        <!--  This is the default visual state. when no other visual state is active, this one kicks in  -->
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <!--  Update background gradient  -->
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                        To="{ThemeResource GradientUnprotectedStartColor}"
                                        Duration="{StaticResource BackgroundAnimationDuration}" />
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                        To="{ThemeResource GradientUnprotectedEndColor}"
                                        Duration="{StaticResource BackgroundAnimationDuration}" />
                    </Storyboard>
                    <VisualState.Setters>
                        <Setter Target="VpnStatusTitle.Foreground" Value="{ThemeResource SignalDangerColorBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="ConnectionTypes">
                <VisualState x:Name="SecureCore">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsSecureCoreConnection, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="VpnStatusIconConnected.Visibility" Value="Collapsed" />
                        <Setter Target="VpnStatusSecureCoreIconConnected.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Standard">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="true" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="VpnStatusIconConnected.Visibility" Value="Visible" />
                        <Setter Target="VpnStatusSecureCoreIconConnected.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="VpnStatusModes">
                <VisualState x:Name="DetailsHidden">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsConnected, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <!--  Fade out VPN Status Details (subtitle + location)  -->
                        <DoubleAnimation BeginTime="0:0:0"
                                         Storyboard.TargetName="VpnStatusDetails"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"
                                         Duration="{StaticResource FadeInOutAnimationDuration}" />
                        <DoubleAnimation BeginTime="0:0:0.2"
                                         Storyboard.TargetName="VpnStatusDetailsTranslateTransform"
                                         Storyboard.TargetProperty="Y"
                                         To="-16"
                                         Duration="{StaticResource FadeInOutAnimationDuration}">
                            <DoubleAnimation.EasingFunction>
                                <ExponentialEase EasingMode="EaseInOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="DetailsVisible">
                    <VisualState.StateTriggers>
                        <!--  This is the default visual state. when no other visual state is active, this one kicks in  -->
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <!--  Fade in VPN Status Details (subtitle + location)  -->
                        <DoubleAnimation BeginTime="0:0:0.5"
                                         Storyboard.TargetName="VpnStatusDetails"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"
                                         Duration="{StaticResource FadeInOutAnimationDuration}" />
                        <DoubleAnimation BeginTime="0:0:0.3"
                                         Storyboard.TargetName="VpnStatusDetailsTranslateTransform"
                                         Storyboard.TargetProperty="Y"
                                         To="0"
                                         Duration="{StaticResource FadeInOutAnimationDuration}">
                            <DoubleAnimation.EasingFunction>
                                <ExponentialEase EasingMode="EaseInOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="NetShieldModes">
                <VisualState x:Name="StatisticsVisible">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsNetShieldStatVisible, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <!--  Fade in NetShield Statistics  -->
                        <DoubleAnimation BeginTime="0:0:0.5"
                                         Storyboard.TargetName="NetShieldStats"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"
                                         Duration="{StaticResource FadeInOutAnimationDuration}" />
                        <DoubleAnimation BeginTime="0:0:0.3"
                                         Storyboard.TargetName="NetShieldStatsTranslateTransform"
                                         Storyboard.TargetProperty="Y"
                                         To="0"
                                         Duration="{StaticResource FadeInOutAnimationDuration}">
                            <DoubleAnimation.EasingFunction>
                                <ExponentialEase EasingMode="EaseInOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="StatisticsHidden">
                    <VisualState.StateTriggers>
                        <!--  This is the default visual state. when no other visual state is active, this one kicks in  -->
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <!--  Fade out NetShield Statistics  -->
                        <DoubleAnimation BeginTime="0:0:0"
                                         Storyboard.TargetName="NetShieldStats"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"
                                         Duration="{StaticResource FadeInOutAnimationDuration}" />
                        <DoubleAnimation BeginTime="0:0:0.2"
                                         Storyboard.TargetName="NetShieldStatsTranslateTransform"
                                         Storyboard.TargetProperty="Y"
                                         To="32"
                                         Duration="{StaticResource FadeInOutAnimationDuration}">
                            <DoubleAnimation.EasingFunction>
                                <ExponentialEase EasingMode="EaseInOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>