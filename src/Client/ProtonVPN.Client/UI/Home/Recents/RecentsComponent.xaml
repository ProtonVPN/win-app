<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Client.UI.Home.Recents.RecentsComponent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="using:ProtonVPN.Client.Common.UI.Controls"
             xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icons="using:ProtonVPN.Client.Common.UI.Assets.Icons"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
             xmlns:recents="using:ProtonVPN.Client.UI.Home.Recents"
             x:DefaultBindMode="OneWay"
             AutomationProperties.LocalizedLandmarkType="{x:Bind ViewModel.Localizer.Get('Home_Recents_Landmark')}"
             mc:Ignorable="d">

    <UserControl.Resources>

        <DataTemplate x:Key="RecentItemTemplate"
                      x:DataType="recents:RecentItem">

            <custom:DualCommandsRow AutomationProperties.FullDescription="{x:Bind FullTitle}"
                                    AutomationProperties.Name="{x:Bind FullTitle}"
                                    IsContentEnabled="{x:Bind IsServerAvailable}"
                                    PrimaryCommand="{x:Bind ToggleConnectionCommand}"
                                    PrimaryCommandAutomationName="{x:Bind PrimaryCommandDescription}"
                                    PrimaryCommandContent="{x:Bind PrimaryCommandText}"
                                    SecondaryCommandAutomationName="{x:Bind SecondaryCommandDescription}"
                                    SecondaryCommandToolTip="{x:Bind SecondaryCommandToolTip}">
                <custom:DualCommandsRow.SecondaryCommandIcon>
                    <pathicons:ThreeDotsVertical />
                </custom:DualCommandsRow.SecondaryCommandIcon>

                <custom:DualCommandsRow.SecondaryCommandFlyout>
                    <MenuFlyout Closing="OnActionsMenuFlyoutClosing"
                                Placement="BottomEdgeAlignedRight">
                        <MenuFlyoutItem Command="{x:Bind PinCommand}"
                                        Text="{x:Bind Localizer.Get('Home_Recents_Pin')}"
                                        Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:PinFilled />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{x:Bind UnpinCommand}"
                                        Text="{x:Bind Localizer.Get('Home_Recents_Unpin')}"
                                        Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:PinSlashFilled />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{x:Bind RemoveCommand}"
                                        Text="{x:Bind Localizer.Get('Common_Actions_Remove')}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:TrashCross />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </custom:DualCommandsRow.SecondaryCommandFlyout>

                <Grid HorizontalAlignment="Left"
                      ColumnSpacing="12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">
                        <pathicons:PinFilled Foreground="{ThemeResource TextHintColorBrush}"
                                             Visibility="{x:Bind IsPinned}" />
                        <pathicons:ClockRotateLeft Foreground="{ThemeResource TextHintColorBrush}"
                                                   Visibility="{x:Bind IsPinned, Converter={StaticResource NotBooleanToVisibilityConverter}}" />
                    </Grid>

                    <Grid x:Name="FlagContainer"
                          Grid.Column="1">

                        <custom:ComplexCountryFlag Width="30"
                                                   EntryCountryCode="{x:Bind EntryCountry}"
                                                   ExitCountryCode="{x:Bind ExitCountry}"
                                                   IsCompact="True"
                                                   IsSecureCore="{x:Bind IsSecureCore}"
                                                   MainFlagType="{x:Bind FlagType}"
                                                   Visibility="{x:Bind IsProfileIntent, Converter={StaticResource NotBooleanToVisibilityConverter}}" />

                        <custom:ConnectionProfileIcon Width="30"
                                                      IsFlagVisible="False"
                                                      ProfileCategory="{x:Bind Profile.Category}"
                                                      ProfileColor="{x:Bind Profile.Color}"
                                                      Visibility="{x:Bind IsProfileIntent, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>

                    <TextBlock Grid.Column="2"
                               Foreground="{ThemeResource TextWeakColorBrush}"
                               Style="{StaticResource BodyMediumTextBlockStyle}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="NoWrap">
                        <Run Foreground="{ThemeResource TextNormColorBrush}"
                             Text="{x:Bind Title}" />
                        <Run Text="{x:Bind Subtitle}" />
                    </TextBlock>

                    <StackPanel Grid.Column="3"
                                Orientation="Horizontal"
                                Spacing="12">

                        <StackPanel Orientation="Horizontal"
                                    Spacing="12"
                                    Visibility="{x:Bind HasFeature}">

                            <TextBlock VerticalAlignment="Center"
                                       Foreground="{ThemeResource TextWeakColorBrush}"
                                       Style="{StaticResource BodyMediumTextBlockStyle}"
                                       Text="â€¢" />

                            <StackPanel Orientation="Horizontal"
                                        Spacing="6"
                                        Visibility="{x:Bind IsTor}">
                                <pathicons:BrandTor Margin="0,1,0,0"
                                                    Foreground="{ThemeResource TextWeakColorBrush}" />
                                <TextBlock VerticalAlignment="Center"
                                           Foreground="{ThemeResource TextWeakColorBrush}"
                                           Style="{StaticResource BodyMediumTextBlockStyle}"
                                           Text="{x:Bind Localizer.Get('Server_Feature_Tor')}"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="WrapWholeWords" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal"
                                        Spacing="6"
                                        Visibility="{x:Bind IsP2P}">
                                <pathicons:ArrowRightArrowLeft Margin="0,1,0,0"
                                                               Foreground="{ThemeResource TextWeakColorBrush}" />
                                <TextBlock VerticalAlignment="Center"
                                           Foreground="{ThemeResource TextWeakColorBrush}"
                                           Style="{StaticResource BodyMediumTextBlockStyle}"
                                           Text="{x:Bind Localizer.Get('Server_Feature_P2P')}"
                                           TextTrimming="CharacterEllipsis"
                                           TextWrapping="WrapWholeWords" />
                            </StackPanel>

                        </StackPanel>

                        <pathicons:Wrench Margin="0,1,0,0"
                                          Foreground="{ThemeResource TextWeakColorBrush}"
                                          Visibility="{x:Bind IsServerAvailable, Converter={StaticResource NotBooleanToVisibilityConverter}}" />

                        <icons:ActiveDot Width="16"
                                         Height="16"
                                         Margin="0,1,0,0"
                                         Visibility="{x:Bind IsActiveConnection, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </StackPanel>

                </Grid>
            </custom:DualCommandsRow>

        </DataTemplate>

    </UserControl.Resources>

    <Expander Padding="{StaticResource HomePageContentPadding}"
              ExpandDirection="Down"
              Header="{x:Bind ViewModel.Localizer.Get('Home_Recents_Title')}"
              IsExpanded="{x:Bind ViewModel.IsRecentsComponentOpened, Mode=TwoWay}"
              Style="{StaticResource GhostExpanderStyle}"
              Visibility="{x:Bind ViewModel.HasRecentConnections}">
        <ScrollViewer MaxHeight="230"
                      AutomationProperties.AutomationId="RecentsPane"
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ItemsControl IsTabStop="False"
                          ItemTemplate="{StaticResource RecentItemTemplate}"
                          ItemsSource="{x:Bind ViewModel.RecentConnections}" />
        </ScrollViewer>
    </Expander>

</UserControl>