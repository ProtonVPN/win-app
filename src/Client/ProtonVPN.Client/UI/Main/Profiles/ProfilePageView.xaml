<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2024 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<Page x:Class="ProtonVPN.Client.UI.Main.Profiles.ProfilePageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:ap="using:ProtonVPN.Client.Common.UI.AttachedProperties"
      xmlns:components="using:ProtonVPN.Client.UI.Main.Profiles.Components"
      xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:pathIcons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
      x:DefaultBindMode="OneWay"
      AutomationProperties.AutomationId="ProfilePage"
      AutomationProperties.Name="{x:Bind ViewModel.Localizer.Get('Automation_Properties_Profile_Page')}"
      NavigationCacheMode="Required"
      mc:Ignorable="d">

    <ContentControl Padding="0"
                    HorizontalAlignment="Stretch"
                    IsHitTestVisible="{x:Bind IsHitTestVisible}"
                    Style="{StaticResource PaneContentControlStyle}">

        <custom:SettingsPageContentControl x:Name="PageContentHost"
                                           ApplyCommand="{x:Bind ViewModel.SaveProfileCommand}"
                                           ApplyCommandText="{x:Bind ViewModel.ApplyCommandText}"
                                           BackCommand="{x:Bind ViewModel.NavigateBackCommand, Mode=OneTime}"
                                           CloseCommand="{x:Bind ViewModel.CloseCommand, Mode=OneTime}"
                                           IsBackButtonVisible="{x:Bind ViewModel.CanGoBack}">

            <custom:SettingsPageContentControl.PageHeader>
                <Grid ColumnSpacing="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <components:ProfileIconSelectorView Grid.Column="0" />

                    <TextBox x:Name="ProfileNameTextBox"
                             Grid.Column="1"
                             Padding="8,4"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             AutomationProperties.AutomationId="ProfileNameTextBox"
                             AutomationProperties.Name="{x:Bind ViewModel.Localizer.Get('Connections_Profiles_Name')}"
                             FontSize="{StaticResource SubtitleFontSize}"
                             IsSpellCheckEnabled="False"
                             Loaded="OnProfileNameTextBoxLoaded"
                             MaxLength="{x:Bind ViewModel.MaximumProfileNameLength}"
                             PlaceholderText="{x:Bind ViewModel.Localizer.Get('Connections_Profiles_Name')}"
                             Style="{StaticResource ValidationTextBoxStyle}"
                             Text="{x:Bind ViewModel.ProfileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </custom:SettingsPageContentControl.PageHeader>

            <StackPanel Spacing="24">

                <components:ConnectionIntentSelectorView />

                <components:ProfileSettingsSelectorView SettingsExpanded="OnSectionExpanded"/>

                <components:ProfileOptionsSelectorView OptionsExpanded="OnSectionExpanded" />

            </StackPanel>

        </custom:SettingsPageContentControl>
    </ContentControl>
</Page>