<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<Page x:Class="ProtonVPN.Client.UI.Main.MainPageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:CommunityToolkit.WinUI.Controls"
      xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:ProtonVPN.Client.UI.Main"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
      xmlns:sidebar="using:ProtonVPN.Client.UI.Main.Sidebar"
      xmlns:temp="using:ProtonVPN.Client.TEMP"
      xmlns:widgets="using:ProtonVPN.Client.UI.Main.Widgets"
      x:DefaultBindMode="OneWay"
      NavigationCacheMode="Required"
      mc:Ignorable="d">

    <Grid Margin="8"
          ColumnSpacing="8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15*" />
            <ColumnDefinition Width="*"
                              MinWidth="58"
                              MaxWidth="120" />
        </Grid.ColumnDefinitions>

        <SplitView x:Name="svMain"
                   Grid.Row="0"
                   CompactPaneLength="32"
                   DisplayMode="{x:Bind ViewModel.SidebarDisplayMode}"
                   IsPaneOpen="{x:Bind ViewModel.IsSidebarExpanded, Mode=TwoWay}"
                   PaneBackground="{ThemeResource BackgroundNormColorBrush}"
                   OpenPaneLength="300">

            <SplitView.Pane>
                <sidebar:SidebarComponentView x:Name="sidebarComponent"
                                              Grid.Column="0"
                                              IsSidebarExpanded="{x:Bind ViewModel.IsSidebarExpanded}"
                                              PointerEntered="OnSidebarPointerEntered"
                                              PointerExited="OnSidebarPointerExited" />
            </SplitView.Pane>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0"
                        Width="12">
                    <controls:PropertySizer Binding="{x:Bind svMain.OpenPaneLength, Mode=TwoWay}"
                                            Maximum="440"
                                            Minimum="240"
                                            Visibility="{x:Bind ViewModel.IsSidebarExpanded}" />
                </Border>

                <Frame x:Name="MainNavigationFrame"
                       Grid.Column="1"
                       IsNavigationStackEnabled="{x:Bind Navigator.IsNavigationStackEnabled}" />
            </Grid>

        </SplitView>

        <widgets:SideWidgetsHostComponentView Grid.Column="1" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="SidebarStates">
                <VisualState x:Name="Expanded">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{x:Bind ViewModel.WindowWidthThreshold, Mode=OneTime}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="svMain.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Collapsed">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="svMain.IsPaneOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</Page>