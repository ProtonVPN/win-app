<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2024 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<Page x:Class="ProtonVPN.Client.UI.Main.Settings.Pages.CommonSettingsPageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:connection="using:ProtonVPN.Client.UI.Main.Settings.Pages.Connection"
      xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:pages="using:ProtonVPN.Client.UI.Main.Settings.Pages"
      xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
      xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
      xmlns:update="using:ProtonVPN.Client.UI.Update"
      x:DefaultBindMode="OneWay"
      AutomationProperties.AutomationId="CommonSettingsPage"
      AutomationProperties.Name="{x:Bind ViewModel.Localizer.Get('Automation_Properties_Settings_Common_Page')}"
      NavigationCacheMode="Required"
      mc:Ignorable="d">

    <Page.Resources>
        <Thickness x:Key="PageContentControlPadding">16,8,16,0</Thickness>
    </Page.Resources>

    <custom:SettingsPageContentControl x:Name="PageContentHost"
                                       ApplyCommand="{x:Bind ViewModel.ApplyCommand}"
                                       BackCommand="{x:Bind ViewModel.NavigateBackCommand, Mode=OneTime}"
                                       CloseCommand="{x:Bind ViewModel.CloseCommand, Mode=OneTime}"
                                       IsBackButtonVisible="{x:Bind ViewModel.CanGoBack}">
        <custom:SettingsPageContentControl.PageHeader>
            <custom:SettingsPageHeaderContentControl Header="{x:Bind ViewModel.Title}" />
        </custom:SettingsPageContentControl.PageHeader>

        <StackPanel x:Name="ContentArea"
                    Spacing="24">

            <pages:UserDetailsComponent HorizontalAlignment="Left"
                                        Margin="-8,0"/>

            <connection:ConnectionSettingsView />

            <custom:SettingsSectionControl Title="{x:Bind ViewModel.Localizer.Get('Settings_General')}">
                <StackPanel>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="AutoStartupSettingsCard"
                                          Command="{x:Bind ViewModel.NavigateToAutoStartupPageCommand, Mode=OneTime}"
                                          Description="{x:Bind ViewModel.Localizer.Get('Settings_General_AutoStartup_Description')}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_General_AutoStartup')}"
                                          IsClickEnabled="True"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:PowerOff />
                        </toolkit:SettingsCard.HeaderIcon>
                        <toolkit:SettingsCard.ActionIcon>
                            <pathicons:ChevronRight />
                        </toolkit:SettingsCard.ActionIcon>
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="DefaultConnectionSettingsCard"
                                          Command="{x:Bind ViewModel.NavigateToDefaultConnectionPageCommand, Mode=OneTime}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Default')}"
                                          IsClickEnabled="True"
                                          Style="{StaticResource DefaultSettingsCardStyle}"
                                          Visibility="{x:Bind ViewModel.IsPaidUser, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:Bookmark />
                        </toolkit:SettingsCard.HeaderIcon>
                        <toolkit:SettingsCard.ActionIcon>
                            <pathicons:ChevronRight />
                        </toolkit:SettingsCard.ActionIcon>
                        <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                   Text="{x:Bind ViewModel.DefaultConnectionState}" />
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="NotificationsSettingsCard"
                                          Description="{x:Bind ViewModel.Localizer.Get('Settings_General_Notifications_Description')}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_General_Notifications')}"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:Bell />
                        </toolkit:SettingsCard.HeaderIcon>
                        <ToggleSwitch IsOn="{x:Bind ViewModel.IsNotificationEnabled, Mode=TwoWay}"
                                      Style="{StaticResource ToggleSwitchStyle}" />
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="LanguagesSettingsCard"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_General_Language')}"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:Language />
                        </toolkit:SettingsCard.HeaderIcon>
                        <ComboBox x:Name="cbLanguage"
                                  DisplayMemberPath="Description"
                                  ItemsSource="{x:Bind ViewModel.Languages}"
                                  SelectedItem="{x:Bind ViewModel.SelectedLanguage, Mode=TwoWay}" 
                                  Style="{StaticResource ComboBoxStyle}"/>
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="ThemesSettingsCard"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_General_Theme')}"
                                          IsTabStop="False"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:CircleHalfFilled />
                        </toolkit:SettingsCard.HeaderIcon>
                        <ComboBox x:Name="themeMode"
                                  DisplayMemberPath="TranslatedName"
                                  ItemsSource="{x:Bind ViewModel.Themes}"
                                  SelectedItem="{x:Bind ViewModel.SelectedTheme, Mode=TwoWay}" 
                                  Style="{StaticResource ComboBoxStyle}"/>
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="BetaAccessSettingsCard"
                                          Description="{x:Bind ViewModel.Localizer.Get('Settings_General_BetaAccess_Description')}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_General_BetaAccess')}"
                                          IsTabStop="False"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:KeySkeleton />
                        </toolkit:SettingsCard.HeaderIcon>
                        <ToggleSwitch IsOn="{x:Bind ViewModel.IsBetaAccessEnabled, Mode=TwoWay}"
                                      Style="{StaticResource ToggleSwitchStyle}" />
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="AutomaticUpdatesSettingsCard"
                                          Description="{x:Bind ViewModel.Localizer.Get('Settings_General_AutomaticUpdates_Description')}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_General_AutomaticUpdates')}"
                                          IsTabStop="False"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:ArrowsRotate />
                        </toolkit:SettingsCard.HeaderIcon>
                        <ToggleSwitch IsOn="{x:Bind ViewModel.IsAutomaticUpdatesEnabled, Mode=TwoWay}"
                                      Style="{StaticResource ToggleSwitchStyle}" />
                    </toolkit:SettingsCard>
                </StackPanel>
            </custom:SettingsSectionControl>

            <custom:SettingsSectionControl Title="{x:Bind ViewModel.Localizer.Get('Settings_Support')}">
                <StackPanel>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="SupportCenterSettingsCard"
                                          Command="{x:Bind ViewModel.OpenSupportCommand, Mode=OneTime}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_Support_SupportCenter')}"
                                          IsClickEnabled="True"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:LifeRing />
                        </toolkit:SettingsCard.HeaderIcon>
                        <toolkit:SettingsCard.ActionIcon>
                            <pathicons:ArrowOutSquare />
                        </toolkit:SettingsCard.ActionIcon>
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="ReportIssueSettingsCard"
                                          Command="{x:Bind ViewModel.ReportIssueCommand, Mode=OneTime}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_Support_ReportIssue')}"
                                          IsClickEnabled="True"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:Bug />
                        </toolkit:SettingsCard.HeaderIcon>
                        <toolkit:SettingsCard.ActionIcon>
                            <pathicons:ChevronRight />
                        </toolkit:SettingsCard.ActionIcon>
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="DebugLogsSettingsCard"
                                          Command="{x:Bind ViewModel.NavigateToDebugLogsPageCommand, Mode=OneTime}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_Support_DebugLogs')}"
                                          IsClickEnabled="True"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:Code />
                        </toolkit:SettingsCard.HeaderIcon>
                        <toolkit:SettingsCard.ActionIcon>
                            <pathicons:ChevronRight />
                        </toolkit:SettingsCard.ActionIcon>
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="AboutSettingsCard"
                                          Command="{x:Bind ViewModel.NavigateToAboutPageCommand, Mode=OneTime}"
                                          Description="{x:Bind ViewModel.ClientVersionDescription}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_About_Title')}"
                                          IsClickEnabled="True"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:BrandProtonVpn />
                        </toolkit:SettingsCard.HeaderIcon>
                        <toolkit:SettingsCard.ActionIcon>
                            <pathicons:ChevronRight />
                        </toolkit:SettingsCard.ActionIcon>
                    </toolkit:SettingsCard>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="DeveloperToolsSettingsCard"
                                          Command="{x:Bind ViewModel.ShowDebugToolsCommand, Mode=OneTime}"
                                          Header="Debug tools"
                                          IsClickEnabled="True"
                                          Style="{StaticResource DefaultSettingsCardStyle}"
                                          Visibility="{x:Bind ViewModel.IsToShowDeveloperTools}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:WindowTerminal />
                        </toolkit:SettingsCard.HeaderIcon>
                        <toolkit:SettingsCard.ActionIcon>
                            <pathicons:ChevronRight />
                        </toolkit:SettingsCard.ActionIcon>
                    </toolkit:SettingsCard>
                </StackPanel>
            </custom:SettingsSectionControl>

            <custom:SettingsSectionControl Title="{x:Bind ViewModel.Localizer.Get('Settings_Improve')}">
                <StackPanel>

                    <toolkit:SettingsCard AutomationProperties.AutomationId="CensorshipSettingsCard"
                                          Command="{x:Bind ViewModel.NavigateToCensorshipPageCommand, Mode=OneTime}"
                                          Header="{x:Bind ViewModel.Localizer.Get('Settings_Improve_Censorship')}"
                                          IsClickEnabled="True"
                                          Style="{StaticResource DefaultSettingsCardStyle}">
                        <toolkit:SettingsCard.HeaderIcon>
                            <pathicons:Users />
                        </toolkit:SettingsCard.HeaderIcon>
                        <toolkit:SettingsCard.ActionIcon>
                            <pathicons:ChevronRight />
                        </toolkit:SettingsCard.ActionIcon>
                    </toolkit:SettingsCard>
                </StackPanel>
            </custom:SettingsSectionControl>

            <Button Margin="0,16,0,0"
                    AutomationProperties.AutomationId="RestoreDefaultSettingsButton"
                    Command="{x:Bind ViewModel.RestoreDefaultSettingsCommand, Mode=OneTime}"
                    Content="{x:Bind ViewModel.Localizer.Get('Settings_RestoreDefault')}"
                    Style="{StaticResource SecondaryButtonStyle}" />

            <StackPanel Margin="0,16,0,0">
                <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                           Style="{StaticResource CaptionTextBlockStyle}">
                    <Run Text="{x:Bind ViewModel.Localizer.Get('Settings_OperatingSystemVersion')}" /><Run Text=":" />
                    <Run Text="{x:Bind ViewModel.OperatingSystemVersionDescription}" />
                </TextBlock>
            </StackPanel>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VpnPlanStates">
                <VisualState x:Name="PaidUser">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsPaidUser, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="VpnPlanBorder.BorderBrush" Value="{ThemeResource GradientVpnPlanBorderBrushColor}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FreeUser" />
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </custom:SettingsPageContentControl>

</Page>