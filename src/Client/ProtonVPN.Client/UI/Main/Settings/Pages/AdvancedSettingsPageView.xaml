<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2024 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<Page x:Class="ProtonVPN.Client.UI.Main.Settings.Pages.AdvancedSettingsPageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
      xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
      x:DefaultBindMode="OneWay"
      AutomationProperties.AutomationId="AdvancedSettingsPage"
      AutomationProperties.Name="{x:Bind ViewModel.Localizer.Get('Automation_Properties_Settings_Advanced_Page')}"
      NavigationCacheMode="Required"
      mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="NatTypeRadioButtonStyle" BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton">
            <Setter Property="GroupName" Value="NatTypeSetting" />
        </Style>
        <Style x:Key="OpenVpnDriverRadioButtonStyle" BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton">
            <Setter Property="GroupName" Value="OpenVpnDriverSetting" />
        </Style>
    </Page.Resources>

    <custom:SettingsPageContentControl x:Name="PageContentHost"
                                       ApplyCommand="{x:Bind ViewModel.ApplyCommand, Mode=OneTime}"
                                       ApplyCommandText="{x:Bind ViewModel.ApplyCommandText}"
                                       BackCommand="{x:Bind ViewModel.NavigateBackCommand, Mode=OneTime}"
                                       IsBackButtonVisible="{x:Bind ViewModel.CanGoBack}"
                                       CloseCommand="{x:Bind ViewModel.CloseCommand, Mode=OneTime}">

        <custom:SettingsPageContentControl.PageHeader>
            <custom:SettingsPageHeaderContentControl Header="{x:Bind ViewModel.Title}" />
        </custom:SettingsPageContentControl.PageHeader>

        <StackPanel x:Name="ContentArea">

            <toolkit:SettingsCard AutomationProperties.AutomationId="AlternativeRoutingSettingsCard"
                                  Description="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_AlternativeRouting_Description')}"
                                  Header="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_AlternativeRouting')}"
                                  IsTabStop="False"
                                  Style="{StaticResource DefaultSettingsCardStyle}">
                <ToggleSwitch IsOn="{x:Bind ViewModel.IsAlternativeRoutingEnabled, Mode=TwoWay}"
                              Style="{StaticResource ToggleSwitchStyle}" />
            </toolkit:SettingsCard>

            <toolkit:SettingsCard AutomationProperties.AutomationId="CustomDnsServersSettingsCard"
                                  Command="{x:Bind ViewModel.NavigateToCustomDnsServersPageCommand}"
                                  Description="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_CustomDnsServers_Description')}"
                                  Header="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_CustomDnsServers')}"
                                  IsClickEnabled="True"
                                  Style="{StaticResource DefaultSettingsCardStyle}">
                <toolkit:SettingsCard.ActionIcon>
                    <pathicons:ChevronRight />
                </toolkit:SettingsCard.ActionIcon>
                <Grid>
                    <Image Height="24"
                           Source="{ThemeResource VpnPlusIllustrationSource}"
                           Visibility="{x:Bind ViewModel.IsPaidUser, Converter={StaticResource NotBooleanToVisibilityConverter}}" />
                    <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                               Text="{x:Bind ViewModel.CustomDnsServersSettingsState}"
                               Visibility="{x:Bind ViewModel.IsPaidUser, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
            </toolkit:SettingsCard>

            <toolkit:SettingsCard AutomationProperties.AutomationId="NatTypeSettingsCard"
                                  Header="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_NatType')}"
                                  IsTabStop="False"
                                  Style="{StaticResource VerticalSettingsCardStyle}"
                                  Visibility="{x:Bind ViewModel.IsPaidUser, Converter={StaticResource BooleanToVisibilityConverter}}">
                <toolkit:SettingsCard.Description>
                    <TextBlock TextWrapping="Wrap">
                        <Run Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_NatType_Description')}" />
                        <Hyperlink NavigateUri="{x:Bind ViewModel.NatTypeLearnMoreUrl, Mode=OneTime}"
                                   ToolTipService.ToolTip="{x:Bind ViewModel.NatTypeLearnMoreUrl, Mode=OneTime}">
                            <Run Text="{x:Bind ViewModel.Localizer.Get('Common_Links_LearnMore')}" />
                        </Hyperlink>
                        <Run />
                    </TextBlock>
                </toolkit:SettingsCard.Description>
                <StackPanel Spacing="16">
                    <RadioButton AutomationProperties.AutomationId="StrictNatTypeRadioButton"
                                 IsChecked="{x:Bind ViewModel.IsStrictNatType, Mode=TwoWay}"
                                 Style="{StaticResource NatTypeRadioButtonStyle}">
                        <StackPanel>
                            <TextBlock Style="{StaticResource BodyTextBlockStyle}"
                                       Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_NatType_Strict')}" />
                            <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_NatType_Strict_Description')}"
                                       TextWrapping="Wrap" />
                        </StackPanel>
                    </RadioButton>
                    <RadioButton AutomationProperties.AutomationId="ModerateNatTypeRadioButton"
                                 IsChecked="{x:Bind ViewModel.IsModerateNatType, Mode=TwoWay}"
                                 Style="{StaticResource NatTypeRadioButtonStyle}">
                        <StackPanel>
                            <TextBlock Style="{StaticResource BodyTextBlockStyle}"
                                       Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_NatType_Moderate')}" />
                            <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_NatType_Moderate_Description')}"
                                       TextWrapping="Wrap" />
                        </StackPanel>
                    </RadioButton>
                </StackPanel>
            </toolkit:SettingsCard>

            <toolkit:SettingsCard AutomationProperties.AutomationId="FreeNatTypeSettingsCard"
                                  Command="{x:Bind ViewModel.TriggerNatTypeUpsellProcessCommand}"
                                  Header="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_NatType')}"
                                  IsClickEnabled="True"
                                  Style="{StaticResource DefaultSettingsCardStyle}"
                                  Visibility="{x:Bind ViewModel.IsPaidUser, Converter={StaticResource NotBooleanToVisibilityConverter}}">
                <toolkit:SettingsCard.Description>
                    <TextBlock TextWrapping="Wrap">
                        <Run Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_NatType_Description')}" />
                        <Hyperlink NavigateUri="{x:Bind ViewModel.NatTypeLearnMoreUrl, Mode=OneTime}"
                                   ToolTipService.ToolTip="{x:Bind ViewModel.NatTypeLearnMoreUrl, Mode=OneTime}">
                            <Run Text="{x:Bind ViewModel.Localizer.Get('Common_Links_LearnMore')}" />
                        </Hyperlink>
                        <Run />
                    </TextBlock>
                </toolkit:SettingsCard.Description>
                <toolkit:SettingsCard.ActionIcon>
                    <pathicons:ChevronRight />
                </toolkit:SettingsCard.ActionIcon>
                <Image Height="24"
                       Source="{ThemeResource VpnPlusIllustrationSource}" />
            </toolkit:SettingsCard>

            <toolkit:SettingsCard AutomationProperties.AutomationId="OpenVpnNetworkDriverSettingsCard"
                                  Header="{x:Bind ViewModel.Localizer.Get('Settings_General_OpenVpnNetworkDriver')}"
                                  IsTabStop="False"
                                  Style="{StaticResource VerticalSettingsCardStyle}">
                <StackPanel Spacing="8">
                    <RadioButton AutomationProperties.AutomationId="TapAdapterRadioButton"
                                    IsChecked="{x:Bind ViewModel.IsTapAdapter, Mode=TwoWay}"
                                    Style="{StaticResource OpenVpnDriverRadioButtonStyle}">
                        <StackPanel>
                            <TextBlock Style="{StaticResource BodyTextBlockStyle}"
                                        Text="TAP" />
                            <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                        Style="{StaticResource CaptionTextBlockStyle}"
                                        Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_OpenVpnDriver_Tap')}"
                                        TextWrapping="Wrap" />
                        </StackPanel>
                    </RadioButton>
                    <RadioButton AutomationProperties.AutomationId="TunAdapterRadioButton"
                                    IsChecked="{x:Bind ViewModel.IsTunAdapter, Mode=TwoWay}"
                                    Style="{StaticResource OpenVpnDriverRadioButtonStyle}">
                        <StackPanel>
                            <TextBlock Style="{StaticResource BodyTextBlockStyle}"
                                        Text="TUN" />
                            <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                        Style="{StaticResource CaptionTextBlockStyle}"
                                        Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_OpenVpnDriver_Tun_Description')}"
                                        TextWrapping="Wrap" />
                        </StackPanel>
                    </RadioButton>
                </StackPanel>
            </toolkit:SettingsCard>

            <toolkit:SettingsCard AutomationProperties.AutomationId="Ipv6LeakProtectionSettingsCard"
                                  Header="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_Ipv6LeakProtection')}"
                                  IsTabStop="False"
                                  Style="{StaticResource DefaultSettingsCardStyle}">
                <toolkit:SettingsCard.Description>
                    <TextBlock TextWrapping="Wrap">
                        <Run Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_Advanced_Ipv6LeakProtection_Description')}" />
                        <Hyperlink NavigateUri="{x:Bind ViewModel.Ipv6LeakProtectionLearnMoreUrl, Mode=OneTime}"
                                   ToolTipService.ToolTip="{x:Bind ViewModel.Ipv6LeakProtectionLearnMoreUrl, Mode=OneTime}">
                            <Run Text="{x:Bind ViewModel.Localizer.Get('Common_Links_LearnMore')}" />
                        </Hyperlink>
                        <Run />
                    </TextBlock>
                </toolkit:SettingsCard.Description>
                <ToggleSwitch IsOn="{x:Bind ViewModel.IsIpv6LeakProtectionEnabled, Mode=TwoWay}"
                              Style="{StaticResource ToggleSwitchStyle}" />
            </toolkit:SettingsCard>
        </StackPanel>
    </custom:SettingsPageContentControl>

</Page>