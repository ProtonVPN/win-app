<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2024 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<Page x:Class="ProtonVPN.Client.UI.Main.Settings.Connection.SplitTunnelingPageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:connection="using:ProtonVPN.Client.UI.Main.Settings.Connection"
      xmlns:controls="using:CommunityToolkit.WinUI.Controls"
      xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:featureicons="using:ProtonVPN.Client.UI.Main.FeatureIcons"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
      xmlns:ap="using:ProtonVPN.Client.Common.UI.AttachedProperties"
      x:DefaultBindMode="OneWay"
      AutomationProperties.AutomationId="SplitTunnelingPage"
      AutomationProperties.Name="{x:Bind ViewModel.Localizer.Get('Automation_Properties_SplitTunneling_Page')}"
      NavigationCacheMode="Required"
      mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="SplitTunnelingRadioButtonStyle" BasedOn="{StaticResource RadioButtonStyle}" TargetType="RadioButton">
            <Setter Property="GroupName" Value="SplitTunnelingMode" />
        </Style>

        <Thickness x:Key="PageContentControlPadding">16</Thickness>
    </Page.Resources>

    <custom:SettingsPageContentControl x:Name="PageContentHost"
                                       ApplyCommand="{x:Bind ViewModel.ApplyCommand, Mode=OneTime}"
                                       ApplyCommandText="{x:Bind ViewModel.ApplyCommandText}"
                                       BackCommand="{x:Bind ViewModel.NavigateBackCommand, Mode=OneTime}"
                                       CloseCommand="{x:Bind ViewModel.CloseCommand, Mode=OneTime}"
                                       IsBackButtonVisible="{x:Bind ViewModel.CanGoBack}">

        <custom:SettingsPageContentControl.PageHeader>
            <custom:SettingsPageHeaderContentControl Header="{x:Bind ViewModel.Title}">
                <custom:SettingsPageHeaderContentControl.Illustration>
                    <featureicons:SplitTunnelingIconView />
                </custom:SettingsPageHeaderContentControl.Illustration>
            </custom:SettingsPageHeaderContentControl>
        </custom:SettingsPageContentControl.PageHeader>

        <StackPanel x:Name="ContentArea"
                    Spacing="16">

            <controls:SettingsExpander Header="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling')}"
                                       IsExpanded="{x:Bind ViewModel.IsSplitTunnelingEnabled}"
                                       IsTabStop="False">

                <controls:SettingsExpander.Description>
                    <TextBlock TextWrapping="Wrap">
                        <Run Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_Description')}" />
                        <Hyperlink NavigateUri="{x:Bind ViewModel.LearnMoreUrl, Mode=OneTime}"
                                   ToolTipService.ToolTip="{x:Bind ViewModel.LearnMoreUrl, Mode=OneTime}">
                            <Run Text="{x:Bind ViewModel.Localizer.Get('Common_Links_LearnMore')}" />
                        </Hyperlink>
                        <Run/>
                    </TextBlock>
                </controls:SettingsExpander.Description>

                <ToggleSwitch IsOn="{x:Bind ViewModel.IsSplitTunnelingEnabled, Mode=TwoWay}"
                              Style="{StaticResource ToggleSwitchStyle}"
                              AutomationProperties.AutomationId="SplitTunnelingSwitch"/>
                <controls:SettingsExpander.Items>
                    <StackPanel Spacing="16">
                        <RadioButton IsChecked="{x:Bind ViewModel.IsStandardSplitTunneling, Mode=TwoWay}"
                                     Style="{StaticResource SplitTunnelingRadioButtonStyle}">
                            <StackPanel>
                                <TextBlock Style="{StaticResource BodyTextBlockStyle}"
                                           Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_Standard')}" />
                                <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                           Style="{StaticResource CaptionTextBlockStyle}"
                                           Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_Standard_Description')}"
                                           TextWrapping="Wrap" />
                            </StackPanel>
                        </RadioButton>
                        <RadioButton IsChecked="{x:Bind ViewModel.IsInverseSplitTunneling, Mode=TwoWay}"
                                     Style="{StaticResource SplitTunnelingRadioButtonStyle}">
                            <StackPanel>
                                <TextBlock Style="{StaticResource BodyTextBlockStyle}"
                                           Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_Inverse')}" />
                                <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                                           Style="{StaticResource CaptionTextBlockStyle}"
                                           Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_Inverse_Description')}"
                                           TextWrapping="Wrap" />
                            </StackPanel>
                        </RadioButton>
                    </StackPanel>
                </controls:SettingsExpander.Items>
            </controls:SettingsExpander>

            <StackPanel Spacing="8"
                        Visibility="{x:Bind ViewModel.IsSplitTunnelingEnabled}">

                <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                           Style="{StaticResource CaptionTextBlockStyle}"
                           Text="{x:Bind ViewModel.Localizer.GetFormat('Settings_Connection_SplitTunneling_Apps_Header', ViewModel.ActiveAppsCount)}" />

                <controls:SettingsCard IsTabStop="False"
                                       Style="{StaticResource VerticalSettingsCardStyle}">
                    <Grid Margin="0,-8,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ItemsRepeater Grid.Row="0"
                                       Margin="0,0,0,16"
                                       ItemsSource="{x:Bind ViewModel.StandardApps}"
                                       Visibility="{x:Bind ViewModel.HasStandardApps, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ItemsRepeater.Layout>
                                <StackLayout Spacing="8" />
                            </ItemsRepeater.Layout>
                            <ItemsRepeater.ItemTemplate>
                                <DataTemplate x:DataType="connection:SplitTunnelingAppViewModel">
                                    <Grid ColumnSpacing="8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0"
                                                  IsChecked="{x:Bind IsActive, Mode=TwoWay}">
                                            <Grid ColumnSpacing="8">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Image Grid.Column="0"
                                                       Width="20"
                                                       Height="20"
                                                       Source="{x:Bind AppIcon}" />
                                                <TextBlock Grid.Column="1"
                                                           Text="{x:Bind AppName}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </Grid>
                                        </CheckBox>
                                        <custom:GhostButton Grid.Column="1"
                                                            AutomationProperties.AutomationId="RemoveAppButton"
                                                            AutomationProperties.Name="{x:Bind Localizer.Get('Settings_Connection_SplitTunneling_Apps_Remove')}"
                                                            Command="{x:Bind RemoveAppCommand, Mode=OneTime}"
                                                            ToolTipService.ToolTip="{x:Bind Localizer.Get('Settings_Connection_SplitTunneling_Apps_Remove')}">
                                            <custom:GhostButton.LeftIcon>
                                                <pathicons:Trash />
                                            </custom:GhostButton.LeftIcon>
                                        </custom:GhostButton>
                                    </Grid>
                                </DataTemplate>
                            </ItemsRepeater.ItemTemplate>
                        </ItemsRepeater>

                        <ItemsRepeater Grid.Row="0"
                                       Margin="0,0,0,16"
                                       ItemsSource="{x:Bind ViewModel.InverseApps}"
                                       Visibility="{x:Bind ViewModel.HasInverseApps, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ItemsRepeater.Layout>
                                <StackLayout Spacing="8" />
                            </ItemsRepeater.Layout>
                            <ItemsRepeater.ItemTemplate>
                                <DataTemplate x:DataType="connection:SplitTunnelingAppViewModel">
                                    <Grid ColumnSpacing="8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0"
                                                  IsChecked="{x:Bind IsActive, Mode=TwoWay}">
                                            <Grid ColumnSpacing="8">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Image Grid.Column="0"
                                                       Width="20"
                                                       Height="20"
                                                       Source="{x:Bind AppIcon}" />
                                                <TextBlock Grid.Column="1"
                                                           Text="{x:Bind AppName}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </Grid>
                                        </CheckBox>
                                        <custom:GhostButton Grid.Column="1"
                                                            AutomationProperties.AutomationId="RemoveAppButton"
                                                            AutomationProperties.Name="{x:Bind Localizer.Get('Settings_Connection_SplitTunneling_Apps_Remove')}"
                                                            Command="{x:Bind RemoveAppCommand, Mode=OneTime}"
                                                            ToolTipService.ToolTip="{x:Bind Localizer.Get('Settings_Connection_SplitTunneling_Apps_Remove')}">
                                            <custom:GhostButton.LeftIcon>
                                                <pathicons:Trash />
                                            </custom:GhostButton.LeftIcon>
                                        </custom:GhostButton>
                                    </Grid>
                                </DataTemplate>
                            </ItemsRepeater.ItemTemplate>
                        </ItemsRepeater>

                        <Button Grid.Row="1"
                                HorizontalAlignment="Left"
                                AutomationProperties.AutomationId="AddAppButton"
                                Command="{x:Bind ViewModel.AddAppCommand, Mode=OneTime}"
                                Content="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_Apps_Add')}" />
                    </Grid>
                </controls:SettingsCard>
            </StackPanel>

            <StackPanel Spacing="8"
                        Visibility="{x:Bind ViewModel.IsSplitTunnelingEnabled}">

                <TextBlock Foreground="{ThemeResource TextWeakColorBrush}"
                           Style="{StaticResource CaptionTextBlockStyle}"
                           Text="{x:Bind ViewModel.Localizer.GetFormat('Settings_Connection_SplitTunneling_IpAddresses_Header', ViewModel.ActiveIpAddressesCount)}" />

                <controls:SettingsCard IsTabStop="False"
                                       Style="{StaticResource VerticalSettingsCardStyle}">
                    <Grid Margin="0,-8,0,0"
                          ColumnSpacing="8">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ItemsRepeater Grid.Row="0"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Margin="0,0,0,16"
                                       ItemsSource="{x:Bind ViewModel.StandardIpAddresses}"
                                       Visibility="{x:Bind ViewModel.HasStandardIpAddresses, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ItemsRepeater.Layout>
                                <StackLayout Spacing="8" />
                            </ItemsRepeater.Layout>
                            <ItemsRepeater.ItemTemplate>
                                <DataTemplate x:DataType="connection:SplitTunnelingIpAddressViewModel">
                                    <Grid ColumnSpacing="8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0"
                                                  Content="{x:Bind IpAddress}"
                                                  IsChecked="{x:Bind IsActive, Mode=TwoWay}" />
                                        <custom:GhostButton Grid.Column="1"
                                                            AutomationProperties.AutomationId="RemoveIpAddressButton"
                                                            AutomationProperties.Name="{x:Bind Localizer.Get('Settings_Connection_SplitTunneling_IpAddresses_Remove')}"
                                                            Command="{x:Bind RemoveIpAddressCommand, Mode=OneTime}"
                                                            ToolTipService.ToolTip="{x:Bind Localizer.Get('Settings_Connection_SplitTunneling_IpAddresses_Remove')}">
                                            <custom:GhostButton.LeftIcon>
                                                <pathicons:Trash />
                                            </custom:GhostButton.LeftIcon>
                                        </custom:GhostButton>
                                    </Grid>
                                </DataTemplate>
                            </ItemsRepeater.ItemTemplate>
                        </ItemsRepeater>

                        <ItemsRepeater Grid.Row="0"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Margin="0,0,0,16"
                                       ItemsSource="{x:Bind ViewModel.InverseIpAddresses}"
                                       Visibility="{x:Bind ViewModel.HasInverseIpAddresses, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ItemsRepeater.Layout>
                                <StackLayout Spacing="8" />
                            </ItemsRepeater.Layout>
                            <ItemsRepeater.ItemTemplate>
                                <DataTemplate x:DataType="connection:SplitTunnelingIpAddressViewModel">
                                    <Grid ColumnSpacing="8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0"
                                                  Content="{x:Bind IpAddress}"
                                                  IsChecked="{x:Bind IsActive, Mode=TwoWay}" />
                                        <custom:GhostButton Grid.Column="1"
                                                            AutomationProperties.AutomationId="RemoveIpAddressButton"
                                                            AutomationProperties.Name="{x:Bind Localizer.Get('Settings_Connection_SplitTunneling_IpAddresses_Remove')}"
                                                            Command="{x:Bind RemoveIpAddressCommand, Mode=OneTime}"
                                                            ToolTipService.ToolTip="{x:Bind Localizer.Get('Settings_Connection_SplitTunneling_IpAddresses_Remove')}">
                                            <custom:GhostButton.LeftIcon>
                                                <pathicons:Trash />
                                            </custom:GhostButton.LeftIcon>
                                        </custom:GhostButton>
                                    </Grid>
                                </DataTemplate>
                            </ItemsRepeater.ItemTemplate>
                        </ItemsRepeater>

                        <TextBox Grid.Row="1"
                                 Grid.Column="0"
                                 KeyDown="{x:Bind ViewModel.OnIpAddressKeyDownHandler, Mode=OneTime}"
                                 ap:FieldValidation.HasErrors="{x:Bind ViewModel.IsCurrentAddressValid, Converter={StaticResource NotBooleanToBooleanConverter}}"                      
                                 PlaceholderText="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_IpAddresses_Watermark')}"
                                 Text="{x:Bind ViewModel.CurrentIpAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Style="{StaticResource ValidationTextBoxStyle}"
                                 AutomationProperties.AutomationId="IpAddressTextBox"
                                 MinHeight="34"/>

                        <Button Grid.Row="1"
                                Grid.Column="1" 
                                VerticalAlignment="Top"
                                AutomationProperties.AutomationId="AddIpAddressButton"
                                Command="{x:Bind ViewModel.AddIpAddressCommand, Mode=OneTime}"
                                Content="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_IpAddresses_Add')}" />
                    </Grid>
                </controls:SettingsCard>
            </StackPanel>
        </StackPanel>
    </custom:SettingsPageContentControl>

</Page>