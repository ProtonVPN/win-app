<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2024 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Client.UI.Main.Home.HomeComponentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:card="using:ProtonVPN.Client.UI.Main.Home.Card"
             xmlns:components="using:ProtonVPN.Client.UI.Main.Components"
             xmlns:connection="using:ProtonVPN.Client.UI.Main.Home.Details.Connection"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:details="using:ProtonVPN.Client.UI.Main.Home.Details"
             xmlns:local="using:ProtonVPN.Client.UI.Main.Home"
             xmlns:map="using:ProtonVPN.Client.UI.Main.Map"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:update="using:ProtonVPN.Client.UI.Update"
             x:DefaultBindMode="OneWay"
             mc:Ignorable="d">

    <UserControl.Resources>
        <x:Double x:Key="ConnectionStatusGradientHeight">332.0</x:Double>
        <x:Double x:Key="ConnectionDetailsGradientHeight">264.0</x:Double>

        <x:Double x:Key="FadeInOpacity">1</x:Double>
        <x:Double x:Key="FadeOutOpacity">0.4</x:Double>

        <Duration x:Key="ConnectionStatusBackgroundAnimationDuration">0:0:1</Duration>
        <Duration x:Key="OpacityAnimationDuration">0:0:5</Duration>
    </UserControl.Resources>

    <Grid ColumnSpacing="16">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{x:Bind SidebarWidth, Converter={StaticResource DoubleToPixelGridLengthConverter}}" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="{x:Bind WidgetsBarWidth, Converter={StaticResource DoubleToPixelGridLengthConverter}}" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding Source={StaticResource MainTitleBarHeight}, Converter={StaticResource DoubleToPixelGridLengthConverter}}" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" MinHeight="32"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <map:MapComponentView x:Name="MapView"
                              Grid.Row="2"
                              Grid.Column="1" />

        <!--  Connection status background  -->
        <Grid Grid.Row="0"
              Grid.RowSpan="4"
              Grid.Column="0"
              Grid.ColumnSpan="3"
              Height="{StaticResource ConnectionStatusGradientHeight}"
              VerticalAlignment="Top">

            <Border Background="{ThemeResource GradientFadingColorBrush}" />

            <Border x:Name="StatusGradient"
                    Background="{ThemeResource GradientUnprotectedColorBrush}" />

        </Grid>

        <!--  Connection details background  -->
        <Border Grid.Row="0"
                Grid.RowSpan="4"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Height="{StaticResource ConnectionDetailsGradientHeight}"
                VerticalAlignment="Bottom"
                Background="{ThemeResource ReverseGradientFadingColorBrush}" />

        <!--  Banner container background  -->
        <Border Grid.Row="4"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Background="{ThemeResource ReverseStrongGradientFadingColorBrush}" />

        <card:ConnectionCardComponentView x:Name="ConnectionCardComponent"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          MaxWidth="{StaticResource MaximumHomePageContentWidth}"
                                          HorizontalAlignment="Center" />

        <components:ConnectionErrorComponent x:Name="ConnectionErrorComponent"
                                             Grid.Row="1"
                                             Grid.RowSpan="4"
                                             Grid.Column="1" 
                                             Margin="0,1,0,0"
                                             MaxWidth="{StaticResource MaximumHomePageContentWidth}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Top" />

        <details:DetailsComponentView x:Name="DetailsComponent"
                                      Grid.Row="3"
                                      Grid.Column="1"
                                      MaxWidth="{StaticResource MaximumHomePageContentWidth}" />

        <StackPanel x:Name="BannersContainer"
                    Grid.Row="4"
                    Grid.Column="1"
                    MaxWidth="{StaticResource MaximumHomePageContentWidth}"
                    Margin="0,0,0,8"
                    HorizontalAlignment="Stretch"
                    Spacing="8">

            <ContentControl Padding="0"
                            HorizontalAlignment="Stretch"
                            IsHitTestVisible="{x:Bind IsHitTestVisible}"
                            Style="{StaticResource PaneContentControlStyle}"
                            Visibility="{x:Bind ViewModel.IsUpdateAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">

                <update:UpdateComponent Title="{x:Bind ViewModel.Localizer.Get('Components_Update_UpdateAvailable')}"
                                        Margin="8"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Description="{x:Bind ViewModel.Localizer.Get('Components_Update_GetMostFromYourVpn')}"
                                        IsImageVisible="True" />
            </ContentControl>

        </StackPanel>

        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup x:Name="ConnectionStates">

                <VisualState x:Name="Connecting">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsConnecting}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                        To="{ThemeResource GradientConnectingStartColor}"
                                        Duration="{StaticResource ConnectionStatusBackgroundAnimationDuration}" />
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                        To="{ThemeResource GradientConnectingEndColor}"
                                        Duration="{StaticResource ConnectionStatusBackgroundAnimationDuration}" />
                    </Storyboard>
                </VisualState>

                <VisualState x:Name="Connected">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsConnected}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                        To="{ThemeResource GradientProtectedStartColor}"
                                        Duration="{StaticResource ConnectionStatusBackgroundAnimationDuration}" />
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                        To="{ThemeResource GradientProtectedEndColor}"
                                        Duration="{StaticResource ConnectionStatusBackgroundAnimationDuration}" />
                    </Storyboard>
                </VisualState>

                <VisualState x:Name="Disconnected">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                        To="{ThemeResource GradientUnprotectedStartColor}"
                                        Duration="{StaticResource ConnectionStatusBackgroundAnimationDuration}" />
                        <ColorAnimation EnableDependentAnimation="True"
                                        Storyboard.TargetName="StatusGradient"
                                        Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                        To="{ThemeResource GradientUnprotectedEndColor}"
                                        Duration="{StaticResource ConnectionStatusBackgroundAnimationDuration}" />
                    </Storyboard>
                </VisualState>

            </VisualStateGroup>

            <VisualStateGroup x:Name="NavigationStates">
                <VisualState x:Name="OnHomePage">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind IsHomeDisplayed}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ConnectionCardComponent.Opacity" Value="{StaticResource FadeInOpacity}" />
                        <Setter Target="ConnectionErrorComponent.Opacity" Value="{StaticResource FadeInOpacity}" />
                        <Setter Target="MapView.Opacity" Value="{StaticResource FadeInOpacity}" />
                        <Setter Target="DetailsComponent.Opacity" Value="{StaticResource FadeInOpacity}" />
                        <Setter Target="BannersContainer.Opacity" Value="{StaticResource FadeInOpacity}" />
                        <Setter Target="DetailsComponent.IsEnabled" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NotOnHomePage">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ConnectionCardComponent.Opacity" Value="{StaticResource FadeOutOpacity}" />
                        <Setter Target="ConnectionErrorComponent.Opacity" Value="{StaticResource FadeOutOpacity}" />
                        <Setter Target="MapView.Opacity" Value="{StaticResource FadeOutOpacity}" />
                        <Setter Target="DetailsComponent.Opacity" Value="{StaticResource FadeOutOpacity}" />
                        <Setter Target="BannersContainer.Opacity" Value="{StaticResource FadeOutOpacity}" />
                        <Setter Target="DetailsComponent.IsEnabled" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</UserControl>