<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2024 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Client.UI.Main.Sidebar.Connections.Bases.Controls.ConnectionItemsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:connections="using:ProtonVPN.Client.Models.Connections"
             xmlns:controls="using:ProtonVPN.Client.Common.UI.Controls"
             xmlns:countries="using:ProtonVPN.Client.Models.Connections.Countries"
             xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:gateways="using:ProtonVPN.Client.Models.Connections.Gateways"
             xmlns:icons="using:ProtonVPN.Client.Common.UI.Assets.Icons"
             xmlns:local="using:ProtonVPN.Client.UI.Main.Sidebar.Connections.Bases.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
             xmlns:profiles="using:ProtonVPN.Client.Models.Connections.Profiles"
             xmlns:recents="using:ProtonVPN.Client.Models.Connections.Recents"
             xmlns:selectors="using:ProtonVPN.Client.Selectors"
             xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
             x:DefaultBindMode="OneWay"
             mc:Ignorable="d">

    <UserControl.Resources>

        <x:Double x:Key="LocationSubItemsFlyoutMinWidth">320</x:Double>
        <x:Double x:Key="LocationSubItemsFlyoutMaxHeight">580</x:Double>
        <Thickness x:Key="LocationSubItemsFlyoutContentMargin">-4,-4,-8,-4</Thickness>
        <Thickness x:Key="LocationSubItemsFlyoutContentPadding">0,0,16,0</Thickness>

        <FlyoutPlacementMode x:Key="LocationSubItemsFlyoutPlacement">RightEdgeAlignedTop</FlyoutPlacementMode>

        <Thickness x:Key="LocationItemHeaderMargin">0,-1,0,0</Thickness>

        <DataTemplate x:Key="GroupLocationItemTemplate"
                      x:DataType="connections:ConnectionGroup">

            <Grid MinHeight="29"
                  Margin="12,8,0,4"
                  HorizontalAlignment="Stretch"
                  ColumnSpacing="12"
                  Visibility="{x:Bind IsHeaderVisible, Converter={StaticResource BooleanToVisibilityConverter}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid HorizontalAlignment="Left">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ContentControl Grid.Row="0"
                                    Margin="0,0,8,0"
                                    VerticalAlignment="Center"
                                    Content="{x:Bind Icon}"
                                    Foreground="{ThemeResource TextWeakColorBrush}"
                                    Visibility="{Binding Content, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NotNullToVisibilityConverter}}" />

                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               Foreground="{ThemeResource TextWeakColorBrush}"
                               Style="{StaticResource BodyTextBlockStyle}"
                               Text="{x:Bind Header}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="NoWrap" />

                    <custom:GhostButton Grid.Column="2"
                                        Margin="8,0,0,0"
                                        Command="{x:Bind ShowInfoOverlayCommand, Mode=OneTime}"
                                        Visibility="{x:Bind IsInfoButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <custom:GhostButton.RightIcon>
                            <pathicons:InfoCircleFilled Size="Pixels16" />
                        </custom:GhostButton.RightIcon>
                    </custom:GhostButton>

                </Grid>

                <custom:GhostButton Grid.Column="1"
                                    Command="{x:Bind ShowServerLoadInfoOverlayCommand, Mode=OneTime}"
                                    Content="{x:Bind Localizer.Get('Countries_ServerLoad')}"
                                    Visibility="{x:Bind IsServerLoadInfoButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <custom:GhostButton.RightIcon>
                        <pathicons:InfoCircle Size="Pixels16" />
                    </custom:GhostButton.RightIcon>
                </custom:GhostButton>

            </Grid>

        </DataTemplate>

        <DataTemplate x:Key="GenericCountryLocationItemTemplate"
                      x:DataType="countries:GenericCountryLocationItem">

            <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                        AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                        Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                        Description="{x:Bind Description}"
                                        Header="{x:Bind Header}"
                                        IsActiveConnection="{x:Bind IsActiveConnection}"
                                        IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                        IsRestricted="{x:Bind IsRestricted}"
                                        IsUnderMaintenance="{x:Bind IsUnderMaintenance}"
                                        ToolTipService.ToolTip="{x:Bind ToolTip}">
                <custom:ConnectionRowButton.Icon>
                    <custom:SimpleCountryFlag Width="30"
                                              FlagType="{x:Bind FlagType}"
                                              IsSecureCore="{x:Bind IsSecureCore}" />
                </custom:ConnectionRowButton.Icon>
            </custom:ConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="CountryLocationWithExpanderItemTemplate"
                      x:DataType="connections:CountryLocationItemBase">

            <custom:DualConnectionRowExpander AutomationProperties.AutomationId="{x:Bind SecondaryCommandAutomationId}"
                                              AutomationProperties.Name="{x:Bind Header}"
                                              ToolTipService.ToolTip="{x:Bind ToolTip}">

                <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                            AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                            Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                            Description="{x:Bind Description}"
                                            Header="{x:Bind Header}"
                                            IsActiveConnection="{x:Bind IsActiveConnection}"
                                            IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                            IsRestricted="{x:Bind IsRestricted}"
                                            IsUnderMaintenance="{x:Bind IsUnderMaintenance}">
                    <custom:ConnectionRowButton.Icon>
                        <custom:SimpleCountryFlag Width="30"
                                                  CountryCode="{x:Bind ExitCountryCode}"
                                                  FlagType="Country"
                                                  IsSecureCore="{x:Bind IsSecureCore}" />
                    </custom:ConnectionRowButton.Icon>
                </custom:ConnectionRowButton>

                <custom:DualConnectionRowExpander.ExpanderContent>
                    <local:ConnectionItemsControl ItemsSource="{x:Bind SubGroupsCvs.View, Mode=OneTime}"
                                                  ScrollBarVisibility="Disabled" />
                </custom:DualConnectionRowExpander.ExpanderContent>

            </custom:DualConnectionRowExpander>

        </DataTemplate>

        <DataTemplate x:Key="CountryLocationWithFlyoutItemTemplate"
                      x:DataType="connections:CountryLocationItemBase">

            <custom:DualConnectionRowButton AutomationProperties.AutomationId="{x:Bind SecondaryCommandAutomationId}"
                                            AutomationProperties.Name="{x:Bind Header}"
                                            ToolTipService.ToolTip="{x:Bind ToolTip}">

                <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                            AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                            Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                            Description="{x:Bind Description}"
                                            Header="{x:Bind Header}"
                                            IsActiveConnection="{x:Bind IsActiveConnection}"
                                            IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                            IsRestricted="{x:Bind IsRestricted}"
                                            IsUnderMaintenance="{x:Bind IsUnderMaintenance}">
                    <custom:ConnectionRowButton.Icon>
                        <custom:SimpleCountryFlag Width="30"
                                                  CountryCode="{x:Bind ExitCountryCode}"
                                                  FlagType="Country"
                                                  IsSecureCore="{x:Bind IsSecureCore}" />
                    </custom:ConnectionRowButton.Icon>
                </custom:ConnectionRowButton>

                <custom:DualConnectionRowButton.SecondaryCommandFlyout>
                    <Flyout Closed="{x:Bind OnCollapseCountry}"
                            Closing="OnMenuFlyoutClosing"
                            Opening="{x:Bind OnExpandCountry}"
                            Placement="{StaticResource LocationSubItemsFlyoutPlacement}">

                        <Grid MinWidth="{StaticResource LocationSubItemsFlyoutMinWidth}"
                              MaxHeight="{StaticResource LocationSubItemsFlyoutMaxHeight}">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <custom:ConnectionRowButton Grid.Row="0"
                                                        Margin="0,0,0,8"
                                                        Padding="4"
                                                        Description="{x:Bind Description}"
                                                        Header="{x:Bind Header}"
                                                        IsHitTestVisible="False">
                                <custom:ConnectionRowButton.Icon>
                                    <custom:SimpleCountryFlag Width="30"
                                                              CountryCode="{x:Bind ExitCountryCode}"
                                                              FlagType="Country"
                                                              IsSecureCore="{x:Bind IsSecureCore}" />
                                </custom:ConnectionRowButton.Icon>
                            </custom:ConnectionRowButton>

                            <toolkit:SettingsCard Grid.Row="1"
                                                  AutomationProperties.AutomationId="SmartRoutingButton"
                                                  Command="{x:Bind ShowSmartRoutingOverlayCommand, Mode=OneTime}"
                                                  Description="{x:Bind SmartRoutingDescription}"
                                                  Header="{x:Bind Localizer.Get('Overlay_SmartRouting_Title')}"
                                                  IsClickEnabled="True"
                                                  Style="{StaticResource InfoSettingsCardStyle}"
                                                  Visibility="{x:Bind HasVirtualServers, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <toolkit:SettingsCard.HeaderIcon>
                                    <pathicons:Globe Size="Pixels20" />
                                </toolkit:SettingsCard.HeaderIcon>
                                <toolkit:SettingsCard.ActionIcon>
                                    <pathicons:ChevronRight Size="Pixels20" />
                                </toolkit:SettingsCard.ActionIcon>
                            </toolkit:SettingsCard>

                            <local:ConnectionItemsControl Grid.Row="2"
                                                          Margin="-8,0,0,0"
                                                          ItemsSource="{x:Bind SubGroupsCvs.View, Mode=OneTime}" />
                        </Grid>

                    </Flyout>
                </custom:DualConnectionRowButton.SecondaryCommandFlyout>

            </custom:DualConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="CountryPairLocationItemTemplate"
                      x:DataType="countries:SecureCoreCountryPairLocationItem">

            <custom:ConnectionRowButton Padding="24,10,12,10"
                                        ActionLabel="{x:Bind PrimaryActionLabel}"
                                        AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                        AutomationProperties.Name="{x:Bind Header}"
                                        Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                        Description="{x:Bind Description}"
                                        Header="{x:Bind Header}"
                                        IsActiveConnection="{x:Bind IsActiveConnection}"
                                        IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                        IsRestricted="{x:Bind IsRestricted}"
                                        IsUnderMaintenance="{x:Bind IsUnderMaintenance}"
                                        ToolTipService.ToolTip="{x:Bind ToolTip}">
                <custom:ConnectionRowButton.Icon>
                    <custom:ComplexCountryFlag Width="30"
                                               EntryCountryCode="{x:Bind CountryPair.EntryCountry}"
                                               ExitCountryCode="{x:Bind CountryPair.ExitCountry}"
                                               IsSecureCore="True"
                                               MainFlagType="Country" />
                </custom:ConnectionRowButton.Icon>
            </custom:ConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="StateLocationItemTemplate"
                      x:DataType="connections:StateLocationItemBase">

            <custom:DualConnectionRowButton AutomationProperties.AutomationId="{x:Bind SecondaryCommandAutomationId}"
                                            AutomationProperties.Name="{x:Bind Header}"
                                            ToolTipService.ToolTip="{x:Bind ToolTip}">

                <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                            AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                            Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                            Description="{x:Bind Description}"
                                            Header="{x:Bind Header}"
                                            IsActiveConnection="{x:Bind IsActiveConnection}"
                                            IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                            IsRestricted="{x:Bind IsRestricted}"
                                            IsUnderMaintenance="{x:Bind IsUnderMaintenance}">
                    <custom:ConnectionRowButton.Icon>
                        <pathicons:MapPin Size="Pixels20" />
                    </custom:ConnectionRowButton.Icon>
                </custom:ConnectionRowButton>

                <custom:DualConnectionRowButton.SecondaryCommandFlyout>
                    <Flyout Closed="{x:Bind OnCollapseState}"
                            Closing="OnMenuFlyoutClosing"
                            Opening="{x:Bind OnExpandState}"
                            Placement="{StaticResource LocationSubItemsFlyoutPlacement}">

                        <Grid MinWidth="{StaticResource LocationSubItemsFlyoutMinWidth}"
                              MaxHeight="{StaticResource LocationSubItemsFlyoutMaxHeight}">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <custom:ConnectionRowButton Grid.Row="0"
                                                        Margin="0,0,0,8"
                                                        Padding="4"
                                                        Description="{x:Bind Header}"
                                                        Header="{x:Bind Description}"
                                                        IsHitTestVisible="False">
                                <custom:ConnectionRowButton.Icon>
                                    <custom:SimpleCountryFlag Width="30"
                                                              CountryCode="{x:Bind State.CountryCode}"
                                                              FlagType="Country" />
                                </custom:ConnectionRowButton.Icon>
                            </custom:ConnectionRowButton>

                            <toolkit:SettingsCard Grid.Row="1"
                                                  AutomationProperties.AutomationId="SmartRoutingButton"
                                                  Command="{x:Bind ShowSmartRoutingOverlayCommand, Mode=OneTime}"
                                                  Description="{x:Bind SmartRoutingDescription}"
                                                  Header="{x:Bind Localizer.Get('Overlay_SmartRouting_Title')}"
                                                  IsClickEnabled="True"
                                                  Style="{StaticResource InfoSettingsCardStyle}"
                                                  Visibility="{x:Bind HasVirtualServers, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <toolkit:SettingsCard.HeaderIcon>
                                    <pathicons:Globe Size="Pixels20" />
                                </toolkit:SettingsCard.HeaderIcon>
                                <toolkit:SettingsCard.ActionIcon>
                                    <pathicons:ChevronRight Size="Pixels20" />
                                </toolkit:SettingsCard.ActionIcon>
                            </toolkit:SettingsCard>

                            <local:ConnectionItemsControl Grid.Row="2"
                                                          Margin="-8,0,0,0"
                                                          ItemsSource="{x:Bind SubGroupsCvs.View, Mode=OneTime}" />
                        </Grid>
                    </Flyout>
                </custom:DualConnectionRowButton.SecondaryCommandFlyout>

            </custom:DualConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="CityLocationItemTemplate"
                      x:DataType="connections:CityLocationItemBase">

            <custom:DualConnectionRowButton AutomationProperties.AutomationId="{x:Bind SecondaryCommandAutomationId}"
                                            AutomationProperties.Name="{x:Bind Header}"
                                            ToolTipService.ToolTip="{x:Bind ToolTip}">

                <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                            AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                            Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                            Description="{x:Bind Description}"
                                            Header="{x:Bind Header}"
                                            IsActiveConnection="{x:Bind IsActiveConnection}"
                                            IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                            IsRestricted="{x:Bind IsRestricted}"
                                            IsUnderMaintenance="{x:Bind IsUnderMaintenance}">
                    <custom:ConnectionRowButton.Icon>
                        <pathicons:MapPin Size="Pixels20" />
                    </custom:ConnectionRowButton.Icon>
                </custom:ConnectionRowButton>

                <custom:DualConnectionRowButton.SecondaryCommandFlyout>
                    <Flyout Closed="{x:Bind OnCollapseCity}"
                            Closing="OnMenuFlyoutClosing"
                            Opening="{x:Bind OnExpandCity}"
                            Placement="{StaticResource LocationSubItemsFlyoutPlacement}"
                            ScrollViewer.HorizontalScrollMode="Disabled">

                        <Grid MinWidth="{StaticResource LocationSubItemsFlyoutMinWidth}"
                              MaxHeight="{StaticResource LocationSubItemsFlyoutMaxHeight}">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <custom:ConnectionRowButton Grid.Row="0"
                                                        Margin="0,0,0,8"
                                                        Padding="4"
                                                        Description="{x:Bind Header}"
                                                        Header="{x:Bind Description}"
                                                        IsHitTestVisible="False">
                                <custom:ConnectionRowButton.Icon>
                                    <custom:SimpleCountryFlag Width="30"
                                                              CountryCode="{x:Bind City.CountryCode}"
                                                              FlagType="Country" />
                                </custom:ConnectionRowButton.Icon>
                            </custom:ConnectionRowButton>

                            <toolkit:SettingsCard Grid.Row="1"
                                                  AutomationProperties.AutomationId="SmartRoutingButton"
                                                  Command="{x:Bind ShowSmartRoutingOverlayCommand, Mode=OneTime}"
                                                  Description="{x:Bind SmartRoutingDescription}"
                                                  Header="{x:Bind Localizer.Get('Overlay_SmartRouting_Title')}"
                                                  IsClickEnabled="True"
                                                  Style="{StaticResource InfoSettingsCardStyle}"
                                                  Visibility="{x:Bind HasVirtualServers, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <toolkit:SettingsCard.HeaderIcon>
                                    <pathicons:Globe Size="Pixels20" />
                                </toolkit:SettingsCard.HeaderIcon>
                                <toolkit:SettingsCard.ActionIcon>
                                    <pathicons:ChevronRight Size="Pixels20" />
                                </toolkit:SettingsCard.ActionIcon>
                            </toolkit:SettingsCard>

                            <local:ConnectionItemsControl Grid.Row="2"
                                                          Margin="-8,0,0,0"
                                                          ItemsSource="{x:Bind SubGroupsCvs.View, Mode=OneTime}" />
                        </Grid>
                    </Flyout>
                </custom:DualConnectionRowButton.SecondaryCommandFlyout>

            </custom:DualConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="ServerLocationItemTemplate"
                      x:DataType="connections:ServerLocationItemBase">

            <custom:ServerConnectionRowButton AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                              AutomationProperties.Name="{x:Bind Header}"
                                              BaseLocation="{x:Bind BaseLocation}"
                                              Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                              Header="{x:Bind Header}"
                                              IsActiveConnection="{x:Bind IsActiveConnection}"
                                              IsRestricted="{x:Bind IsRestricted}"
                                              IsUnderMaintenance="{x:Bind IsUnderMaintenance}"
                                              P2PLabel="{x:Bind Localizer.Get('Countries_P2P')}"
                                              ServerLoad="{x:Bind Load}"
                                              SmartRoutingLabel="{x:Bind Localizer.Get('Countries_SmartRouting')}"
                                              SupportsP2P="{x:Bind SupportsP2P}"
                                              SupportsSmartRouting="{x:Bind IsVirtual}"
                                              SupportsTor="{x:Bind SupportsTor}"
                                              ToolTipService.ToolTip="{x:Bind ToolTip}"
                                              TorLabel="{x:Bind Localizer.Get('Countries_Tor')}" />

        </DataTemplate>

        <DataTemplate x:Key="GenericGatewayLocationItemTemplate"
                      x:DataType="gateways:GenericGatewayLocationItem">

            <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                        AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                        Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                        Description="{x:Bind Description}"
                                        Header="{x:Bind Header}"
                                        IsActiveConnection="{x:Bind IsActiveConnection}"
                                        IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                        IsRestricted="{x:Bind IsRestricted}"
                                        IsUnderMaintenance="{x:Bind IsUnderMaintenance}"
                                        ToolTipService.ToolTip="{x:Bind ToolTip}">
                <custom:ConnectionRowButton.Icon>
                    <custom:SimpleCountryFlag Width="30"
                                              FlagType="Gateway" />
                </custom:ConnectionRowButton.Icon>
            </custom:ConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="GatewayLocationItemTemplate"
                      x:DataType="gateways:GatewayLocationItem">

            <custom:DualConnectionRowButton AutomationProperties.AutomationId="{x:Bind SecondaryCommandAutomationId}"
                                            AutomationProperties.Name="{x:Bind Header}"
                                            ToolTipService.ToolTip="{x:Bind ToolTip}">

                <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                            Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                            Description="{x:Bind Description}"
                                            Header="{x:Bind Header}"
                                            IsActiveConnection="{x:Bind IsActiveConnection}"
                                            IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                            IsRestricted="{x:Bind IsRestricted}"
                                            IsUnderMaintenance="{x:Bind IsUnderMaintenance}">
                    <custom:ConnectionRowButton.Icon>
                        <custom:SimpleCountryFlag Width="30"
                                                  FlagType="Gateway" />
                    </custom:ConnectionRowButton.Icon>
                </custom:ConnectionRowButton>

                <custom:DualConnectionRowButton.SecondaryCommandFlyout>
                    <Flyout Closed="{x:Bind OnCollapseGateway}"
                            Closing="OnMenuFlyoutClosing"
                            Opening="{x:Bind OnExpandGateway}"
                            Placement="{StaticResource LocationSubItemsFlyoutPlacement}">

                        <Grid MinWidth="{StaticResource LocationSubItemsFlyoutMinWidth}"
                              MaxHeight="{StaticResource LocationSubItemsFlyoutMaxHeight}">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <custom:ConnectionRowButton Grid.Row="0"
                                                        Margin="0,0,0,8"
                                                        Padding="4"
                                                        Header="{x:Bind Header}"
                                                        IsHitTestVisible="False">
                                <custom:ConnectionRowButton.Icon>
                                    <custom:SimpleCountryFlag Width="30"
                                                              FlagType="Gateway" />
                                </custom:ConnectionRowButton.Icon>
                            </custom:ConnectionRowButton>

                            <local:ConnectionItemsControl Grid.Row="1"
                                                          Margin="-8,0,0,0"
                                                          ItemsSource="{x:Bind SubGroupsCvs.View, Mode=OneTime}" />
                        </Grid>

                    </Flyout>
                </custom:DualConnectionRowButton.SecondaryCommandFlyout>

            </custom:DualConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="GatewayServerLocationItemTemplate"
                      x:DataType="gateways:GatewayServerLocationItem">

            <custom:ServerConnectionRowButton AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                              AutomationProperties.Name="{x:Bind Header}"
                                              BaseLocation="{x:Bind BaseLocation}"
                                              Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                              Header="{x:Bind Header}"
                                              IsActiveConnection="{x:Bind IsActiveConnection}"
                                              IsRestricted="{x:Bind IsRestricted}"
                                              IsUnderMaintenance="{x:Bind IsUnderMaintenance}"
                                              P2PLabel="{x:Bind Localizer.Get('Countries_P2P')}"
                                              ServerLoad="{x:Bind Load}"
                                              SmartRoutingLabel="{x:Bind Localizer.Get('Countries_SmartRouting')}"
                                              SupportsP2P="{x:Bind SupportsP2P}"
                                              SupportsSmartRouting="{x:Bind IsVirtual}"
                                              SupportsTor="{x:Bind SupportsTor}"
                                              ToolTipService.ToolTip="{x:Bind ToolTip}"
                                              TorLabel="{x:Bind Localizer.Get('Countries_Tor')}">
                <custom:ServerConnectionRowButton.Icon>
                    <custom:SimpleCountryFlag Width="30"
                                              CountryCode="{x:Bind Server.ExitCountry}"
                                              FlagType="Country" />
                </custom:ServerConnectionRowButton.Icon>
            </custom:ServerConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="RecentConnectionItemTemplate"
                      x:DataType="recents:RecentConnectionItem">

            <custom:DualConnectionRowButton AutomationProperties.AutomationId="{x:Bind SecondaryCommandAutomationId}"
                                            AutomationProperties.Name="{x:Bind Header}"
                                            ToolTipService.ToolTip="{x:Bind ToolTip}">

                <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                            AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                            Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                            Description="{x:Bind Description}"
                                            Header="{x:Bind Header}"
                                            IsActiveConnection="{x:Bind IsActiveConnection}"
                                            IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                            IsRestricted="{x:Bind IsRestricted}"
                                            IsUnderMaintenance="{x:Bind IsUnderMaintenance}"
                                            P2PLabel="{x:Bind Localizer.Get('Countries_P2P')}"
                                            SupportsP2P="{x:Bind IsP2P}"
                                            SupportsTor="{x:Bind IsTor}"
                                            TorLabel="{x:Bind Localizer.Get('Countries_Tor')}">
                    <custom:ConnectionRowButton.Icon>
                        <Grid Width="30">
                            <custom:ConnectionProfileIcon Width="30"
                                                          Height="30"
                                                          CountryCode="{x:Bind ExitCountry}"
                                                          FlagType="{x:Bind FlagType}"
                                                          IsFlagVisible="True"
                                                          ProfileCategory="{x:Bind Profile.Icon.Category}"
                                                          ProfileColor="{x:Bind Profile.Icon.Color}"
                                                          Visibility="{x:Bind IsProfileIntent, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <custom:ComplexCountryFlag Width="30"
                                                       EntryCountryCode="{x:Bind EntryCountry}"
                                                       ExitCountryCode="{x:Bind ExitCountry}"
                                                       IsSecureCore="{x:Bind IsSecureCore}"
                                                       MainFlagType="{x:Bind FlagType}"
                                                       Visibility="{x:Bind IsProfileIntent, Converter={StaticResource NotBooleanToVisibilityConverter}}" />
                        </Grid>
                    </custom:ConnectionRowButton.Icon>
                </custom:ConnectionRowButton>

                <custom:DualConnectionRowButton.SecondaryCommandFlyout>
                    <MenuFlyout Closing="OnMenuFlyoutClosing"
                                Placement="{StaticResource LocationSubItemsFlyoutPlacement}"
                                ShouldConstrainToRootBounds="True">
                        <MenuFlyoutItem Command="{x:Bind PinCommand, Mode=OneTime}"
                                        Text="{x:Bind Localizer.Get('Home_Recents_Pin')}"
                                        Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:PinFilled Size="Pixels20" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{x:Bind UnpinCommand, Mode=OneTime}"
                                        Text="{x:Bind Localizer.Get('Home_Recents_Unpin')}"
                                        Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:PinSlashFilled Size="Pixels20" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{x:Bind RemoveCommand, Mode=OneTime}"
                                        Text="{x:Bind Localizer.Get('Common_Actions_Remove')}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:TrashCross Size="Pixels20" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </custom:DualConnectionRowButton.SecondaryCommandFlyout>

            </custom:DualConnectionRowButton>

        </DataTemplate>

        <DataTemplate x:Key="ProfileConnectionItemTemplate"
                      x:DataType="profiles:ProfileConnectionItem">

            <custom:DualConnectionRowButton AutomationProperties.AutomationId="{x:Bind SecondaryCommandAutomationId}"
                                            AutomationProperties.Name="{x:Bind Header}"
                                            ToolTipService.ToolTip="{x:Bind ToolTip}">

                <custom:ConnectionRowButton ActionLabel="{x:Bind PrimaryActionLabel}"
                                            AutomationProperties.AutomationId="{x:Bind PrimaryCommandAutomationId}"
                                            Command="{x:Bind ToggleConnectionCommand, Mode=OneTime}"
                                            Description="{x:Bind Description}"
                                            Header="{x:Bind Header}"
                                            IsActiveConnection="{x:Bind IsActiveConnection}"
                                            IsDescriptionVisible="{x:Bind IsDescriptionVisible}"
                                            IsRestricted="{x:Bind IsRestricted}"
                                            IsUnderMaintenance="{x:Bind IsUnderMaintenance}"
                                            P2PLabel="{x:Bind Localizer.Get('Countries_P2P')}"
                                            SupportsP2P="{x:Bind IsP2P}"
                                            SupportsTor="{x:Bind IsTor}"
                                            TorLabel="{x:Bind Localizer.Get('Countries_Tor')}">
                    <custom:ConnectionRowButton.Icon>
                        <custom:ConnectionProfileIcon Width="30"
                                                      Height="30"
                                                      CountryCode="{x:Bind ExitCountryCode}"
                                                      FlagType="{x:Bind FlagType}"
                                                      IsFlagVisible="True"
                                                      ProfileCategory="{x:Bind Profile.Icon.Category}"
                                                      ProfileColor="{x:Bind Profile.Icon.Color}" />
                    </custom:ConnectionRowButton.Icon>
                </custom:ConnectionRowButton>

                <custom:DualConnectionRowButton.SecondaryCommandFlyout>
                    <MenuFlyout Closing="OnMenuFlyoutClosing"
                                Placement="{StaticResource LocationSubItemsFlyoutPlacement}"
                                ShouldConstrainToRootBounds="True">
                        <MenuFlyoutItem Command="{x:Bind EditProfileCommand}"
                                        Text="{x:Bind Localizer.Get('Common_Actions_Edit')}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:Pencil Size="Pixels20" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{x:Bind DuplicateProfileCommand}"
                                        Text="{x:Bind Localizer.Get('Common_Actions_Duplicate')}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:Squares Size="Pixels20" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Command="{x:Bind DeleteProfileCommand}"
                                        Text="{x:Bind Localizer.Get('Common_Actions_Delete')}">
                            <MenuFlyoutItem.Icon>
                                <pathicons:TrashCrossFilled Size="Pixels20" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </custom:DualConnectionRowButton.SecondaryCommandFlyout>

            </custom:DualConnectionRowButton>

        </DataTemplate>

        <selectors:ConnectionItemTemplateSelector x:Key="LocationItemTemplateSelector"
                                                  CityLocationItemTemplate="{StaticResource CityLocationItemTemplate}"
                                                  CountryLocationWithExpanderItemTemplate="{StaticResource CountryLocationWithExpanderItemTemplate}"
                                                  CountryLocationWithFlyoutItemTemplate="{StaticResource CountryLocationWithFlyoutItemTemplate}"
                                                  CountryPairLocationItemTemplate="{StaticResource CountryPairLocationItemTemplate}"
                                                  GatewayLocationItemTemplate="{StaticResource GatewayLocationItemTemplate}"
                                                  GatewayServerLocationItemTemplate="{StaticResource GatewayServerLocationItemTemplate}"
                                                  GenericCountryLocationItemTemplate="{StaticResource GenericCountryLocationItemTemplate}"
                                                  GenericGatewayLocationItemTemplate="{StaticResource GenericGatewayLocationItemTemplate}"
                                                  ProfileConnectionItemTemplate="{StaticResource ProfileConnectionItemTemplate}"
                                                  RecentConnectionItemTemplate="{StaticResource RecentConnectionItemTemplate}"
                                                  ServerLocationItemTemplate="{StaticResource ServerLocationItemTemplate}"
                                                  StateLocationItemTemplate="{StaticResource StateLocationItemTemplate}" />

    </UserControl.Resources>

    <ListView x:Name="ConnectionItemsList"
              ItemTemplateSelector="{StaticResource LocationItemTemplateSelector}"
              ItemsSource="{x:Bind ItemsSource, Mode=OneTime}" 
              SelectionMode="None" 
              Style="{StaticResource GhostListViewStyle}">

        <ListView.GroupStyle>
            <GroupStyle HeaderTemplate="{StaticResource GroupLocationItemTemplate}"                        
                        HidesIfEmpty="True" 
                        HeaderContainerStyle="{StaticResource GhostListViewHeaderItemStyle}"/>
        </ListView.GroupStyle>

    </ListView>

</UserControl>