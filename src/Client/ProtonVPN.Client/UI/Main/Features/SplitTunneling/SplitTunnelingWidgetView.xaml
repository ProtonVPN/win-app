<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2024 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Client.UI.Main.Features.SplitTunneling.SplitTunnelingWidgetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:contracts="using:ProtonVPN.Client.Settings.Contracts.Models"
             xmlns:controls="using:ProtonVPN.Client.UI.Main.Features.SplitTunneling.Controls"
             xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:featureicons="using:ProtonVPN.Client.UI.Main.FeatureIcons"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
             xmlns:splittunneling="using:ProtonVPN.Client.Models.Features.SplitTunneling"
             x:DefaultBindMode="OneWay"
             mc:Ignorable="d">

    <UserControl.Resources>
        <Flyout x:Name="WidgetFlyout"
                Closed="OnWidgetFlyoutClosed"
                Opened="OnWidgetFlyoutOpened">

            <StackPanel Width="{StaticResource FeatureFlyoutWidth}"
                        Orientation="Vertical"
                        Spacing="16">

                <Grid ColumnSpacing="8">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               Style="{StaticResource BodyStrongTextBlockStyle}"
                               Text="{x:Bind ViewModel.Header}" />

                    <custom:GhostButton Grid.Column="1"
                                        Margin="0,-8,0,-6"
                                        Content="{x:Bind ViewModel.Status}"
                                        FontSize="{StaticResource BodyTextBlockFontSize}"
                                        Visibility="{x:Bind ViewModel.IsRestricted, Converter={StaticResource NotBooleanToVisibilityConverter}}">
                        <custom:GhostButton.RightIcon>
                            <pathicons:ChevronDownFilled Size="Pixels16" />
                        </custom:GhostButton.RightIcon>
                        <custom:GhostButton.Flyout>
                            <MenuFlyout Placement="BottomEdgeAlignedRight">
                                <custom:ActivatableMenuFlyoutItem Command="{x:Bind ViewModel.DisableSplitTunnelingCommand, Mode=OneTime}"
                                                                  IsActive="{x:Bind ViewModel.IsSplitTunnelingDisabled}"
                                                                  Text="{x:Bind ViewModel.Localizer.Get('Common_States_Off')}">
                                    <custom:ActivatableMenuFlyoutItem.Icon>
                                        <ImageIcon Source="{ThemeResource SplitTunnelingOffIllustrationSource}" />
                                    </custom:ActivatableMenuFlyoutItem.Icon>
                                </custom:ActivatableMenuFlyoutItem>
                                <MenuFlyoutSeparator />
                                <custom:ActivatableMenuFlyoutItem Command="{x:Bind ViewModel.EnableStandardSplitTunnelingCommand, Mode=OneTime}"
                                                                  IsActive="{x:Bind ViewModel.IsStandardSplitTunnelingEnabled}"
                                                                  Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_Standard')}">
                                    <custom:ActivatableMenuFlyoutItem.Icon>
                                        <ImageIcon Source="{ThemeResource SplitTunnelingStandardIllustrationSource}" />
                                    </custom:ActivatableMenuFlyoutItem.Icon>
                                </custom:ActivatableMenuFlyoutItem>
                                <custom:ActivatableMenuFlyoutItem Command="{x:Bind ViewModel.EnableInverseSplitTunnelingCommand, Mode=OneTime}"
                                                                  IsActive="{x:Bind ViewModel.IsInverseSplitTunnelingEnabled}"
                                                                  Text="{x:Bind ViewModel.Localizer.Get('Settings_Connection_SplitTunneling_Inverse')}">
                                    <custom:ActivatableMenuFlyoutItem.Icon>
                                        <ImageIcon Source="{ThemeResource SplitTunnelingInverseIllustrationSource}" />
                                    </custom:ActivatableMenuFlyoutItem.Icon>
                                </custom:ActivatableMenuFlyoutItem>
                            </MenuFlyout>
                        </custom:GhostButton.Flyout>
                    </custom:GhostButton>

                    <Image Grid.Column="1"
                           Height="20"
                           Source="{ThemeResource VpnPlusIllustrationSource}"
                           Visibility="{x:Bind ViewModel.IsRestricted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <Border Height="1"
                        Background="{ThemeResource BorderWeakColorBrush}" />

                <controls:SplitTunnelingItemsControl x:Name="SplitTunnelingItemsControl"
                                                     MaxHeight="300"
                                                     Margin="0,-8,0,0"
                                                     ItemsSource="{x:Bind ViewModel.GroupsCvs.View, Mode=OneTime}"
                                                     Visibility="{x:Bind ViewModel.IsSplitTunnelingComponentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <Border Height="1"
                        Background="{ThemeResource BorderWeakColorBrush}"
                        Visibility="{x:Bind ViewModel.IsSplitTunnelingComponentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <StackPanel Orientation="Vertical"
                            Spacing="16"
                            Visibility="{x:Bind ViewModel.IsRestricted, Converter={StaticResource NotBooleanToVisibilityConverter}}">

                    <custom:BulletContentControl Content="{x:Bind ViewModel.InfoMessage}"
                                                 Visibility="{x:Bind ViewModel.IsInfoMessageVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <custom:BulletContentControl.BulletContent>
                            <pathicons:InfoCircleFilled Foreground="{ThemeResource TextWeakColorBrush}"
                                                        Size="Pixels16" />
                        </custom:BulletContentControl.BulletContent>
                    </custom:BulletContentControl>

                </StackPanel>

                <custom:UpsellFeatureContentControl Content="{x:Bind ViewModel.Localizer.Get('Flyouts_SplitTunneling_Upsell_Description')}"
                                                    Header="{x:Bind ViewModel.Localizer.Get('Flyouts_SplitTunneling_Upsell_Title')}"
                                                    IllustrationSource="{StaticResource SplitTunnelingUpsellLargeIllustrationSource}"
                                                    Style="{StaticResource FlyoutUpsellFeatureContentControlStyle}"
                                                    Visibility="{x:Bind ViewModel.IsRestricted, Converter={StaticResource BooleanToVisibilityConverter}}" />

            </StackPanel>
        </Flyout>
    </UserControl.Resources>

    <custom:WidgetButton x:Name="WidgetButton"
                         Command="{x:Bind ViewModel.InvokeCommand, Mode=OneTime}"
                         IsActive="{x:Bind ViewModel.IsSelected}"
                         OnHoverFlyout="{StaticResource WidgetFlyout}"
                         Style="{StaticResource SideWidgetButtonStyle}"
                         Text="{x:Bind ViewModel.Header}"
                         Visibility="{x:Bind ViewModel.IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
        <featureicons:SplitTunnelingIconView Width="{StaticResource FeatureBarDimmableImageSize}"
                                             Height="{StaticResource FeatureBarDimmableImageSize}" />
    </custom:WidgetButton>

</UserControl>