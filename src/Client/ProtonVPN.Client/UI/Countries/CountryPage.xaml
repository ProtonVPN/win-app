<?xml version="1.0" encoding="utf-8"?>

<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<Page x:Class="ProtonVPN.Client.UI.Countries.CountryPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom"
      xmlns:controls="using:ProtonVPN.Client.Common.UI.Controls"
      xmlns:countries="using:ProtonVPN.Client.UI.Countries"
      xmlns:helpers="using:ProtonVPN.Client.Helpers"
      xmlns:pathIcons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons"
      x:DefaultBindMode="OneWay"
      x:Name="PageArea"
      NavigationCacheMode="Required"
      mc:Ignorable="d">

    <custom:PageContentControl BackCommand="{x:Bind ViewModel.GoBackCommand}"
                               IsBackButtonVisible="{x:Bind ViewModel.IsBackEnabled}"
                               IsCompact="{x:Bind ViewModel.IsNavigationPaneCollapsed}">
        <custom:PageContentControl.PageHeader>
            <StackPanel Orientation="Horizontal"
                        Spacing="8">
                <controls:CountryFlagControl Width="30"
                                             Height="20"
                                             Margin="0,4,0,0"
                                             EntryCountryCode="{x:Bind ViewModel.CurrentCountryCode}"
                                             ExitCountryCode="{x:Bind ViewModel.CurrentCountryCode}" />
                <TextBlock Text="{x:Bind ViewModel.Title}" />
            </StackPanel>
        </custom:PageContentControl.PageHeader>

        <StackPanel>
            <Grid Visibility="{x:Bind ViewModel.IsVirtual, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto "/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           Text="{x:Bind ViewModel.SmartRoutingLabel}"
                           TextWrapping="Wrap"
                           FontSize="{ThemeResource CaptionFontSize}"
                           Foreground="{ThemeResource TextWeakColorBrush}" />
                <custom:GhostButton Grid.Column="1"
                                    Command="{Binding ViewModel.ShowSmartRoutingOverlayCommandCommand, ElementName=PageArea, Mode=OneTime}">
                    <custom:GhostButton.LeftIcon>
                        <pathIcons:InfoCircle />
                    </custom:GhostButton.LeftIcon>
                </custom:GhostButton>
            </Grid>

            <NavigationView x:Name="NavigationViewControl"
                            MenuItemsSource="{x:Bind ViewModel.FeatureTabPages, Mode=OneTime}"
                            SelectedItem="{x:Bind ViewModel.SelectedFeatureTab}"
                            ItemInvoked="OnNavigationViewItemInvokedAsync"
                            Style="{StaticResource TopNavigationViewStyle}">

                <NavigationView.MenuItemTemplate>
                    <DataTemplate x:DataType="countries:CountryTabViewModelBase">
                        <NavigationViewItem helpers:NavigationHelper.NavigateTo="{x:Bind PageType}"
                                            AutomationProperties.AutomationId="NavigationViewItem"
                                            Visibility="{x:Bind HasItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Icon="{x:Bind Icon}"
                                            Content="{x:Bind Title}" />
                    </DataTemplate>
                </NavigationView.MenuItemTemplate>

                <Frame x:Name="CountryFeatureTabFrame" />

            </NavigationView>
        </StackPanel>
    </custom:PageContentControl>
</Page>