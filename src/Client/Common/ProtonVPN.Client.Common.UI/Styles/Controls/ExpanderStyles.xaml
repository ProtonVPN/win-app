<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pathicons="using:ProtonVPN.Client.Common.UI.Assets.Icons.PathIcons">
    <ResourceDictionary.ThemeDictionaries>

        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="ExpanderContentBackground" ResourceKey="TransparentColorBrush" />
            <StaticResource x:Key="ExpanderContentBorderBrush" ResourceKey="TransparentColorBrush" />

            <StaticResource x:Key="ExpanderHeaderBackground" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBackgroundPointerOver" ResourceKey="InteractionDefaultHoverColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBackgroundPressed" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBackgroundDisabled" ResourceKey="InteractionDefaultColorBrush" />

            <StaticResource x:Key="ExpanderHeaderForeground" ResourceKey="TextWeakColorBrush" />
            <StaticResource x:Key="ExpanderHeaderForegroundPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="ExpanderHeaderForegroundPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="ExpanderHeaderForegroundDisabled" ResourceKey="TextDisabledColorBrush" />

            <StaticResource x:Key="ExpanderHeaderBorderBrush" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBorderBrushPointerOver" ResourceKey="InteractionDefaultHoverColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBorderBrushPressed" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBorderBrushDisabled" ResourceKey="InteractionDefaultColorBrush" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="Dark">
            <StaticResource x:Key="ExpanderContentBackground" ResourceKey="TransparentColorBrush" />
            <StaticResource x:Key="ExpanderContentBorderBrush" ResourceKey="TransparentColorBrush" />

            <StaticResource x:Key="ExpanderHeaderBackground" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBackgroundPointerOver" ResourceKey="InteractionDefaultHoverColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBackgroundPressed" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBackgroundDisabled" ResourceKey="InteractionDefaultColorBrush" />

            <StaticResource x:Key="ExpanderHeaderForeground" ResourceKey="TextWeakColorBrush" />
            <StaticResource x:Key="ExpanderHeaderForegroundPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="ExpanderHeaderForegroundPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="ExpanderHeaderForegroundDisabled" ResourceKey="TextDisabledColorBrush" />

            <StaticResource x:Key="ExpanderHeaderBorderBrush" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBorderBrushPointerOver" ResourceKey="InteractionDefaultHoverColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBorderBrushPressed" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="ExpanderHeaderBorderBrushDisabled" ResourceKey="InteractionDefaultColorBrush" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Thickness x:Key="ExpanderHeaderPadding">12,8</Thickness>
    <Thickness x:Key="ExpanderContentDownBorderThickness">1</Thickness>
    <Thickness x:Key="ExpanderContentPadding">0,0,0,0</Thickness>
    <x:Double x:Key="ExpanderMinHeight">24</x:Double>

    <Thickness x:Key="ExpanderHeaderBorderThickness">0</Thickness>

    <Thickness x:Key="ToggleButtonBorderThemeThickness">0</Thickness>
    <x:Double x:Key="ExpanderHeaderSpacing">6</x:Double>

    <Style x:Key="GhostExpanderHeaderButtonStyle" BasedOn="{StaticResource DefaultToggleButtonStyle}" TargetType="ToggleButton">
        <Setter Property="FontSize" Value="{StaticResource BodyStrongFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource BodyStrongFontWeight}" />
        <Setter Property="Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="ContentContainer"
                          Width="{TemplateBinding Width}"
                          MinWidth="{TemplateBinding MinWidth}"
                          MinHeight="{TemplateBinding MinHeight}"
                          MaxWidth="{TemplateBinding MaxWidth}"
                          Padding="{StaticResource ExpanderHeaderPadding}"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          Background="{TemplateBinding Background}"
                          BackgroundSizing="{TemplateBinding BackgroundSizing}"
                          BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          ColumnSpacing="{StaticResource ExpanderHeaderSpacing}"
                          CornerRadius="{StaticResource ControlCornerRadius}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="1"
                              VerticalAlignment="Center">
                            <pathicons:ChevronRightFilled x:Name="ChevronRightIcon"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          Size="Pixels16"
                                                          Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NotBooleanToVisibilityConverter}}" />
                            <pathicons:ChevronDownFilled x:Name="ChevronDownIcon"
                                                         Foreground="{TemplateBinding Foreground}"
                                                         Size="Pixels16"
                                                         Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Column="0"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          Foreground="{TemplateBinding Foreground}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackground}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
                                        <Setter Target="ChevronRightIcon.Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
                                        <Setter Target="ChevronDownIcon.Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundPointerOver}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                                        <Setter Target="ChevronRightIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                                        <Setter Target="ChevronDownIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundPressed}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                                        <Setter Target="ChevronRightIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                                        <Setter Target="ChevronDownIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundDisabled}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderForegroundDisabled}" />
                                        <Setter Target="ChevronRightIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundDisabled}" />
                                        <Setter Target="ChevronDownIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackground}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
                                        <Setter Target="ChevronRightIcon.Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
                                        <Setter Target="ChevronDownIcon.Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundPointerOver}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                                        <Setter Target="ChevronRightIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                                        <Setter Target="ChevronDownIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundPressed}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                                        <Setter Target="ChevronRightIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                                        <Setter Target="ChevronDownIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundDisabled}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ExpanderHeaderForegroundDisabled}" />
                                        <Setter Target="ChevronRightIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundDisabled}" />
                                        <Setter Target="ChevronDownIcon.Foreground" Value="{ThemeResource ExpanderHeaderForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Indeterminate" />
                                <VisualState x:Name="IndeterminatePointerOver" />
                                <VisualState x:Name="IndeterminatePressed" />
                                <VisualState x:Name="IndeterminateDisabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <StaticResource x:Key="ExpanderHeaderDownStyle" ResourceKey="GhostExpanderHeaderButtonStyle" />

    <Style x:Key="GhostExpanderStyle" TargetType="Expander">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ConnectionRowExpanderHeaderButtonStyle" BasedOn="{StaticResource DefaultToggleButtonStyle}" TargetType="ToggleButton">
        <Setter Property="FontSize" Value="{StaticResource BodyStrongFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource BodyStrongFontWeight}" />
        <Setter Property="Foreground" Value="{ThemeResource ExpanderHeaderForeground}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="ContentContainer"
                          Width="{TemplateBinding Width}"
                          MinWidth="{TemplateBinding MinWidth}"
                          MinHeight="{TemplateBinding MinHeight}"
                          MaxWidth="{TemplateBinding MaxWidth}"
                          Padding="{StaticResource ExpanderHeaderPadding}"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          Background="{TemplateBinding Background}"
                          BackgroundSizing="{TemplateBinding BackgroundSizing}"
                          BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          ColumnSpacing="{StaticResource ExpanderHeaderSpacing}"
                          CornerRadius="8">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackground}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundPointerOver}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundPressed}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundDisabled}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackground}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundPointerOver}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundPressed}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource ExpanderHeaderBackgroundDisabled}" />
                                        <Setter Target="ContentContainer.BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrushDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Indeterminate" />
                                <VisualState x:Name="IndeterminatePointerOver" />
                                <VisualState x:Name="IndeterminatePressed" />
                                <VisualState x:Name="IndeterminateDisabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConnectionRowExpanderStyle" TargetType="Expander">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{ThemeResource InteractionDefaultHoverColorBrush}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}" />
        <Setter Property="Padding" Value="{StaticResource ExpanderContentPadding}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid x:Name="ContentContainer"
                          CornerRadius="8">
                        
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="Row0"
                                           Height="Auto" />
                            <RowDefinition x:Name="Row1"
                                           Height="*" />
                        </Grid.RowDefinitions>
                        
                        <ToggleButton x:Name="ExpanderHeader"
                                      Padding="{StaticResource ExpanderHeaderPadding}"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}"
                                      VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}"
                                      AutomationProperties.AutomationId="ExpanderToggleButton"
                                      Background="{ThemeResource ExpanderHeaderBackground}"
                                      BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                      BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}"
                                      BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      IsEnabled="{TemplateBinding IsEnabled}"
                                      Style="{StaticResource ConnectionRowExpanderHeaderButtonStyle}" />
                        
                        <!--  The clip is a composition clip applied in code  -->
                        <Border x:Name="ExpanderContentClip"
                                Grid.Row="1">
                            
                            <Border x:Name="ExpanderContent"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{StaticResource ExpanderContentDownBorderThickness}"
                                    CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
                                    Visibility="Collapsed">
                                <ContentPresenter HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                                <Border.RenderTransform>
                                    <CompositeTransform />
                                </Border.RenderTransform>
                            </Border>
                        </Border>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandStates">
                                <VisualState x:Name="ExpandUp">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource InteractionDefaultHoverColorBrush}"/>
                                    </VisualState.Setters>
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="CollapseDown">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0"
                                                                      KeyTime="0:0:0.167"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandDown">
                                    <VisualState.Setters>
                                        <Setter Target="ContentContainer.Background" Value="{ThemeResource InteractionDefaultHoverColorBrush}"/>
                                    </VisualState.Setters>
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="CollapseUp">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.167"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0"
                                                                      KeyTime="0:0:0.167"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                
                                <VisualState x:Name="Down" />
                                
                                <VisualState x:Name="Up">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.Style" Value="{StaticResource ExpanderHeaderUpStyle}" />
                                        <Setter Target="ExpanderContent.BorderThickness" Value="{StaticResource ExpanderContentUpBorderThickness}" />
                                        <Setter Target="ExpanderContent.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <Setter Target="ExpanderHeader.(Grid.Row)" Value="1" />
                                        <Setter Target="ExpanderContentClip.(Grid.Row)" Value="0" />
                                        <Setter Target="Row0.Height" Value="*" />
                                        <Setter Target="Row1.Height" Value="Auto" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>