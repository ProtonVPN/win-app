<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom">

    <ResourceDictionary.ThemeDictionaries>

        <ResourceDictionary x:Key="Light">

            <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="BackgroundNormColorBrush" />

            <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="TextDisabledColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundChecked" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedDisabled" ResourceKey="TextDisabledColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="TextDisabledColorBrush" />

            <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="InteractionDefaultHoverColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundChecked" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPointerOver" ResourceKey="InteractionWeakColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPressed" ResourceKey="InteractionWeakHoverColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedDisabled" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="InteractionWeakColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="InteractionWeakHoverColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="InteractionDefaultColorBrush" />

            <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="TextWeakColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="TextDisabledColorBrush" />

            <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="TextNormColorBrush" />

            <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="PrimaryColorBrush" />

            <StaticResource x:Key="NavigationViewContentBackground" ResourceKey="TransparentColorBrush" />
            <StaticResource x:Key="NavigationViewContentGridBorderBrush" ResourceKey="TransparentColorBrush" />

            <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="PaneOverlayBackgroundColorBrush" />

            <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="BorderWeakColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="BorderWeakColorBrush" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="Dark">

            <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="BackgroundNormColorBrush" />

            <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="TextDisabledColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundChecked" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedDisabled" ResourceKey="TextDisabledColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="TextDisabledColorBrush" />

            <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="InteractionDefaultHoverColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundChecked" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPointerOver" ResourceKey="InteractionWeakColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPressed" ResourceKey="InteractionWeakHoverColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedDisabled" ResourceKey="InteractionDefaultColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="InteractionDefaultActiveColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="InteractionWeakColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="InteractionWeakHoverColorBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="InteractionDefaultColorBrush" />

            <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="TextWeakColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="TextDisabledColorBrush" />

            <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextNormColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="TextNormColorBrush" />

            <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="PrimaryColorBrush" />

            <StaticResource x:Key="NavigationViewContentBackground" ResourceKey="TransparentColorBrush" />
            <StaticResource x:Key="NavigationViewContentGridBorderBrush" ResourceKey="TransparentColorBrush" />

            <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="PaneOverlayBackgroundColorBrush" />

            <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="BorderWeakColorBrush" />
            <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="BorderWeakColorBrush" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Thickness x:Key="TopNavigationViewContentGridBorderThickness">0</Thickness>

    <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
    <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>

    <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
    <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
    <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>

    <x:Double x:Key="NavigationViewItemHeaderExpandedHeight">36</x:Double>
    <x:Double x:Key="NavigationViewItemHeaderCollapsedHeight">16</x:Double>
    <Thickness x:Key="NavigationViewItemHeaderPadding">16,12,16,8</Thickness>

    <x:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">20</x:Double>
    <x:Double x:Key="NavigationViewItemOnLeftIconBoxWidth">20</x:Double>

    <Style TargetType="NavigationView" />

    <Style TargetType="NavigationViewItem" />

    <Style x:Key="TopNavigationViewStyle" TargetType="NavigationView">
        <Setter Property="IsBackButtonVisible" Value="Collapsed" />
        <Setter Property="IsSettingsVisible" Value="False" />
        <Setter Property="PaneDisplayMode" Value="Top" />
        <Setter Property="SelectionFollowsFocus" Value="Disabled" />
        <Setter Property="MenuItemContainerStyle" Value="{StaticResource TopNavigationViewItemStyle}" />
    </Style>

    <Style x:Key="TopNavigationViewItemStyle" TargetType="NavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
    </Style>

    <Style TargetType="NavigationViewItemHeader">
        <Setter Property="Foreground" Value="{ThemeResource TextWeakColorBrush}" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationViewItemHeader">
                    <Grid x:Name="NavigationViewItemHeaderRootGrid">
                        <Grid x:Name="InnerHeaderGrid"
                              Height="{StaticResource NavigationViewItemHeaderExpandedHeight}"
                              Padding="{ThemeResource NavigationViewItemHeaderPadding}"
                              HorizontalAlignment="Left">
                            <TextBlock x:Name="HeaderText"
                                       Margin="0,-1,0,-1"
                                       VerticalAlignment="Center"
                                       FontWeight="Medium"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       Text="{TemplateBinding Content}"
                                       TextWrapping="NoWrap" />
                        </Grid>

                        <VisualStateManager.VisualStateGroups>

                            <VisualStateGroup x:Name="PaneStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="HeaderTextCollapsed"
                                                      To="HeaderTextVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid"
                                                                           Storyboard.TargetProperty="Height">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="{StaticResource NavigationViewItemHeaderExpandedHeight}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="0.0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1"
                                                                      Value="0.0" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="0:0:0.2"
                                                                      Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="HeaderTextVisible"
                                                      To="HeaderTextCollapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid"
                                                                           Storyboard.TargetProperty="Height">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1"
                                                                        Value="{StaticResource NavigationViewItemHeaderCollapsedHeight}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="1.0" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="0:0:0.1"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="HeaderTextVisible" />
                                <VisualState x:Name="HeaderTextCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderText.Visibility" Value="Collapsed" />
                                        <Setter Target="InnerHeaderGrid.Height" Value="{StaticResource NavigationViewItemHeaderCollapsedHeight}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="LeftMode" />
                                <VisualState x:Name="TopMode">
                                    <VisualState.Setters>
                                        <Setter Target="InnerHeaderGrid.Margin" Value="{ThemeResource TopNavigationViewItemInnerHeaderMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="NavigationViewItemSeparator" />

    <Style x:Key="TransparentNavigationViewItemStyle" TargetType="NavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource TransparentColorBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource TransparentColorBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SelectsOnInvoked" Value="False" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationViewItem">
                    <Grid x:Name="NVIRootGrid">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                <VisualState x:Name="OnLeftNavigation" />
                                <VisualState x:Name="OnTopNavigationPrimary" />
                                <VisualState x:Name="OnTopNavigationOverflow" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="custom:SidebarNavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="custom:SidebarNavigationViewItem">
                    <Grid x:Name="NVIRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <custom:SidebarNavigationViewItemPresenter x:Name="NavigationViewItemPresenter"
                                                                   Padding="{TemplateBinding Padding}"
                                                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                   Background="{TemplateBinding Background}"
                                                                   BorderBrush="{TemplateBinding BorderBrush}"
                                                                   BorderThickness="{TemplateBinding BorderThickness}"
                                                                   Content="{TemplateBinding Content}"
                                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                   ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                   Control.IsTemplateFocusTarget="True"
                                                                   CornerRadius="{TemplateBinding CornerRadius}"
                                                                   Foreground="{TemplateBinding Foreground}"
                                                                   Header="{TemplateBinding Header}"
                                                                   Icon="{TemplateBinding Icon}"
                                                                   InfoBadge="{TemplateBinding InfoBadge}"
                                                                   OnHoverContent="{TemplateBinding OnHoverContent}"
                                                                   IsTabStop="false"
                                                                   UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" />
                        <ItemsRepeater x:Name="NavigationViewItemMenuItemsHost"
                                       Grid.Row="1"
                                       x:Load="False"
                                       Visibility="Collapsed">
                            <ItemsRepeater.Layout>
                                <StackLayout Orientation="Vertical" />
                            </ItemsRepeater.Layout>
                        </ItemsRepeater>
                        <FlyoutBase.AttachedFlyout>
                            <Flyout x:Name="ChildrenFlyout"
                                    Placement="RightEdgeAlignedTop">
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="{ThemeResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                                        <!--  Set negative top margin to make the flyout align exactly with the button  -->
                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                    <ScrollViewer x:Name="ScrollViewer"
                                                                  AutomationProperties.AccessibilityView="Raw"
                                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                                        <ContentPresenter x:Name="ContentPresenter"
                                                                          Padding="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                          CornerRadius="{TemplateBinding CornerRadius}" />
                                                    </ScrollViewer>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid x:Name="FlyoutRootGrid">
                                    <Grid x:Name="FlyoutContentGrid" />
                                </Grid>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                <VisualState x:Name="OnLeftNavigation" />
                                <VisualState x:Name="OnTopNavigationPrimary" />
                                <VisualState x:Name="OnTopNavigationOverflow" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="custom:SidebarNavigationViewItemPresenter">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="custom:SidebarNavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"
                          Margin="{ThemeResource NavigationViewItemButtonMargin}"
                          Background="{TemplateBinding Background}"
                          Control.IsTemplateFocusTarget="True"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.Resources />
                        <Grid x:Name="PresenterContentRootGrid">
                            <!--  Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation.  -->
                            <Grid HorizontalAlignment="Left"
                                  VerticalAlignment="Center">
                                <Rectangle x:Name="SelectionIndicator"
                                           Width="{ThemeResource NavigationViewSelectionIndicatorWidth}"
                                           Height="{ThemeResource NavigationViewSelectionIndicatorHeight}"
                                           Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                           Opacity="0.0"
                                           RadiusX="{ThemeResource NavigationViewSelectionIndicatorRadius}"
                                           RadiusY="{ThemeResource NavigationViewSelectionIndicatorRadius}" />
                            </Grid>
                            <Grid x:Name="ContentGrid"
                                  MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"
                                  Margin="0,0,0,0"
                                  HorizontalAlignment="Stretch">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="IconColumn"
                                        Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerIconWidth}">
                                    <Viewbox x:Name="IconBox"
                                             Width="{StaticResource NavigationViewItemOnLeftIconBoxWidth}"
                                             Height="{StaticResource NavigationViewItemOnLeftIconBoxHeight}"
                                             Margin="{ThemeResource NavigationViewItemOnLeftIconBoxMargin}"
                                             HorizontalAlignment="Center">
                                        <ContentPresenter xmlns:local="using:Microsoft.UI.Xaml.Controls"
                                                          x:Name="Icon"
                                                          local:AnimatedIcon.State="Normal"
                                                          Content="{TemplateBinding Icon}"
                                                          Foreground="{TemplateBinding Foreground}" />
                                    </Viewbox>
                                </Border>

                                <TextBlock x:Name="HeaderPresenter" 
                                           Grid.Column="1"
                                           Margin="{ThemeResource NavigationViewItemContentPresenterMargin}"
                                           Padding="{TemplateBinding Padding}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           AutomationProperties.AccessibilityView="Raw"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Header}" 
                                           TextTrimming="CharacterEllipsis"/>

                                <StackPanel Grid.Column="2"
                                            Orientation="Horizontal"
                                            Margin="{ThemeResource NavigationViewItemContentPresenterMargin}">

                                    <ContentPresenter x:Name="HoverContentPresenter"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      AutomationProperties.AccessibilityView="Raw"
                                                      Content="{TemplateBinding OnHoverContent}"
                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                      Foreground="{ThemeResource TextWeakColorBrush}"
                                                      Visibility="Collapsed"/>

                                    <ContentPresenter x:Name="ContentPresenter"
                                                      Margin="4,0,0,0"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      AutomationProperties.AccessibilityView="Raw"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                      Foreground="{ThemeResource TextWeakColorBrush}"
                                                      Visibility="{Binding Content, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NotNullToVisibilityConverter}}"/>

                                    <ContentPresenter x:Name="InfoBadgePresenter"
                                                      VerticalAlignment="Center"
                                                      Content="{TemplateBinding InfoBadge}" 
                                                      Visibility="{Binding Content, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NotNullToVisibilityConverter}}"/>

                                    <Grid xmlns:local="using:Microsoft.UI.Xaml.Controls"
                                          x:Name="ExpandCollapseChevron"
                                          Width="40"
                                          Margin="{ThemeResource NavigationViewItemExpandChevronMargin}"
                                          HorizontalAlignment="Right"
                                          local:AnimatedIcon.State="NormalOff"
                                          x:Load="False"
                                          Background="Transparent"
                                          Visibility="Collapsed">
                                        <AnimatedIcon x:Name="ExpandCollapseChevronIcon"
                                                      Width="12"
                                                      Height="12"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      x:DeferLoadStrategy="Lazy"
                                                      AutomationProperties.AccessibilityView="Raw"
                                                      RenderTransformOrigin="0.5, 0.5"
                                                      Visibility="Collapsed">
                                            <AnimatedIcon.FallbackIconSource>
                                                <FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                                FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                                                Foreground="{ThemeResource NavigationViewItemForeground}"
                                                                Glyph="{StaticResource NavigationViewItemExpandedGlyph}" />
                                            </AnimatedIcon.FallbackIconSource>
                                        </AnimatedIcon>
                                    </Grid>
                                </StackPanel>

                            </Grid>

                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="HeaderPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="PointerOver" />
                                        <Setter Target="HoverContentPresenter.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="HeaderPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="Pressed" />
                                        <Setter Target="HoverContentPresenter.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                        <Setter Target="HeaderPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="HeaderPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="PointerOver" />
                                        <Setter Target="HoverContentPresenter.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                        <Setter Target="HeaderPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="Pressed" />
                                        <Setter Target="HoverContentPresenter.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="IconVisible" />
                                <VisualState x:Name="IconCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="IconColumn.Width" Value="8" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <Setter Target="ExpandCollapseChevronIcon.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <Setter Target="ExpandCollapseChevronIcon.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden" />
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="NormalOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="NormalOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PointerOverOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PressedOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ExpandCollapseChevron.(AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                                <VisualState x:Name="ClosedCompactAndTopLevelItem">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource NavigationViewCompactItemContentPresenterMargin}" />
                                        <Setter Target="ContentGrid.Margin" Value="0,0,0,0" />
                                        <Setter Target="InfoBadgePresenter.(Grid.Column)" Value="0" />
                                        <Setter Target="InfoBadgePresenter.(Grid.ColumnSpan)" Value="4" />
                                        <Setter Target="InfoBadgePresenter.VerticalAlignment" Value="Top" />
                                        <Setter Target="InfoBadgePresenter.HorizontalAlignment" Value="Right" />
                                        <Setter Target="InfoBadgePresenter.Margin" Value="0,2,2,0" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>