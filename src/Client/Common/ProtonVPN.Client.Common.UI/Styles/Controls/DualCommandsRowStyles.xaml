<?xml version="1.0" encoding="utf-8" ?>
<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="using:ProtonVPN.Client.Common.UI.Controls.Custom">

    <Thickness x:Key="RowContentMargin">12,0</Thickness>
    <Thickness x:Key="PrimaryContainerMargin">-4,0,12,0</Thickness>
    <Thickness x:Key="SecondaryCommandContentMargin">12,-5,8,-5</Thickness>
    <x:Double x:Key="SecondaryCommandContentSpacing">8</x:Double>

    <Style BasedOn="{StaticResource DualCommandsRowStyle}" TargetType="custom:DualCommandsRow" />

    <Style x:Key="DualCommandsRowStyle" TargetType="custom:DualCommandsRow">
        <Setter Property="Padding" Value="{StaticResource RowContentMargin}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="custom:DualCommandsRow">

                    <Grid x:Name="RowContainer">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="SecondaryButton"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                AutomationProperties.AutomationId="{TemplateBinding SecondaryCommandAutomationId}"
                                AutomationProperties.Name="{TemplateBinding SecondaryCommandAutomationName}"
                                Command="{Binding SecondaryCommand, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                CommandParameter="{TemplateBinding SecondaryCommandParameter}"
                                Flyout="{TemplateBinding SecondaryCommandFlyout}"
                                IsTabStop="True"
                                Style="{StaticResource RowButtonStyle}"
                                TabIndex="2"
                                ToolTipService.ToolTip="{TemplateBinding SecondaryCommandToolTip}" />

                        <Button x:Name="PrimaryButton"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                AutomationProperties.AutomationId="{TemplateBinding PrimaryCommandAutomationId}"
                                AutomationProperties.Name="{TemplateBinding PrimaryCommandAutomationName}"
                                Command="{Binding PrimaryCommand, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                CommandParameter="{TemplateBinding PrimaryCommandParameter}"
                                IsTabStop="True"
                                Style="{StaticResource RowButtonStyle}"
                                TabIndex="1"
                                ToolTipService.ToolTip="{TemplateBinding PrimaryCommandToolTip}" />

                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Column="0"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          AutomationProperties.AccessibilityView="Raw"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          FontSize="{StaticResource BodyFontSize}"
                                          FontWeight="{StaticResource BodyFontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsHitTestVisible="False"
                                          IsTabStop="False" />

                        <ContentControl x:Name="PrimaryContainer"
                                        Grid.Column="1"
                                        Margin="{StaticResource PrimaryContainerMargin}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        AutomationProperties.AccessibilityView="Raw"
                                        IsEnabled="{Binding IsEnabled, ElementName=PrimaryButton, Mode=OneWay}"
                                        IsHitTestVisible="False"
                                        IsTabStop="False"
                                        Visibility="Collapsed">
                            <ContentPresenter Content="{TemplateBinding PrimaryCommandContent}"
                                              ContentTemplate="{TemplateBinding PrimaryCommandContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding PrimaryCommandContentTemplateSelector}"
                                              FontSize="{StaticResource BodyStrongFontSize}"
                                              FontWeight="{StaticResource BodyStrongFontWeight}"
                                              Foreground="{TemplateBinding Foreground}"
                                              Visibility="{Binding PrimaryCommandContent, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}" />
                        </ContentControl>

                        <ContentControl x:Name="SecondaryContainer"
                                        Grid.Column="2"
                                        Margin="{StaticResource SecondaryCommandContentMargin}"
                                        VerticalAlignment="Center"
                                        IsEnabled="{Binding IsEnabled, ElementName=SecondaryButton, Mode=OneWay}"
                                        IsHitTestVisible="False"
                                        IsTabStop="False"
                                        Opacity="0">
                            <StackPanel Orientation="Horizontal"
                                        Spacing="{StaticResource SecondaryCommandContentSpacing}">
                                <TextBlock x:Name="SecondaryText"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           FontSize="{StaticResource BodyFontSize}"
                                           FontWeight="{StaticResource BodyFontWeight}"
                                           Foreground="{ThemeResource TextWeakColorBrush}"
                                           Text="{TemplateBinding SecondaryCommandText}"
                                           Visibility="{Binding SecondaryCommandText, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}" />
                                <ContentPresenter x:Name="SecondaryIcon"
                                                  Grid.Column="0"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  AutomationProperties.AccessibilityView="Raw"
                                                  Content="{TemplateBinding SecondaryCommandIcon}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  HighContrastAdjustment="None"
                                                  Opacity="0.65"
                                                  Visibility="{Binding Content, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NotNullToVisibilityConverter}}" />
                            </StackPanel>
                        </ContentControl>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="HoveringStates">
                                <VisualState x:Name="PrimaryActionHovered">
                                    <VisualState.StateTriggers>
                                        <StateTrigger IsActive="{Binding IsPointerOver, ElementName=PrimaryButton}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryContainer.Visibility" Value="{Binding PrimaryCommandContent, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}" />
                                        <Setter Target="SecondaryContainer.Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SecondaryActionHovered">
                                    <VisualState.StateTriggers>
                                        <StateTrigger IsActive="{Binding IsPointerOver, ElementName=SecondaryButton}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryContainer.Opacity" Value="1" />
                                        <Setter Target="SecondaryText.Foreground" Value="{ThemeResource TextNormColorBrush}" />
                                        <Setter Target="SecondaryIcon.Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoneHovered" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusingStates">
                                <VisualState x:Name="PrimaryActionFocused">
                                    <VisualState.StateTriggers>
                                        <StateTrigger IsActive="{Binding FocusState, ElementName=PrimaryButton, Converter={StaticResource FocusStateToBooleanConverter}}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryContainer.Visibility" Value="{Binding PrimaryCommandContent, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}" />
                                        <Setter Target="SecondaryContainer.Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SecondaryActionFocused">
                                    <VisualState.StateTriggers>
                                        <StateTrigger IsActive="{Binding FocusState, ElementName=SecondaryButton, Converter={StaticResource FocusStateToBooleanConverter}}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryContainer.Opacity" Value="1" />
                                        <Setter Target="SecondaryText.Foreground" Value="{ThemeResource TextNormColorBrush}" />
                                        <Setter Target="SecondaryIcon.Opacity" Value="1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoneFocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisablingStates">
                                <VisualState x:Name="RowContentDisabled">
                                    <VisualState.StateTriggers>
                                        <StateTrigger IsActive="{Binding IsContentEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NotBooleanToBooleanConverter}}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Opacity" Value="0.5" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RowContentEnabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>