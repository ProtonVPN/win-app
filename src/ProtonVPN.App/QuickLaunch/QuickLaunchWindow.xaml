<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<Window x:Class="ProtonVPN.QuickLaunch.QuickLaunchWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:calcBinding="clr-namespace:CalcBinding;assembly=CalcBinding"
        xmlns:profiles="clr-namespace:ProtonVPN.Profiles"
        xmlns:translations="clr-namespace:ProtonVPN.Translations;assembly=ProtonVPN.Translations"
        xmlns:quickLaunch="clr-namespace:ProtonVPN.QuickLaunch"
        xmlns:resource="clr-namespace:ProtonVPN.Resource;assembly=ProtonVPN.Resource"
        xmlns:logos="clr-namespace:ProtonVPN.Resource.Graphics.Logos;assembly=ProtonVPN.Resource"
        xmlns:icons="clr-namespace:ProtonVPN.Resource.Graphics.Icons;assembly=ProtonVPN.Resource"
        xmlns:sidebar="clr-namespace:ProtonVPN.Sidebar"
        xmlns:graphics="clr-namespace:ProtonVPN.Resource.Graphics;assembly=ProtonVPN.Resource"
        xmlns:controls="clr-namespace:ProtonVPN.Views.Controls"
        WindowStyle="None"
        ShowInTaskbar="False"
        ResizeMode="CanMinimize"
        mc:Ignorable="d"
        FlowDirection="{Binding FlowDirection}"
        SizeToContent="WidthAndHeight"
        Title="QuickLaunchWindow"
        Topmost="True"
        d:DataContext="{d:DesignInstance quickLaunch:QuickLaunchViewModel}">
    <Window.Resources>
        <ResourceDictionary>
            <Style BasedOn="{StaticResource ClearStyleButton}" x:Key="OpenAppButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="20,11"/>
            </Style>
            <Style x:Key="QuickConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="{StaticResource InteractionNormBrushColor}"/>
                <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Content" Value="{translations:Loc QuickLaunch_btn_Connect}"/>
                <Setter Property="Padding" Value="10,0,10,1"/>
                <Setter Property="Width" Value="250"/>
                <Setter Property="Command" Value="{Binding QuickConnectCommand}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsToShowProfileSelection}" Value="False">
                        <Setter Property="Width" Value="310" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Disconnected}" Value="False">
                        <Setter Property="Content" Value="{translations:Loc QuickLaunch_btn_Disconnect}"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                            <Condition Binding="{Binding Disconnected}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BorderNormBrushColor}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            <Condition Binding="{Binding Disconnected}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}"/>
                        <Setter Property="Background" Value="{StaticResource SignalDangerBrushColor}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            <Condition Binding="{Binding Disconnected}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}"/>
                        <Setter Property="Background" Value="{StaticResource InteractionNormHoverBrushColor}"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="QuickConnectDropdown" TargetType="Border">
                <Setter Property="Width" Value="308"/>
                <Setter Property="Background" Value="{StaticResource BackgroundWeakBrushColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderWeakBrushColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Padding" Value="0,10,0,20"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
            </Style>
            <Style x:Key="QuickToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource EmptyToggleButton}">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Margin" Value="10,0,0,0"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderNormBrushColor}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="IsEnabled" Value="{calcBinding:Binding ElementName=Popup, Path='!IsOpen'}"/>
                <Setter Property="IsChecked" Value="{Binding ShowQuickConnectPopup, Mode=TwoWay}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource InteractionDefaultHoverBrushColor}"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding IsOpen, ElementName=Popup}" Value="True">
                        <Setter Property="Background" Value="{StaticResource InteractionDefaultActiveBrushColor}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="QuickConnectChevron" TargetType="UserControl">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsOpen, ElementName=Popup}" Value="True">
                        <Setter Property="RenderTransformOrigin" Value="0,0.55"/>
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleY="-1" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="QuickConnectPopup" TargetType="Popup">
                <Setter Property="IsOpen" Value="{Binding IsChecked, ElementName=TogglePopupButton, Mode=TwoWay}"/>
                <Setter Property="StaysOpen" Value="False"/>
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="Placement" Value="Top"/>
                <Setter Property="PlacementTarget" Value="{Binding ElementName=QuickConnect}"/>
                <Setter Property="PlacementRectangle" Value="0,-10,0,0"/>
            </Style>
            <Style x:Key="QuickConnectLabel" TargetType="Label">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Foreground" Value="{StaticResource TextHintBrushColor}"/>
                <Setter Property="Margin" Value="15,0,0,10"/>
            </Style>
            <Style x:Key="ProfileButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Command" Value="{Binding Path=DataContext.ProfileConnectCommand, RelativeSource={RelativeSource AncestorType=Window}}"/>
                <Setter Property="CommandParameter" Value="{Binding}"/>
                <Setter Property="Padding" Value="15,0"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Border.CornerRadius" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource InteractionDefaultHoverBrushColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ProfileName" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="5,0,0,1"/>
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                <Setter Property="Width" Value="240"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Border BorderThickness="1" BorderBrush="{StaticResource BorderWeakBrushColor}">
        <StackPanel Width="350" Background="{StaticResource BackgroundNormBrushColor}">
            <DockPanel Background="{StaticResource BackgroundWeakBrushColor}" Height="58" VerticalAlignment="Top">
                <Button Command="{Binding ShowAppCommand}" 
                        Style="{StaticResource ClearStyleButton}"
                        Margin="15,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center">
                    <logos:ProtonVpnLogo Width="120"
                                         VerticalAlignment="Center"
                                         Background="Transparent" />
                </Button>
                <Button HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Padding="21"
                        BorderBrush="Transparent"
                        PreviewMouseLeftButtonDown="UIElement_OnMouseLeftButtonDown">
                    <icons:CrossBig UseLayoutRounding="True"
                                    Width="16"
                                    Height="16"
                                    Foreground="{StaticResource TextNormBrushColor}" />
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Border.CornerRadius" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BackgroundStrongBrushColor}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DockPanel>

            <Grid Height="80" Margin="20,10" HorizontalAlignment="Left">
                <StackPanel VerticalAlignment="Center">
                    <StackPanel Visibility="{Binding Connected, Converter={StaticResource BoolToVis}}">
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <Image VerticalAlignment="Center"
                                   Width="21" 
                                   Height="15"
                                   Source="{Binding CountryCode, Converter={StaticResource CountryToFlagConverter}}"
                                   AutomationProperties.AutomationId="{StaticResource QuickLaunchFlag}"
                                   Visibility="{Binding IsB2B, Converter={StaticResource InvertedBoolToVis}}"/>
                            <icons:Servers HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Width="21" Height="20"
                                           Foreground="{StaticResource TextNormBrushColor}"
                                           Visibility="{Binding IsB2B, Converter={StaticResource BoolToVis}}"/>
                            <controls:ServerName Width="280"
                                                 FontSize="16" 
                                                 FontWeight="Bold"
                                                 Padding="10,0,0,0" 
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,0,1"
                                                 ConnectionName="{Binding ConnectionName}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,8" FlowDirection="LeftToRight" HorizontalAlignment="Left">
                            <Label Foreground="{StaticResource TextNormBrushColor}"
                                   Padding="0"
                                   FontSize="14"
                                   Content="IP:"/>
                            <Label Foreground="{StaticResource TextNormBrushColor}"
                                   Padding="3,0,0,0"
                                   FontWeight="Bold"
                                   FontSize="14"
                                   AutomationProperties.AutomationId="{StaticResource IPAddressTextBlock}"
                                   Content="{Binding Ip}" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Visibility="{Binding Connecting, Converter={StaticResource BoolToVis}}" 
                                Orientation="Vertical"
                                Margin="0,15">
                        <StackPanel Orientation="Horizontal">
                            <graphics:BrandLoader Name="Spinner" 
                                                  Margin="1,0,1,0"
                                                  Style="{StaticResource Loader}"
                                                  Foreground="{StaticResource PrimaryBrushColor}"
                                                  resource:ControlExtension.Spin="{Binding Connecting}"
                                                  Visibility="{Binding Connecting, Converter={StaticResource BoolToVis}}" />
                            <TextBlock FontSize="14" 
                                       Padding="10,0,0,0" 
                                       VerticalAlignment="Center"
                                       Foreground="{StaticResource TextNormBrushColor}" 
                                       Text="{translations:Loc QuickLaunch_lbl_Connecting}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                            <Image VerticalAlignment="Center" 
                                   Width="21" 
                                   Height="15"
                                   Source="{Binding CountryCode, Converter={StaticResource CountryToFlagConverter}}"
                                   Visibility="{Binding IsB2B, Converter={StaticResource InvertedBoolToVis}}"/>
                            <icons:Servers HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Width="21" Height="20"
                                           Foreground="{StaticResource TextNormBrushColor}"
                                           Visibility="{Binding IsB2B, Converter={StaticResource BoolToVis}}"/>
                            <controls:ServerName Width="280"
                                                 FontSize="16" 
                                                 FontWeight="Bold"
                                                 Padding="10,0,0,0" 
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,0,1"
                                                 ConnectionName="{Binding ConnectionName}" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Visibility="{Binding Disconnected, Converter={StaticResource BoolToVis}}"
                                Margin="0,15">
                        <sidebar:DisconnectedConnectionDetails DataContext="{Binding Ip, Mode=OneWay}"/>
                    </StackPanel>

                </StackPanel>
            </Grid>

            <Grid Margin="20,0,20,0">
                <DockPanel HorizontalAlignment="Stretch">
                    <Button Name="QuickConnect" Style="{StaticResource QuickConnectButton}" />
                    <ToggleButton Style="{StaticResource QuickToggleButton}"
                                  Visibility="{Binding IsToShowProfileSelection, Converter={StaticResource BoolToVis}}"
                                  x:Name="TogglePopupButton">
                        <icons:ChevronUp Style="{StaticResource QuickConnectChevron}" />
                    </ToggleButton>
                </DockPanel>

                <Popup Name="Popup" Style="{StaticResource QuickConnectPopup}">
                    <Border Style="{StaticResource QuickConnectDropdown}">
                        <StackPanel>
                            <Label Style="{StaticResource QuickConnectLabel}" Content="{translations:Loc QuickLaunch_lbl_Profiles}"/>
                            <ScrollViewer Template="{StaticResource DarkScrollViewerControlTemplate}" PanningMode="VerticalOnly" MaxHeight="250">
                                <ItemsControl ItemsSource="{Binding Profiles}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <Border BorderBrush="{StaticResource BorderWeakBrushColor}" BorderThickness="0,0,0,1">
                                                            <ContentPresenter Content="{Binding}"/>
                                                        </Border>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ItemsControl.Resources>
                                        <DataTemplate DataType="{x:Type profiles:PredefinedProfileViewModel}">
                                            <Button Style="{StaticResource ProfileButton}">
                                                <StackPanel Orientation="Horizontal">
                                                    <ContentPresenter Content="{Binding}" 
                                                                      ContentTemplate="{StaticResource ProfileIconDataTemplate}"
                                                                      Width="25"
                                                                      Height="20"
                                                                      VerticalAlignment="Center"/>
                                                    <TextBlock Text="{Binding Text}" Style="{StaticResource ProfileName}" />
                                                </StackPanel>
                                            </Button>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type profiles:ProfileViewModel}">
                                            <Button Style="{StaticResource ProfileButton}">
                                                <StackPanel Orientation="Horizontal">
                                                    <StackPanel Width="25" VerticalAlignment="Center">
                                                        <Border Background="{Binding Color}" Width="13" Height="13" CornerRadius="7.5"/>
                                                    </StackPanel>
                                                    <TextBlock Text="{Binding Name}" Style="{StaticResource ProfileName}" />
                                                </StackPanel>
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.Resources>
                                </ItemsControl>
                            </ScrollViewer>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>

            <controls:ChangeServerButton Visibility="{Binding IsToShowChangeServerButton, Converter={StaticResource BoolToVis}}"
                                         Width="310"
                                         Margin="0,8,0,0"
                                         TimeLeft="{Binding ChangeServerTimeLeft, UpdateSourceTrigger=PropertyChanged}"
                                         Command="{Binding ChangeServerCommand}"
                                         AutomationProperties.AutomationId="{StaticResource SidebarChangeServerButton}" />

            <StackPanel Height="42"
                        Margin="0,24,0,0"
                        Background="{StaticResource BackgroundWeakBrushColor}">
                <Button Command="{Binding ShowAppCommand}" Style="{StaticResource OpenAppButton}" Content="{translations:Loc QuickLaunch_btn_OpenApp}"/>
            </StackPanel>
        </StackPanel>
    </Border>
</Window>