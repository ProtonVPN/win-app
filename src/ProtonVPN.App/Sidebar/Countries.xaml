<!--
Copyright (c) 2023 Proton AG

This file is part of ProtonVPN.

ProtonVPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ProtonVPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ProtonVPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="ProtonVPN.Sidebar.Countries"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:ProtonVPN.Views.Controls"
             xmlns:servers="clr-namespace:ProtonVPN.Servers"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:sidebar="clr-namespace:ProtonVPN.Sidebar"
             xmlns:translations="clr-namespace:ProtonVPN.Translations;assembly=ProtonVPN.Translations"
             xmlns:wpf="clr-namespace:ProtonVPN.Core.Wpf"
             xmlns:quickSettings="clr-namespace:ProtonVPN.Sidebar.QuickSettings"
             xmlns:countryFeatures="clr-namespace:ProtonVPN.Sidebar.CountryFeatures"
             xmlns:icons="clr-namespace:ProtonVPN.Resource.Graphics.Icons;assembly=ProtonVPN.Resource"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300"
             d:DataContext="{d:DesignInstance sidebar:CountriesViewModel}">

    <UserControl.Resources>
        <Style x:Key="ServerRowItem" TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Background" Value="{StaticResource BackgroundNormBrushColor}" />
        </Style>
        <Style x:Key="ServerFlagImage" TargetType="Image">
            <Setter Property="Width" Value="21" />
            <Setter Property="Height" Value="15" />
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SecureCore}"
                    Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="LoadBubbleLeft" TargetType="UserControl">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,12,0" />
            <Setter Property="Width" Value="21" />
        </Style>
        <Style x:Key="ServerRowStackPanel" TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Orientation" Value="Horizontal" />
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SecureCore}"
                    Value="False">
                    <Setter Property="Margin" Value="32,0,0,0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonArrow" TargetType="UserControl">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="23" />
        </Style>
        <Style x:Key="OutterToggleBorder" TargetType="Border">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="CornerRadius" Value="16" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderWeakBrushColor}" />
            <Setter Property="Width" Value="32" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style x:Key="InnerToggleBorder" TargetType="Border">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="CornerRadius" Value="13" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="-1" />
        </Style>
        <Style x:Key="ToggleButton" TargetType="Button">
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.Expand}"
                                        CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border x:Name="OutterToggleBorder" Style="{StaticResource OutterToggleBorder}">
                                <Border x:Name="InnerToggleBorder" Style="{StaticResource InnerToggleBorder}" />
                            </Border>
                            <StackPanel VerticalAlignment="Center">
                                <icons:ChevronDown x:Name="ArrowDown" Style="{StaticResource ToggleButtonArrow}" />
                                <icons:ChevronUp x:Name="ArrowUp" Visibility="Collapsed" Style="{StaticResource ToggleButtonArrow}" />
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Maintenance}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Expanded}" Value="True">
                                <Setter TargetName="ArrowDown" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="ArrowUp" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="InnerToggleBorder" Property="Background" Value="{StaticResource InteractionNormHoverBrushColor}" />
                                <Setter TargetName="OutterToggleBorder" Property="BorderBrush" Value="{StaticResource InteractionNormHoverBrushColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SearchPlaceholder" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Padding" Value="0,0,0,2" />
            <Setter Property="Foreground" Value="{StaticResource TextHintBrushColor}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Text" Value="{translations:Loc Sidebar_Countries_lbl_Search_Watermark}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=SearchInput}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsFocused, ElementName=SearchInput}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SearchInputStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="CaretBrush" Value="{StaticResource TextNormBrushColor}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Text" Value="{Binding SearchValue, UpdateSourceTrigger=PropertyChanged}" />
        </Style>
        <Style x:Key="ServerFeatures" TargetType="sidebar:ServerFeatures">
            <Setter Property="Visibility" Value="Visible" />
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SecureCore}"
                    Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="City" TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource TextWeakBrushColor}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="0,0,0,3" />
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                    Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Connected}" Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Server.Status}" Value="0">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ShowIp}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MaintenanceIcon" TargetType="UserControl">
            <Setter Property="Margin" Value="0,0,4,0" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Width" Value="22" />
            <Setter Property="Foreground" Value="{StaticResource TextWeakBrushColor}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="ToolTip" Value="{translations:Loc Sidebar_Countries_lbl_Maintenance}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Maintenance}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CountryMaintenanceIcon" BasedOn="{StaticResource MaintenanceIcon}" TargetType="UserControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Maintenance}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CountriesListView" TargetType="ListView">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <ScrollViewer PanningMode="VerticalOnly"
                                      Template="{StaticResource DarkScrollViewerControlTemplate}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SecureCoreExitCountry" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="0,0,0,2" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Dimmed}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource TextDisabledBrushColor}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CountrySeparator" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="0,0,0,2" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="{StaticResource TextHintBrushColor}" />
        </Style>
        <Style x:Key="CountryRow" TargetType="Border">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderWeakBrushColor}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Background" Value="{StaticResource BackgroundWeakBrushColor}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Maintenance}" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CountryFeatureIcon" TargetType="UserControl">
            <Setter Property="Foreground" Value="{StaticResource TextWeakBrushColor}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="18" />
            <Setter Property="Height" Value="18" />
            <Setter Property="Margin" Value="0,0,7,0" />
        </Style>
        <Style x:Key="GrayInfoIcon" TargetType="UserControl" BasedOn="{StaticResource InfoCircle}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <quickSettings:QuickSettingsView Grid.Row="0"
                                         DataContext="{Binding QuickSettingsViewModel}" />
        <Grid Grid.Row="1" Visibility="{c:Binding '!SecureCore'}">
            <Border x:Name="SearchBoxBorder"
                    CornerRadius="8"
                    Width="290"
                    Background="Transparent"
                    BorderThickness="1"
                    Margin="0,0,0,10"
                    Height="40">
                <DockPanel>
                    <icons:Magnifier Width="20"
                                     Height="20"
                                     Margin="10,0,0,0"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Left">
                        <icons:Magnifier.Style>
                            <Style TargetType="icons:Magnifier">
                                <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=SearchInput}" Value="">
                                        <Setter Property="Foreground" Value="{StaticResource TextHintBrushColor}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsFocused, ElementName=SearchInput}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </icons:Magnifier.Style>
                    </icons:Magnifier>
                    <Grid Margin="10,0,0,0" VerticalAlignment="Center">
                        <TextBox x:Name="SearchInput"
                                 Style="{StaticResource SearchInputStyle}"
                                 Padding="0,0,0,2"
                                 VerticalAlignment="Center" />
                        <TextBlock Style="{StaticResource SearchPlaceholder}" HorizontalAlignment="Stretch" />
                        <Button Name="ClearSearchButton"
                                Visibility="{Binding SearchNotEmpty, Converter={StaticResource BoolToVis}}"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                Margin="0,0,10,0"
                                Command="{Binding ClearSearchCommand}"
                                VerticalAlignment="Center">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ClearStyleButton}">
                                    <Setter Property="Foreground" Value="{StaticResource TextHintBrushColor}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <icons:CrossCircleFilled Foreground="{TemplateBinding Foreground}"
                                                                         Background="Transparent"
                                                                         VerticalAlignment="Center"
                                                                         Cursor="Hand"
                                                                         Width="20"
                                                                         Height="20" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource InteractionNormHoverBrushColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </DockPanel>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="{StaticResource BorderNormBrushColor}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=SearchInput}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource InteractionNormActiveBrushColor}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>          
        </Grid>

        <wpf:CustomListView x:Name="ListView"
                            BorderThickness="0"
                            Grid.Row="2"
                            Background="Transparent"
                            Padding="0"
                            Style="{StaticResource CountriesListView}"
                            ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}"
                            VirtualizingPanel.ScrollUnit="Pixel"
                            VirtualizingPanel.IsVirtualizing="True"
                            VirtualizingPanel.VirtualizationMode="Standard"
                            ScrollViewer.CanContentScroll="True"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.PanningMode="VerticalOnly">
            <wpf:CustomListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border x:Name="Border" Style="{StaticResource CountryRow}">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                 Value="{x:Type servers:CountryB2BSeparatorViewModel}">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                                        <Setter TargetName="Border" Property="MinHeight" Value="12" />
                                        <Setter TargetName="Border" Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                 Value="{x:Type servers:CountrySeparatorViewModel}">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                                        <Setter TargetName="Border" Property="MinHeight" Value="12" />
                                        <Setter TargetName="Border" Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                 Value="{x:Type servers:FreeConnectionSeparatorViewModel}">
                                        <Setter TargetName="Border" Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                 Value="{x:Type servers:ServersByGatewayViewModel}">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                 Value="{x:Type servers:ServersByGatewayViewModel}">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                 Value="{x:Type servers:ServersByCountryViewModel}">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                 Value="{x:Type servers:ServersByExitNodeViewModel}">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Connected}" Value="True" />
                                            <Condition Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                       Value="{x:Type servers:CountrySeparatorViewModel}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundStrongBrushColor}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Connected}" Value="True" />
                                            <Condition Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                       Value="{x:Type servers:ServersByCountryViewModel}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundStrongBrushColor}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Connected}" Value="True" />
                                            <Condition Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                                       Value="{x:Type servers:ServersByExitNodeViewModel}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundStrongBrushColor}" />
                                    </MultiDataTrigger>
                                    <DataTrigger
                                        Binding="{Binding Path=(wpf:CustomListView.ItemIndex), RelativeSource={RelativeSource Self}}"
                                        Value="0">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </wpf:CustomListView.ItemContainerStyle>
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type servers:FastestServerViewModel}">
                    <Border x:Name="Border" Height="48">
                        <Grid Width="310" Margin="27,3,0,3" HorizontalAlignment="Left">
                            <DockPanel Background="Transparent">
                                <icons:Bolt Foreground="{StaticResource TextNormBrushColor}"
                                            Margin="0,0,8,0"
                                            Width="20"
                                            Height="20" />
                                <TextBlock x:Name="CountryLabel"
                                           Text="{Binding Name}"
                                           FontSize="16"
                                           Style="{StaticResource CountrySeparator}"
                                           Foreground="{StaticResource TextNormBrushColor}"
                                           TextTrimming="CharacterEllipsis" />
                            </DockPanel>
                            <Button Style="{StaticResource SidebarCountryConnectButton}"
                                    Margin="0,0,30,0"
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ConnectFastest}" />
                        </Grid>
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:UpsellBannerViewModel}">
                    <controls:UpsellBanner Margin="-14,0,0,12"
                                           Width="282"
                                           Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.Upgrade}">
                        <controls:UpsellBanner.Style>
                            <Style TargetType="controls:UpsellBanner">
                                <Setter Property="Title" Value="{translations:Loc Servers_UpsellBanner}" />
                                <Setter Property="ImagePath" Value="pack://application:,,,/ProtonVPN.Resource;component/Graphics/Images/worldwide-coverage-small.png" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsToShowNotTheCountryYouWanted}" Value="True">
                                        <Setter Property="Title" Value="{translations:Loc Servers_UpsellBanner_NotTheCountryYouWanted}" />
                                        <Setter Property="ImagePath" Value="pack://application:,,,/ProtonVPN.Resource;component/Graphics/Images/wrong-country.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:UpsellBanner.Style>
                    </controls:UpsellBanner>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:CountryB2BSeparatorViewModel}">
                    <Border x:Name="Border" Height="48">
                        <Grid Width="310" Margin="27,3,0,3" HorizontalAlignment="Left">
                            <TextBlock x:Name="CountryLabel"
                                       Text="{Binding Name}"
                                       Style="{StaticResource CountrySeparator}"
                                       TextTrimming="CharacterEllipsis" />
                            <DockPanel Margin="27,0" HorizontalAlignment="Right">
                                <countryFeatures:CountryB2BPopupView
                                    DataContext="{Binding CountryB2BPopupViewModel}" />
                            </DockPanel>
                        </Grid>
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:CountrySeparatorViewModel}">
                    <Border x:Name="Border" Height="48">
                        <Grid Width="310" Margin="27,3,0,3" HorizontalAlignment="Left">
                            <TextBlock x:Name="CountryLabel"
                                       Text="{Binding Name}"
                                       Style="{StaticResource CountrySeparator}"
                                       TextTrimming="CharacterEllipsis" />
                            <DockPanel Margin="27,0" HorizontalAlignment="Right">
                                <countryFeatures:CountryFeaturesPopupView
                                    DataContext="{Binding CountryFeaturesPopupViewModel}" />
                            </DockPanel>
                        </Grid>
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:FreeConnectionSeparatorViewModel}">
                    <Border x:Name="Border" Height="48">
                        <Grid Width="310" Margin="27,3,0,3" HorizontalAlignment="Left">
                            <TextBlock x:Name="CountryLabel"
                                       Text="{Binding Name}"
                                       Style="{StaticResource CountrySeparator}"
                                       TextTrimming="CharacterEllipsis" />
                            <Button Style="{StaticResource ClearStyleButton}"
                                    HorizontalAlignment="Right"
                                    Margin="0,0,30,0"
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ShowFreeConnectionsModalCommand}"
                                    Background="Transparent"
                                    BorderBrush="Transparent">
                                <icons:InfoCircleFilled Style="{StaticResource GrayInfoIcon}" />
                            </Button>
                        </Grid>
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:ServerTierSeparatorViewModel}">
                    <Border Cursor="Arrow" Background="{StaticResource BackgroundNormBrushColor}">
                        <DockPanel Margin="27,0" x:Name="PopupPanel">
                            <TextBlock x:Name="CountryLabel"
                                       Text="{Binding Name}"
                                       Style="{StaticResource CountrySeparator}"
                                       TextTrimming="CharacterEllipsis" />
                            <ToggleButton x:Name="InfoToggleButton"
                                          DockPanel.Dock="Right"
                                          Visibility="{Binding IsToShowInfoIcon, Converter={StaticResource BoolToVis}}"
                                          Style="{StaticResource EmptyToggleButton}"
                                          IsChecked="{Binding ShowPopup, Mode=TwoWay}"
                                          Background="Transparent"
                                          BorderBrush="Transparent">
                                <icons:InfoCircleFilled Style="{StaticResource GrayInfoIcon}" />
                            </ToggleButton>
                            <servers:InfoPopup DataContext="{Binding InfoPopupViewModel}"
                                               Title="{Binding Title}"
                                               PlacementTarget="{Binding ElementName=PopupPanel}"
                                               ShowPopup="{Binding Path=IsChecked, ElementName=InfoToggleButton, Mode=TwoWay}" />
                        </DockPanel>
                    </Border>
                </DataTemplate>
                <DataTemplate x:Key="BaseTemplate" DataType="{x:Type servers:ServersByCountryViewModel}">
                    <Border x:Name="Border" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.Expand}"
                                    CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid MinHeight="48" Margin="27,0">
                            <Image HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Source="{Binding CountryCode, Converter={StaticResource CountryToFlagConverter}}"
                                   Width="21" Height="15"
                                   Visibility="{Binding IsB2B, Converter={StaticResource InvertedBoolToVis}}" />
                            <icons:Servers HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Width="21" Height="20"
                                           Foreground="{StaticResource TextNormBrushColor}"
                                           Visibility="{Binding IsB2B, Converter={StaticResource BoolToVis}}"/>
                            <Grid Width="220">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0"
                                           Text="{Binding Name}"
                                           ToolTip="{Binding Name}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Padding="0,0,0,2"
                                           TextTrimming="CharacterEllipsis"
                                           FontSize="16">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Dimmed}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource TextDisabledBrushColor}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="0,0,5,0">
                                    <StackPanel.Resources>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Dimmed}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Resources>
                                    <icons:BrandTor Style="{StaticResource CountryFeatureIcon}"
                                                    Visibility="{Binding Tor, Converter={StaticResource BoolToVis}}" />
                                    <icons:ArrowsSwitch Style="{StaticResource CountryFeatureIcon}"
                                                        Visibility="{Binding P2P, Converter={StaticResource BoolToVis}}" />
                                    <icons:Globe Style="{StaticResource CountryFeatureIcon}"
                                                 Visibility="{Binding IsVirtual, Converter={StaticResource BoolToVis}}" />
                                </StackPanel>

                                <Button Grid.Column="2"
                                        Style="{StaticResource SidebarCountryConnectButton}"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ConnectCountry}"
                                        CommandParameter="{Binding}" />
                            </Grid>

                            <Button Style="{StaticResource ToggleButton}" />
                            <icons:Wrench Style="{StaticResource CountryMaintenanceIcon}" />
                        </Grid>
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:ServersByExitNodeViewModel}">
                    <Border x:Name="Border" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.Expand}"
                                    CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid MinHeight="48" Margin="27,0">
                            <StackPanel Orientation="Horizontal">
                                <Image HorizontalAlignment="Left" VerticalAlignment="Center"
                                       Source="{Binding CountryCode, Converter={StaticResource CountryToFlagConverter}}"
                                       Width="21" Height="15" />
                                <icons:ChevronsRight Width="18" 
                                                     Margin="6,0,0,0"
                                                     Foreground="{StaticResource PrimaryBrushColor}"
                                                     VerticalAlignment="Center"/>
                            </StackPanel>

                            <Grid Width="200" Margin="50,0,0,0" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0"
                                           x:Name="CountryLabel"
                                           Text="{Binding Name}"
                                           Style="{StaticResource SecureCoreExitCountry}"
                                           TextTrimming="CharacterEllipsis" />
                                <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="0,0,5,0">
                                    <StackPanel.Resources>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Dimmed}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Resources>
                                    <icons:Globe Style="{StaticResource CountryFeatureIcon}"
                                                 Visibility="{Binding IsVirtual, Converter={StaticResource BoolToVis}}" />
                                </StackPanel>
                                <Button Grid.Column="2"
                                        Style="{StaticResource SidebarCountryConnectButton}"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ConnectCountry}"
                                        CommandParameter="{Binding}" />
                            </Grid>
                            <Button Style="{StaticResource ToggleButton}" />
                            <icons:Wrench Style="{StaticResource CountryMaintenanceIcon}" />
                        </Grid>
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:ServerItemViewModel}">
                    <Grid Style="{StaticResource ServerRowItem}">
                        <Grid Margin="27,0">
                            <controls:LoadBubble Margin="-2,0,0,0" Width="32" Height="32"
                                                 DataContext="{Binding ConnectionInfoViewModel}"
                                                 Style="{StaticResource LoadBubbleLeft}" />
                            <StackPanel Style="{StaticResource ServerRowStackPanel}">
                                <controls:ServerName ConnectionName="{Binding ConnectionName}"
                                                     Margin="0,-3,0,0"
                                                     FontSize="16" />
                                <sidebar:ServerFeatures Features="{Binding Features}"
                                                        Style="{StaticResource ServerFeatures}" />
                            </StackPanel>
                            <Label Style="{StaticResource City}" 
                                   FontSize="14"
                                   FontWeight="Normal"
                                   Content="{Binding Server.City}" />
                            <Button Style="{StaticResource UpgradeButton}"
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.Upgrade}"
                                    CommandParameter="{Binding}" />
                            <Button Margin="38,0,0,0"
                                    Style="{StaticResource SidebarServerConnectButton}"
                                    Command="{Binding DataContext.Connect, RelativeSource={RelativeSource AncestorType=ListView}}"
                                    CommandParameter="{Binding}" />
                            <icons:Wrench Style="{StaticResource MaintenanceIcon}" />
                        </Grid>
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:SecureCoreItemViewModel}">
                    <Grid Style="{StaticResource ServerRowItem}">
                        <Grid Margin="27,0">
                            <controls:LoadBubble Margin="-2,0,0,0" Width="32" Height="32"
                                                 DataContext="{Binding ConnectionInfoViewModel}"
                                                 Style="{StaticResource LoadBubbleLeft}" />
                            <Image Margin="33,0,10,0"
                                   HorizontalAlignment="Left"
                                   Source="{Binding Path=Server.EntryCountry, Converter={StaticResource CountryToFlagConverter}, Mode=OneWay}"
                                   Style="{StaticResource ServerFlagImage}" />
                            <Grid Width="220" Margin="60,0,0,0" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Style="{StaticResource ServerName}" Margin="0,-2,0,0"
                                           FontSize="16" TextTrimming="CharacterEllipsis">
                                    <StackPanel>
                                        <TextBlock>
                                            <Run Text="{translations:Loc Servers_lbl_ViaCountry}" />
                                            <Run
                                                Text="{Binding Server.EntryCountry, Converter={StaticResource CountryCodeToNameConverter}, Mode=OneWay}">
                                                <Run.Style>
                                                    <Style TargetType="Run">
                                                        <Setter Property="Foreground" Value="{StaticResource TextNormBrushColor}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource TextDisabledBrushColor}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Run.Style>
                                            </Run>
                                        </TextBlock>
                                    </StackPanel>
                                    <icons:ChevronsRight Width="18" 
                                                         Margin="3,0,0,0"
                                                         Foreground="{StaticResource PrimaryBrushColor}"
                                                         VerticalAlignment="Center"/>
                                </TextBlock>

                                <Button Grid.Column="1"
                                        Style="{StaticResource SidebarServerConnectButton}"
                                        Command="{Binding DataContext.Connect, RelativeSource={RelativeSource AncestorType=ListView}}"
                                        CommandParameter="{Binding}" />
                            </Grid>
                            <icons:Wrench Style="{StaticResource MaintenanceIcon}" />
                        </Grid>
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:ServersByCountryViewModel}">
                    <ContentPresenter ContentTemplate="{StaticResource BaseTemplate}" />
                </DataTemplate>
            </ItemsControl.Resources>
        </wpf:CustomListView>
    </Grid>
</UserControl>