.test_execution_script:
  stage: ui-test
  dependencies:
    - build-installer
  tags:
    - e2e-tests
  script:
    - ci\test-scripts\uninstall-app.ps1
    - ci\test-scripts\install-the-app.ps1
    - dotnet build src/Tests/ProtonVPN.UI.Tests/ProtonVPN.UI.Tests.csproj --arch x64 -o src/bin
    - VSTest.Console.exe src\bin\ProtonVPN.UI.Tests.dll /Settings:ci/test-scripts/TestRun/test-run-settings.xml /TestCaseFilter:"Category=${CATEGORY}"
    - ci\test-scripts\uninstall-app.ps1
  except:
    - /^debug.*$/
    - release/9.9.9
    - master
  artifacts:
    when: always
    name: "result-ui"
    paths:
      - $TEST_ARTIFACT_PATH
    expire_in: 1 weeks
    
.build-script:
  stage: build
  tags:
    - windows-dot-net
  script:
    - echo "Building native dependencies..."
    - 'c:\nuget\nuget.exe restore ProtonVPN.InstallActions.sln'
    - cmd.exe /c BuildDependencies.bat $DEPENDENCIES
    - echo "Downloading translations from crowdin..."
    - python ci\build-scripts\main.py add-commit-hash $env:CI_COMMIT_SHORT_SHA
    - python ci\build-scripts\main.py defaultConfig
    - echo "Publishing ${TYPE}..."
    - dotnet publish ProtonVpn.sln -c ${TYPE} -r win-x64 --self-contained -o $BUILD_PATH
    - msbuild src\ProtonVPN.NativeHost\NativeHost.vcxproj /p:Configuration=Release /p:Platform=x64
  artifacts:
    expire_in: 1 day
    paths:
      - $BUILD_PATH
      - src/ProtonVPN.NativeHost/bin/
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    
.build-installer:
  stage: build-installer
  tags:
    - windows
  script:
    - python ci\build-scripts\main.py update-gh-list
    - python ci\build-scripts\main.py app-installer $env:CI_COMMIT_SHORT_SHA
  artifacts:
    paths:
      - Setup/Installers/
    expire_in: 4 weeks