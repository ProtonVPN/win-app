.ui_test_execution_script:
  stage: ui-test
  tags:
    - redesign
  hooks:
    pre_get_sources_script:
      - Get-Process | Where-Object { $_.Name -like "proton*" } | Stop-Process -Force
  script:
    - ci\test-scripts\uninstall-app.ps1
    - ci\test-scripts\install-the-app.ps1
    - dotnet build src/Tests/ProtonVPN.UI.Tests/ProtonVPN.UI.Tests.csproj --arch x64 -o src/bin/e2e
    - ci\test-scripts\run-tests.ps1 -Category ${CATEGORY}
    - ci\test-scripts\uninstall-app.ps1
  artifacts:
    when: always
    name: "result-ui"
    paths:
      - $SCREENSHOT_PATH
    expire_in: 1 weeks
  
.unit_test_config:
  stage: test
  tags:
    - windows-dot-net
  needs: []
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    
.build-script:
  stage: build
  tags:
    - windows-dot-net
  script:
    - echo "Building native dependencies..."
    - nuget restore ProtonVPN.InstallActions.sln
    - cmd.exe /c BuildDependencies.bat $DEPENDENCIES
    - echo "Downloading translations from crowdin..."
    - python ci\build-scripts\main.py add-commit-hash $env:CI_COMMIT_SHORT_SHA
    - python ci\build-scripts\main.py defaultConfig
    - dotnet build src\Builds\ProtonVPN.Builds.ConsoleJob\ProtonVPN.Builds.ConsoleJob.csproj
    - echo "Injecting CI variables"
    - src\bin\ProtonVPN.Builds.ConsoleJob.exe
    - echo "Publishing ${TYPE} Identifier ${RUNTIME_IDENTIFIER} Output ${BUILD_PATH} Paltform ${PLATFORM}"
    - dotnet publish src\Client\ProtonVPN.Client\ProtonVPN.Client.csproj -c ${TYPE} -r ${RUNTIME_IDENTIFIER} --self-contained -o ${BUILD_PATH} /p:Platform=${PLATFORM}
    - dotnet publish src\ProtonVPN.Service\ProtonVPN.Service.csproj -c ${TYPE} -r ${RUNTIME_IDENTIFIER} --self-contained -o ${BUILD_PATH} /p:Platform=${PLATFORM}
    - dotnet publish src\ProtonVPN.TlsVerify\ProtonVPN.TlsVerify.csproj -c ${TYPE} -r ${RUNTIME_IDENTIFIER} --self-contained -o ${BUILD_PATH} /p:Platform=${PLATFORM}
    - dotnet publish src\ProtonVPN.WireGuardService\ProtonVPN.WireGuardService.csproj -c ${TYPE} -r ${RUNTIME_IDENTIFIER} --self-contained -o ${BUILD_PATH} /p:Platform=${PLATFORM}
    - dotnet publish src\ProtonVPN.RestoreInternet\ProtonVPN.RestoreInternet.csproj -c ${TYPE} -r ${RUNTIME_IDENTIFIER} --self-contained -o ${BUILD_PATH} /p:Platform=${PLATFORM}
    - dotnet publish src\ProtonVPN.Launcher\ProtonVPN.Launcher.csproj -c ${TYPE} -r ${RUNTIME_IDENTIFIER} --self-contained -o ${BUILD_PATH} /p:Platform=${PLATFORM} -p:PublishSingleFile=true
  artifacts:
    expire_in: 1 day
    paths:
      - $BUILD_PATH
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    RUNTIME_IDENTIFIER: win-x64
    PLATFORM: x64
    
.build-installer:
  stage: build-installer
  tags:
    - windows-vpn-signer
  script:
    - python ci\build-scripts\main.py update-gh-list
    - python ci\build-scripts\main.py app-installer $env:CI_COMMIT_SHORT_SHA
  artifacts:
    paths:
      - Setup/Installers/
    expire_in: 4 weeks